var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.277,1,0.933]],["body/components/AppComponent.html",[0,0.417,1,1.519,2,1.246,3,0.081,4,0.081,5,0.912,6,0.912,7,0.912,8,0.071,9,3.471,10,1.82,11,2.045,12,2.674,13,0.864,14,2.021,15,2.073,16,2.986,17,1.213,18,1.089,19,1.279,20,5.626,21,1.386,22,5.541,23,1.386,24,5.541,25,0.071,26,0.128,27,2.293,28,0.976,29,2.486,30,1.881,31,1.015,32,1.763,33,2.354,34,1.223,35,5.541,36,0.798,37,0.01,38,0.779,39,0.122,40,0.587,41,3.949,42,0.949,43,1.56,44,3.949,45,0.756,46,0.696,47,1.502,48,2.293,49,0.874,50,0.658,51,1.549,52,1.193,53,1.826,54,3.949,55,1.65,56,1.1,57,3.471,58,3.949,59,2.577,60,3.949,61,0.081,62,0.604,63,1.502,64,1.826,65,3.949,66,1.893,67,3.949,68,1.119,69,3.949,70,3.471,71,2.921,72,3.949,73,3.471,74,1.705,75,1.65,76,0.912,77,1.279,78,1.279,79,0.819,80,1.602,81,0.912,82,0.912,83,0.864,84,1.213,85,1.279,86,0.864,87,0.715,88,1.834,89,0.864,90,0.912,91,0.864,92,0.842,93,0.912,94,0.864,95,0.819,96,0.864,97,0.912,98,0.864,99,0.864,100,0.842,101,0.864,102,0.912,103,0.864,104,0.912,105,0.864,106,0.776,107,0.864,108,0.912,109,0.864,110,0.912,111,0.864,112,0.912,113,0.864,114,0.912,115,0.864,116,0.888,117,1.478,118,0.864,119,0.888,120,0.912,121,0.864,122,0.912,123,0.864,124,0.912,125,0.864,126,0.912,127,0.864,128,0.912,129,0.864,130,0.912,131,0.864,132,0.912,133,0.864,134,0.864,135,0.912,136,0.864,137,0.677,138,0.864,139,0.912,140,0.864,141,0.912,142,0.864,143,0.912,144,0.864,145,0.912,146,0.864,147,0.912,148,0.864,149,0.819,150,0.864,151,0.912,152,0.864,153,0.912,154,0.864,155,0.912,156,0.864,157,0.864,158,0.864,159,0.888,160,0.842,161,0.888,162,0.912,163,0.006,164,0.006]],["title/injectables/AuthService.html",[165,1.671,166,3.406]],["body/injectables/AuthService.html",[3,0.102,4,0.102,8,0.089,16,2.653,25,0.089,26,0.149,28,1.134,34,1.452,36,1.448,37,0.011,38,0.805,39,0.222,40,1.065,42,1.351,45,1.231,46,1.134,49,0.886,50,0.82,56,1.371,61,0.102,62,0.753,116,1.107,163,0.007,164,0.007,165,2.523,166,5.142,167,2.653,168,4.327,169,4.433,170,4.676,171,6.434,172,5.655,173,6.68,174,6.68,175,7.167,176,6.434,177,4.701,178,4.923,179,5.377,180,4.833,181,6.434,182,4.701,183,4.923,184,4.923,185,4.923,186,4.923,187,4.701,188,4.433,189,0.944,190,4.923,191,6.434,192,4.923,193,3.98,194,6.434,195,4.923,196,3.045,197,3.045,198,2.359,199,3.212,200,2.198,201,1.167,202,2.899,203,4.327,204,2.769,205,2.591,206,4.923,207,4.923,208,4.923,209,2.975,210,4.923,211,4.923,212,4.923,213,4.923]],["title/components/BlogCategoriesComponent.html",[0,0.277,83,0.933]],["body/components/BlogCategoriesComponent.html",[0,0.338,1,0.604,2,0.956,3,0.057,4,0.057,5,0.637,6,0.637,7,0.637,8,0.05,10,1.397,11,1.658,12,2.168,13,0.604,14,1.973,15,2.024,17,0.931,18,0.836,19,0.982,21,1.064,23,1.064,25,0.05,26,0.099,27,1.859,28,0.749,29,2.089,30,1.581,31,0.708,32,1.231,33,2.068,34,1.399,36,1.048,37,0.011,38,0.843,39,0.206,40,0.771,42,1.141,43,1.611,45,1.274,46,1.173,47,1.407,48,1.859,49,0.915,50,0.459,51,1.081,52,0.833,55,1.152,56,0.768,59,1.799,61,0.057,62,0.422,63,1.049,64,1.275,66,1.322,68,0.557,73,2.424,74,1.191,75,1.152,76,0.637,77,0.982,78,0.982,79,0.572,80,1.347,81,0.637,82,0.637,83,1.277,84,1.568,85,0.982,86,0.931,87,1.257,88,1.654,89,0.604,90,0.637,91,0.604,92,0.588,93,0.637,94,0.604,95,0.572,96,0.604,97,0.637,98,0.604,99,0.604,100,1.419,101,0.604,102,0.637,103,0.604,104,0.637,105,0.604,106,0.542,107,0.604,108,0.637,109,0.604,110,0.637,111,0.604,112,0.637,113,0.604,114,0.637,115,0.604,116,0.62,117,1.198,118,0.604,119,0.62,120,0.637,121,0.604,122,0.637,123,0.604,124,0.637,125,0.604,126,0.637,127,0.604,128,0.637,129,0.604,130,0.637,131,0.604,132,0.637,133,0.604,134,0.604,135,0.637,136,0.604,137,0.473,138,0.604,139,0.637,140,0.604,141,0.637,142,0.604,143,0.637,144,0.604,145,0.637,146,0.604,147,0.637,148,0.604,149,0.572,150,0.604,151,0.637,152,0.604,153,0.637,154,0.604,155,0.637,156,0.604,157,0.604,158,0.604,159,0.62,160,0.588,161,0.62,162,0.637,163,0.005,164,0.005,189,0.56,201,0.654,214,5.931,215,7.047,216,2.424,217,2.814,218,2.796,219,2.582,220,2.796,221,2.796,222,2.796,223,2.1,224,1.806,225,3.056,226,3.738,227,3.738,228,2.796,229,2.796,230,2.973,231,2.796,232,2.796,233,2.291,234,1.669,235,5.127,236,2.116,237,3.435,238,2.582,239,2.902,240,2.758,241,2.291,242,2.758,243,1.322,244,2.758,245,2.758,246,2.758,247,3.738,248,3.587,249,2.758,250,2.758,251,2.758,252,2.758,253,2.758,254,1.116,255,3.281,256,2.758,257,2.758,258,2.291,259,2.758,260,2.291,261,2.758,262,0.906,263,1.486,264,1.322,265,1.322,266,2.291,267,1.486,268,1.486,269,1.486,270,1.486,271,1.486,272,1.018,273,1.116,274,0.959,275,1.551,276,2.424,277,2.04,278,2.758,279,2.04,280,1.486,281,0.906,282,1.486,283,1.427,284,1.486,285,2.424,286,1.486,287,1.486,288,4.252,289,2.116,290,2.775,291,2.2,292,2.2,293,2.2,294,1.667,295,1.569,296,2.168,297,2.2,298,1.018,299,2.204,300,2.424,301,1.486,302,2.291,303,3.738,304,1.486,305,1.486,306,1.486,307,1.486,308,1.486,309,2.291,310,2.291,311,1.966,312,2.63,313,2.943]],["title/components/BlogCategoryFormsComponent.html",[0,0.277,86,0.933]],["body/components/BlogCategoryFormsComponent.html",[0,0.37,1,0.7,2,1.07,3,0.066,4,0.066,5,0.739,6,0.739,7,0.739,8,0.058,10,1.564,11,1.815,13,0.7,14,1.995,15,2.046,17,1.042,18,0.936,19,1.099,21,1.19,23,1.19,25,0.058,26,0.11,28,0.838,30,1.706,31,1.223,33,2.268,34,1.286,36,0.646,37,0.011,38,0.82,39,0.195,40,0.475,42,0.974,43,1.415,45,0.911,46,0.838,49,0.842,50,0.533,52,0.967,59,2.088,61,0.066,62,0.489,68,0.646,76,0.739,77,1.099,78,1.099,79,0.664,80,1.453,81,0.739,82,0.739,83,0.7,84,1.642,85,1.099,86,1.377,87,1.553,88,1.732,89,0.7,90,0.739,91,0.7,92,0.682,93,0.739,94,0.7,95,0.664,96,0.7,97,0.739,98,0.7,99,0.7,100,0.682,101,0.7,102,0.739,103,0.7,104,0.739,105,0.7,106,0.629,107,0.7,108,0.739,109,0.7,110,0.739,111,0.7,112,0.739,113,0.7,114,0.739,115,0.7,116,0.719,117,1.312,118,1.377,119,0.719,120,0.739,121,0.7,122,0.739,123,1.377,124,0.739,125,0.7,126,0.739,127,0.7,128,0.739,129,0.7,130,0.739,131,0.7,132,0.739,133,0.7,134,0.7,135,0.739,136,0.7,137,0.548,138,0.7,139,0.739,140,0.7,141,0.739,142,0.7,143,0.739,144,0.7,145,0.739,146,0.7,147,0.739,148,0.7,149,0.664,150,0.7,151,0.739,152,0.7,153,0.739,154,0.7,155,0.739,156,0.7,157,0.7,158,0.7,159,0.719,160,0.682,161,0.719,162,0.739,163,0.006,164,0.006,198,1.534,201,0.759,205,1.051,214,5.548,224,1.977,234,1.8,248,3.062,272,1.181,274,1.113,277,2.367,279,5.548,281,1.051,295,2.768,296,3.05,298,2.097,299,4.541,314,5.994,315,1.724,316,2.803,317,2.374,318,2.939,319,2.803,320,2.803,321,3.346,322,6.292,323,6.292,324,1.884,325,3.255,326,3.197,327,3.197,328,3.54,329,2.812,330,2.462,331,2.812,332,2.812,333,2.812,334,2.803,335,2.462,336,2.557,337,2.557,338,2.557,339,1.592,340,1.217,341,1.8,342,1.592,343,1.429,344,1.8,345,1.8,346,1.8,347,4.759,348,3.2,349,1.884,350,1.884,351,2.2,352,3.2,353,2.462,354,2.215,355,2.677,356,3.2,357,1.655,358,3.2,359,2.677,360,2.677,361,4.759,362,2.2,363,2.677]],["title/injectables/BlogService.html",[165,1.671,364,3.406]],["body/injectables/BlogService.html",[3,0.089,4,0.089,8,0.078,16,2.332,25,0.078,26,0.137,28,1.04,31,1.112,34,1.468,36,1.611,37,0.011,38,0.896,39,0.247,40,1.185,42,1.367,45,1.13,46,1.04,47,1.173,49,0.848,50,0.721,56,1.205,61,0.089,62,0.662,63,1.646,84,1.471,92,1.432,100,1.432,163,0.007,164,0.007,165,2.315,167,2.332,169,3.652,170,4.384,179,4.709,180,4.852,189,1.085,193,4.465,196,4.465,197,2.677,201,1.026,202,2.549,204,2.435,205,2.621,248,2.332,299,4.718,362,2.001,364,4.718,365,3.804,366,5.906,367,5.904,368,5.904,369,4.718,370,7.218,371,5.904,372,5.904,373,2.824,374,5.904,375,5.904,376,4.25,377,4.328,378,5.904,379,4.06,380,4.328,381,5.904,382,4.328,383,5.189,384,5.904,385,4.328,386,3.804,387,4.328,388,5.904,389,4.709,390,4.328,391,3.477,392,5.904,393,4.328,394,4.328,395,4.367,396,2.332,397,2.996,398,2.239,399,4.367,400,2.435,401,3.804,402,4.328,403,4.367,404,3.201,405,3.459,406,4.328,407,4.328,408,3.459,409,3.804,410,3.804,411,3.804]],["title/components/BlogsComponent.html",[0,0.277,89,0.933]],["body/components/BlogsComponent.html",[0,0.325,1,0.567,2,0.911,3,0.053,4,0.053,5,0.598,6,0.598,7,0.598,8,0.047,10,1.331,11,1.593,12,2.084,13,0.567,14,1.963,15,2.013,17,0.887,18,0.796,19,0.935,21,1.013,23,1.013,25,0.047,26,0.094,27,1.787,28,0.714,29,2.02,30,1.529,31,0.665,32,1.157,33,2.016,34,1.395,36,1.139,37,0.011,38,0.762,39,0.21,40,0.838,42,1.162,43,1.622,45,1.241,46,1.143,47,1.352,48,1.787,49,0.905,50,0.432,51,1.016,52,0.783,55,1.082,56,0.721,59,1.69,61,0.053,62,0.396,63,0.985,64,1.198,66,1.241,68,0.523,74,1.118,75,1.082,76,0.598,77,0.935,78,0.935,79,0.537,80,1.302,81,0.598,82,0.598,83,0.567,84,1.536,85,0.935,86,0.567,87,0.469,88,1.62,89,1.235,90,0.598,91,0.887,92,1.383,93,0.598,94,0.567,95,0.537,96,0.567,97,0.598,98,0.567,99,0.567,100,0.552,101,0.567,102,0.598,103,0.567,104,0.598,105,0.567,106,0.509,107,0.567,108,0.598,109,0.567,110,0.598,111,0.567,112,0.598,113,0.567,114,0.598,115,0.567,116,0.582,117,1.152,118,0.567,119,0.582,120,0.598,121,0.567,122,0.598,123,0.567,124,0.598,125,0.567,126,0.598,127,0.567,128,0.598,129,0.567,130,0.598,131,0.567,132,0.598,133,0.567,134,0.567,135,0.598,136,0.567,137,0.444,138,0.567,139,0.598,140,0.567,141,0.598,142,0.567,143,0.598,144,0.567,145,0.598,146,0.567,147,0.598,148,0.567,149,0.537,150,0.567,151,0.598,152,0.567,153,0.598,154,0.567,155,0.598,156,0.567,157,0.567,158,0.567,159,0.582,160,0.552,161,0.582,162,0.598,163,0.005,164,0.005,189,0.534,201,0.614,217,2.733,218,2.687,219,2.481,220,2.687,221,2.687,222,2.687,223,2.018,224,1.735,228,2.687,229,2.687,230,2.897,231,2.687,232,2.687,233,2.182,234,1.614,236,2.015,237,3.321,238,2.481,239,2.806,241,2.182,243,1.241,254,1.079,255,3.173,258,2.182,260,2.182,262,0.851,263,1.396,264,1.241,265,1.241,266,1.396,267,1.396,268,1.396,269,1.396,270,1.396,271,1.396,272,0.956,273,1.048,274,0.901,275,1.457,277,1.916,281,0.851,282,1.396,283,1.34,284,1.396,286,1.396,287,1.396,289,2.481,291,2.58,292,2.58,293,2.58,294,1.956,295,1.84,296,2.084,297,2.095,298,0.956,301,1.396,302,2.182,304,1.396,305,1.396,306,1.396,307,1.396,308,1.396,309,2.182,310,3.496,311,3,343,1.157,369,2.07,396,3.886,412,2.277,413,3.254,414,3.689,415,4.987,416,4.05,417,4.05,418,5.64,419,2.803,420,2.59,421,2.59,422,2.59,423,2.59,424,2.59,425,4.05,426,2.59,427,2.59,428,4.05,429,2.59,430,2.59,431,2.59,432,2.59,433,2.518,434,2.081,435,3.039,436,3.903,437,2.356,438,2.59,439,2.59,440,2.59,441,2.59,442,2.59,443,1.916,444,2.59,445,2.59,446,2.59,447,2.59,448,2.59,449,2.59,450,2.59,451,4.987,452,2.803,453,3.237,454,2.59,455,2.996,456,3.56,457,3.237,458,4.05,459,4.05,460,4.05,461,4.05,462,3.56,463,2.095]],["title/components/BlogsFormComponent.html",[0,0.277,91,0.933]],["body/components/BlogsFormComponent.html",[0,0.334,1,0.593,2,0.943,3,0.056,4,0.056,5,0.626,6,0.626,7,0.626,8,0.105,10,1.378,11,1.64,13,0.593,14,1.971,15,2.021,17,0.918,18,0.825,19,0.969,21,1.049,23,1.049,25,0.049,26,0.097,28,0.739,30,1.567,31,1.078,32,1.21,33,2.054,34,1.34,36,1.037,37,0.011,38,0.743,39,0.214,40,0.763,42,1.071,43,1.405,45,0.982,46,1.018,47,0.735,49,0.854,50,0.452,52,0.819,56,0.755,59,1.769,61,0.056,62,0.415,64,1.94,68,0.547,76,0.626,77,0.969,78,0.969,79,0.562,80,1.334,81,0.626,82,0.626,83,0.593,84,1.124,85,0.969,86,0.593,87,0.491,88,1.645,89,0.593,90,0.626,91,1.265,92,1.469,93,0.626,94,0.593,95,0.562,96,0.593,97,0.626,98,0.593,99,0.593,100,1.094,101,0.593,102,0.626,103,0.593,104,0.626,105,0.593,106,0.533,107,0.593,108,0.626,109,0.593,110,0.626,111,0.593,112,0.626,113,0.593,114,0.626,115,0.593,116,0.609,117,1.185,118,1.265,119,1.154,120,0.626,121,0.593,122,0.626,123,1.265,124,0.626,125,0.593,126,0.626,127,0.593,128,0.626,129,0.593,130,0.626,131,0.593,132,0.626,133,0.593,134,0.593,135,0.626,136,0.593,137,0.464,138,0.593,139,0.626,140,0.593,141,0.626,142,0.593,143,0.626,144,1.265,145,0.626,146,0.593,147,0.626,148,0.593,149,0.562,150,0.593,151,0.626,152,1.265,153,0.626,154,0.593,155,0.626,156,0.593,157,0.593,158,0.593,159,0.609,160,0.578,161,0.609,162,0.626,163,0.005,164,0.005,198,1.299,201,0.643,205,1.378,223,2.077,224,1.786,234,1.973,243,1.299,262,0.89,272,1,273,1.097,274,0.943,276,2.382,277,2.005,281,0.89,294,2.703,295,2.757,296,2.88,298,2.307,300,3.688,317,2.145,318,2.655,321,3.023,325,2.989,326,2.888,327,2.888,328,3.251,330,2.655,334,2.471,335,3.42,339,1.348,340,1.031,341,1.525,342,1.348,343,1.21,344,1.525,345,1.525,346,1.525,349,1.596,350,1.596,351,2.373,353,2.655,355,2.888,357,2.655,359,2.36,360,2.36,362,1.94,363,2.36,369,4.103,376,2.471,383,2.382,396,2.766,398,2.655,433,1.874,434,1.894,435,2.766,443,5.712,464,6.172,465,2.166,466,3.175,467,4.196,468,4.196,469,5.134,470,5.779,471,5.779,472,4.196,473,3.688,474,2.71,475,2.71,476,2.71,477,2.71,478,4.196,479,4.103,480,2.71,481,3.688,482,2.71,483,3.35,484,2.71,485,3.553,486,3.688,487,3.688,488,3.688,489,2.71,490,2.71,491,2.71,492,1.46,493,2.71,494,2.382,495,4.196,496,2.71,497,1.299,498,2.382,499,2.382,500,2.71,501,5.134,502,2.71,503,2.166,504,4.512,505,2.71,506,4.196,507,2.71,508,4.196,509,2.71,510,4.196,511,2.71,512,1.402,513,1.525,514,4.196,515,2.382,516,2.71,517,2.71,518,2.382,519,1.525,520,2.382,521,2.382,522,3.688,523,3.688,524,4.196]],["title/components/BrandFormsComponent.html",[0,0.277,94,0.933]],["body/components/BrandFormsComponent.html",[0,0.378,1,0.726,2,1.099,3,0.068,4,0.068,5,0.766,6,0.766,7,0.766,8,0.06,13,0.726,14,1.999,15,2.051,17,1.07,18,0.961,19,1.129,21,1.223,23,1.223,25,0.06,26,0.113,28,0.861,30,1.736,31,1.256,33,2.294,34,1.301,36,0.67,37,0.011,38,0.83,39,0.198,40,0.493,42,0.995,43,1.44,45,0.935,46,0.861,49,0.851,50,0.553,52,1.003,53,1.534,61,0.068,62,0.507,68,0.67,76,0.766,77,1.129,78,1.129,79,0.688,80,1.479,81,0.766,82,0.766,83,0.726,84,1.07,85,1.129,86,0.726,87,0.601,88,1.75,89,0.726,90,0.766,91,0.726,92,0.707,93,0.766,94,1.402,95,1.532,96,0.726,97,0.766,98,0.726,99,0.726,100,0.707,101,0.726,102,0.766,103,0.726,104,0.766,105,0.726,106,0.652,107,0.726,108,0.766,109,0.726,110,0.766,111,0.726,112,0.766,113,0.726,114,0.766,115,0.726,116,0.746,117,1.34,118,1.402,119,0.746,120,0.766,121,0.726,122,0.766,123,1.402,124,0.766,125,0.726,126,0.766,127,0.726,128,0.766,129,0.726,130,0.766,131,0.726,132,0.766,133,0.726,134,0.726,135,0.766,136,0.726,137,0.568,138,0.726,139,0.766,140,0.726,141,0.766,142,0.726,143,0.766,144,0.726,145,0.766,146,0.726,147,0.766,148,0.726,149,0.688,150,0.726,151,0.766,152,0.726,153,0.766,154,0.726,155,0.766,156,0.726,157,0.726,158,0.726,159,0.746,160,0.707,161,0.746,162,0.766,163,0.006,164,0.006,198,1.59,201,0.787,205,1.09,224,2.019,234,1.832,272,1.224,274,1.154,281,1.09,295,2.797,296,3.086,298,2.142,315,1.788,316,2.879,317,2.425,318,3.002,319,2.879,320,2.879,321,3.418,324,1.954,325,3.313,326,3.265,327,3.265,328,3.603,330,2.529,334,2.879,335,2.529,339,1.651,340,1.262,341,1.866,342,1.651,343,1.481,344,1.866,345,1.866,346,1.866,349,1.954,350,1.954,351,2.26,353,2.529,354,2.296,355,2.75,359,2.75,360,2.75,362,2.26,363,2.75,525,6.057,526,5.606,527,4.639,528,6.404,529,6.404,530,2.651,531,2.454,532,2.296,533,2.651,534,2.651,535,3.002,536,2.651,537,2.651,538,1.651,539,4.888,540,3.318,541,3.318,542,3.318,543,2.296,544,3.318,545,4.888]],["title/components/BrandsComponent.html",[0,0.277,96,0.933]],["body/components/BrandsComponent.html",[0,0.345,1,0.624,2,0.981,3,0.059,4,0.059,5,0.659,6,0.659,7,0.659,8,0.052,10,1.434,11,1.693,12,2.214,13,0.624,14,1.978,15,2.029,17,0.955,18,0.858,19,1.008,21,1.092,23,1.092,25,0.052,26,0.101,27,1.899,28,0.769,29,2.127,30,1.609,31,0.733,32,1.274,33,2.096,34,1.409,36,1.07,37,0.011,38,0.851,39,0.209,40,0.787,42,1.156,43,1.628,45,1.291,46,1.189,47,1.437,48,1.899,49,0.921,50,0.475,51,1.119,52,0.862,53,1.319,55,1.192,56,0.794,61,0.059,62,0.436,63,1.085,64,1.319,66,1.367,68,0.576,71,2.11,74,1.231,75,1.192,76,0.659,77,1.008,78,1.008,79,0.592,80,1.371,81,0.659,82,0.659,83,0.624,84,0.955,85,1.008,86,0.624,87,0.517,88,1.672,89,0.624,90,0.659,91,0.624,92,0.608,93,0.659,94,0.955,95,1.328,96,1.3,97,0.659,98,0.624,99,0.624,100,0.608,101,0.624,102,0.659,103,0.624,104,0.659,105,0.624,106,0.561,107,0.624,108,0.659,109,0.624,110,0.659,111,0.624,112,0.659,113,0.624,114,0.659,115,0.624,116,0.641,117,1.224,118,0.624,119,0.641,120,0.659,121,0.624,122,0.659,123,0.624,124,0.659,125,0.624,126,0.659,127,0.624,128,0.659,129,0.624,130,0.659,131,0.624,132,0.659,133,0.624,134,0.624,135,0.659,136,0.624,137,0.908,138,0.624,139,0.659,140,0.624,141,0.659,142,0.624,143,0.659,144,0.624,145,0.659,146,0.624,147,0.659,148,0.624,149,0.592,150,0.624,151,0.659,152,0.624,153,0.659,154,0.624,155,0.659,156,0.624,157,0.624,158,0.624,159,0.641,160,0.608,161,0.641,162,0.659,163,0.005,164,0.005,189,0.575,201,0.676,217,2.857,218,2.856,219,2.637,220,2.856,221,2.856,222,2.856,223,2.144,224,1.844,225,3.121,228,2.856,229,2.856,230,3.013,231,2.856,232,2.856,233,2.352,234,1.699,236,2.171,237,3.496,238,2.637,239,2.954,241,2.352,243,1.367,254,1.136,255,3.34,258,2.352,260,2.352,262,0.937,263,1.537,264,1.367,265,1.367,266,1.537,267,1.537,268,1.537,269,1.537,270,1.537,271,1.537,272,1.053,273,1.154,274,0.992,275,1.605,280,1.537,281,0.937,282,1.537,283,1.476,284,1.537,286,1.537,287,1.537,289,2.171,290,2.848,291,2.257,292,2.257,293,2.257,294,1.711,295,1.61,296,2.214,297,2.257,298,1.053,301,1.537,302,2.352,304,1.537,305,1.537,306,1.537,307,1.537,308,1.537,309,2.352,310,2.352,311,2.018,312,2.7,313,3.02,526,2.11,527,2.28,535,3.49,538,1.419,546,2.507,547,4.175,548,4.364,549,4.364,550,5.937,551,2.853,552,2.853,553,2.853,554,2.853,555,2.853,556,4.364,557,2.853,558,2.853,559,2.853,560,2.853,561,2.853,562,2.853,563,2.853,564,2.853,565,2.853,566,2.507,567,2.853,568,2.853,569,4.364,570,2.507,571,2.853,572,2.853]],["title/components/CategoriesComponent.html",[0,0.277,98,0.933]],["body/components/CategoriesComponent.html",[0,0.345,1,0.624,2,0.981,3,0.059,4,0.059,5,0.659,6,0.659,7,0.659,8,0.052,10,1.434,11,1.693,12,2.214,13,0.624,14,1.978,15,2.029,17,0.955,18,0.858,19,1.008,21,1.092,23,1.092,25,0.052,26,0.101,27,1.899,28,0.769,29,2.127,30,1.609,31,0.733,32,1.274,33,2.096,34,1.409,36,1.07,37,0.011,38,0.851,39,0.209,40,0.787,42,1.156,43,1.628,45,1.291,46,1.189,47,1.437,48,1.899,49,0.921,50,0.475,51,1.119,52,0.862,53,1.319,55,1.192,56,0.794,61,0.059,62,0.436,63,1.085,64,1.319,66,1.367,68,0.576,71,2.11,74,1.231,75,1.192,76,0.659,77,1.008,78,1.008,79,0.592,80,1.371,81,0.659,82,0.659,83,0.624,84,0.955,85,1.008,86,0.624,87,1.159,88,1.672,89,0.624,90,0.659,91,0.624,92,0.608,93,0.659,94,0.624,95,0.592,96,0.624,97,0.659,98,1.3,99,0.955,100,1.438,101,0.624,102,0.659,103,0.624,104,0.659,105,0.624,106,0.561,107,0.624,108,0.659,109,0.624,110,0.659,111,0.624,112,0.659,113,0.624,114,0.659,115,0.624,116,0.641,117,1.224,118,0.624,119,0.641,120,0.659,121,0.624,122,0.659,123,0.624,124,0.659,125,0.624,126,0.659,127,0.624,128,0.659,129,0.624,130,0.659,131,0.624,132,0.659,133,0.624,134,0.624,135,0.659,136,0.624,137,0.489,138,0.624,139,0.659,140,0.624,141,0.659,142,0.624,143,0.659,144,0.624,145,0.659,146,0.624,147,0.659,148,0.624,149,0.592,150,0.624,151,0.659,152,0.624,153,0.659,154,0.624,155,0.659,156,0.624,157,0.624,158,0.624,159,0.641,160,0.608,161,0.641,162,0.659,163,0.005,164,0.005,189,0.575,201,0.676,217,2.857,218,2.856,219,2.637,220,2.856,221,2.856,222,2.856,223,2.144,224,1.844,225,3.121,226,3.836,227,3.836,228,2.856,229,2.856,230,3.013,231,2.856,232,2.856,233,2.352,234,1.699,235,5.218,236,2.171,237,3.496,238,2.637,239,2.954,241,2.352,243,1.367,247,3.836,254,1.136,255,3.34,258,2.352,260,2.352,262,0.937,263,1.537,264,1.367,265,1.367,266,2.352,267,1.537,268,1.537,269,1.537,270,1.537,271,1.537,272,1.053,273,1.154,274,0.992,275,1.605,280,1.537,281,0.937,282,1.537,283,1.476,284,1.537,285,2.507,286,1.537,287,1.537,289,2.171,290,2.848,291,2.257,292,2.257,293,2.257,294,1.711,295,1.61,296,2.214,297,2.257,298,1.053,301,1.537,302,2.352,303,3.836,304,1.537,305,1.537,306,1.537,307,1.537,308,1.537,309,2.352,310,2.352,311,2.018,312,2.7,313,3.02,538,1.419,573,2.507,574,2.853,575,2.853,576,2.853,577,2.853,578,2.853,579,3.49,580,2.853,581,2.853,582,2.853,583,2.853,584,2.853,585,2.853,586,2.853,587,2.853,588,2.853,589,2.507,590,2.853,591,2.11,592,4.364,593,2.28,594,2.507]],["title/components/CategoriesFormsComponent.html",[0,0.277,99,0.933]],["body/components/CategoriesFormsComponent.html",[0,0.377,1,0.722,2,1.095,3,0.068,4,0.068,5,0.762,6,0.762,7,0.762,8,0.06,10,1.6,11,1.848,13,0.722,14,1.999,15,2.051,17,1.066,18,0.957,19,1.124,21,1.218,23,1.218,25,0.06,26,0.113,28,0.858,30,1.732,31,1.251,33,2.291,34,1.299,36,0.667,37,0.011,38,0.828,39,0.198,40,0.49,42,0.991,43,1.436,45,0.932,46,0.858,49,0.85,50,0.55,52,0.997,53,1.526,61,0.068,62,0.505,68,0.667,76,0.762,77,1.124,78,1.124,79,0.685,80,1.475,81,0.762,82,0.762,83,0.722,84,1.066,85,1.124,86,0.722,87,0.598,88,1.748,89,0.722,90,0.762,91,0.722,92,0.703,93,0.762,94,0.722,95,0.685,96,0.722,97,0.762,98,0.722,99,1.398,100,1.571,101,0.722,102,0.762,103,0.722,104,0.762,105,0.722,106,0.649,107,0.722,108,0.762,109,0.722,110,0.762,111,0.722,112,0.762,113,0.722,114,0.762,115,0.722,116,0.742,117,1.336,118,1.398,119,0.742,120,0.762,121,0.722,122,0.762,123,1.398,124,0.762,125,0.722,126,0.762,127,0.722,128,0.762,129,0.722,130,0.762,131,0.722,132,0.762,133,0.722,134,0.722,135,0.762,136,0.722,137,0.565,138,0.722,139,0.762,140,0.722,141,0.762,142,0.722,143,0.762,144,0.722,145,0.762,146,0.722,147,0.762,148,0.722,149,0.685,150,0.722,151,0.762,152,0.722,153,0.762,154,0.722,155,0.762,156,0.722,157,0.722,158,0.722,159,0.742,160,0.703,161,0.742,162,0.762,163,0.006,164,0.006,198,1.582,201,0.783,205,1.084,224,2.013,234,1.828,272,1.218,274,1.148,281,1.084,295,2.792,296,3.08,298,2.135,315,1.778,316,2.868,317,2.417,318,2.993,319,2.868,320,2.868,321,3.408,324,1.944,325,3.304,326,3.255,327,3.255,328,3.594,330,2.519,334,2.868,335,2.519,339,1.642,340,1.255,341,1.857,342,1.642,343,1.474,344,1.857,345,1.857,346,1.857,349,1.944,350,1.944,351,2.251,353,2.519,354,2.284,355,2.739,357,1.707,359,2.739,360,2.739,362,2.251,363,2.739,530,2.638,531,2.441,532,2.284,533,2.638,534,2.638,536,2.638,537,2.638,538,1.642,579,2.993,591,5.598,593,4.625,595,6.048,596,6.388,597,6.388,598,4.869,599,3.3,600,3.3,601,3.3,602,3.3,603,4.869]],["title/components/ColorComponent.html",[0,0.277,101,0.933]],["body/components/ColorComponent.html",[0,0.394,1,0.782,2,1.16,3,0.074,4,0.074,5,1.192,6,0.825,7,0.825,8,0.065,13,0.782,14,2.009,15,2.067,17,1.13,18,1.014,19,0.825,25,0.12,26,0.12,28,0.909,34,1.292,36,0.722,37,0.01,38,0.745,39,0.111,40,0.531,42,0.612,43,0.803,45,1.159,46,1.067,49,0.58,50,0.595,61,0.074,62,0.546,68,0.722,76,0.825,77,1.192,78,1.192,79,0.741,80,1.532,81,0.825,82,0.825,83,0.782,84,1.13,85,1.192,86,0.782,87,0.647,88,1.787,89,0.782,90,0.825,91,0.782,92,0.762,93,0.825,94,0.782,95,0.741,96,0.782,97,0.825,98,0.782,99,0.782,100,0.762,101,1.452,102,0.825,103,0.782,104,0.825,105,0.782,106,1.486,107,0.782,108,0.825,109,0.782,110,0.825,111,0.782,112,0.825,113,0.782,114,0.825,115,0.782,116,0.803,117,1.399,118,0.782,119,0.803,120,0.825,121,0.782,122,0.825,123,0.782,124,0.825,125,0.782,126,0.825,127,0.782,128,0.825,129,0.782,130,0.825,131,0.782,132,0.825,133,0.782,134,0.782,135,0.825,136,0.782,137,0.612,138,0.782,139,0.825,140,0.782,141,0.825,142,0.782,143,0.825,144,0.782,145,0.825,146,0.782,147,0.825,148,0.782,149,0.741,150,0.782,151,0.825,152,0.782,153,0.825,154,0.782,155,0.825,156,0.782,157,0.782,158,0.782,159,0.803,160,0.762,161,0.803,162,0.825,163,0.006,164,0.006,189,0.798,201,0.847,243,1.713,289,3.013,290,3.952,312,3.192,497,1.713,604,5.324,605,3.141,606,3.597,607,5.324,608,6.443,609,5.324,610,5.324,611,5.324,612,6.057,613,6.057,614,7.331,615,5.324,616,6.057,617,7.331,618,6.057,619,5.324,620,5.324,621,6.057,622,6.057,623,6.057,624,6.057,625,6.057,626,6.057,627,3.952,628,7.035,629,6.183,630,5.16,631,2.903,632,5.16,633,5.16,634,5.16,635,5.16,636,3.573,637,2.903,638,3.573,639,5.16,640,1.778,641,3.573,642,3.573]],["title/components/ColorsComponent.html",[0,0.277,103,0.933]],["body/components/ColorsComponent.html",[0,0.347,1,0.629,2,0.987,3,0.059,4,0.059,5,0.663,6,0.663,7,0.663,8,0.052,11,0.918,12,1.2,13,0.629,14,1.979,15,2.03,17,0.961,18,0.863,19,1.013,21,1.098,23,1.098,25,0.052,26,0.102,27,1.907,28,0.773,29,2.135,30,1.615,31,0.738,32,1.283,33,2.102,34,1.411,36,1.075,37,0.011,38,0.852,39,0.21,40,0.791,42,1.16,43,1.632,45,1.295,46,1.192,47,1.443,48,1.907,49,0.922,50,0.479,51,1.127,52,0.868,53,1.328,55,1.2,56,0.8,61,0.059,62,0.439,63,1.093,64,1.328,66,1.377,68,0.58,70,2.526,74,1.24,75,1.2,76,0.663,77,1.013,78,1.013,79,0.596,80,1.376,81,0.663,82,0.663,83,0.629,84,0.961,85,1.013,86,0.629,87,0.52,88,1.676,89,0.629,90,0.663,91,0.629,92,0.612,93,0.663,94,0.629,95,0.596,96,0.629,97,0.663,98,0.629,99,0.629,100,0.612,101,0.629,102,0.663,103,1.305,104,0.663,105,0.961,106,1.33,107,0.629,108,0.663,109,0.629,110,0.663,111,0.629,112,0.663,113,0.629,114,0.663,115,0.629,116,0.646,117,1.229,118,0.629,119,0.646,120,0.663,121,0.629,122,0.663,123,0.629,124,0.663,125,0.629,126,0.663,127,0.629,128,0.663,129,0.629,130,0.663,131,0.629,132,0.663,133,0.629,134,0.629,135,0.663,136,0.629,137,0.492,138,0.629,139,0.663,140,0.629,141,0.663,142,0.629,143,0.663,144,0.629,145,0.663,146,0.629,147,0.663,148,0.629,149,0.596,150,0.629,151,0.663,152,0.629,153,0.663,154,0.629,155,0.663,156,0.629,157,0.629,158,0.629,159,0.646,160,0.612,161,0.646,162,0.663,163,0.005,164,0.005,189,0.578,201,0.681,217,2.866,218,2.869,219,2.649,220,2.869,221,2.869,222,2.869,223,2.154,224,1.852,225,3.135,228,2.869,229,2.869,230,3.022,231,2.869,232,2.869,233,2.365,234,1.705,236,2.183,237,3.51,238,2.649,239,2.965,241,2.365,243,1.377,254,1.14,255,3.353,258,2.365,260,2.365,262,0.944,263,1.548,264,1.377,265,1.377,266,1.548,267,1.548,268,1.548,269,1.548,270,1.548,271,1.548,272,1.06,273,1.163,274,1,275,1.616,280,1.548,281,0.944,282,1.548,283,1.486,284,1.548,286,1.548,287,1.548,289,2.183,290,2.863,291,2.27,292,2.27,293,2.27,294,1.721,295,1.619,296,2.224,297,2.27,298,1.06,301,1.548,302,2.365,304,1.548,305,1.548,306,1.548,307,1.548,308,1.548,309,2.365,310,2.365,311,2.029,312,2.715,313,3.037,538,1.43,606,2.573,640,3.367,643,2.526,644,4.388,645,4.388,646,5.238,647,2.873,648,2.873,649,2.873,650,2.873,651,2.873,652,4.388,653,2.873,654,2.873,655,2.873,656,2.873,657,2.873,658,2.873,659,2.873,660,2.873,661,2.873,662,2.526,663,2.873,664,2.125,665,2.873,666,4.388,667,2.296,668,2.526,669,2.873,670,2.873]],["title/components/ColorsFormsComponent.html",[0,0.277,105,0.933]],["body/components/ColorsFormsComponent.html",[0,0.378,1,0.725,2,1.098,3,0.068,4,0.068,5,0.765,6,0.765,7,0.765,8,0.06,11,1.059,13,0.725,14,1.999,15,2.051,17,1.069,18,0.96,19,1.128,21,1.222,23,1.222,25,0.06,26,0.113,28,0.861,30,1.735,31,1.255,33,2.294,34,1.301,36,0.669,37,0.011,38,0.829,39,0.198,40,0.492,42,0.994,43,1.439,45,0.934,46,0.861,49,0.851,50,0.552,52,1.001,53,1.532,61,0.068,62,0.507,68,0.669,76,0.765,77,1.128,78,1.128,79,0.688,80,1.478,81,0.765,82,0.765,83,0.725,84,1.069,85,1.128,86,0.725,87,0.6,88,1.75,89,0.725,90,0.765,91,0.725,92,0.706,93,0.765,94,0.725,95,0.688,96,0.725,97,0.765,98,0.725,99,0.725,100,0.706,101,0.725,102,0.765,103,0.725,104,0.765,105,1.401,106,1.451,107,0.725,108,0.765,109,0.725,110,0.765,111,0.725,112,0.765,113,0.725,114,0.765,115,0.725,116,0.745,117,1.339,118,1.401,119,0.745,120,0.765,121,0.725,122,0.765,123,1.401,124,0.765,125,0.725,126,0.765,127,0.725,128,0.765,129,0.725,130,0.765,131,0.725,132,0.765,133,0.725,134,0.725,135,0.765,136,0.725,137,0.568,138,0.725,139,0.765,140,0.725,141,0.765,142,0.725,143,0.765,144,0.725,145,0.765,146,0.725,147,0.765,148,0.725,149,0.688,150,0.725,151,0.765,152,0.725,153,0.765,154,0.725,155,0.765,156,0.725,157,0.725,158,0.725,159,0.745,160,0.706,161,0.745,162,0.765,163,0.006,164,0.006,198,1.588,201,0.786,205,1.089,224,2.018,234,1.831,272,1.223,274,1.153,281,1.089,295,2.796,296,3.085,298,2.14,315,1.786,316,2.877,317,2.423,318,3.001,319,2.877,320,2.877,321,3.416,324,1.952,325,3.311,326,3.263,327,3.263,328,3.601,329,2.913,330,2.527,331,2.913,332,2.913,333,2.913,334,2.877,335,2.527,336,2.649,337,2.649,338,2.649,339,1.649,340,1.26,341,1.864,342,1.649,343,1.48,344,1.864,345,1.864,346,1.864,349,1.952,350,1.952,351,2.258,353,2.527,354,2.294,355,2.748,359,2.748,360,2.748,362,2.258,363,2.748,538,1.649,640,2.886,664,5.604,667,4.636,671,6.056,672,6.401,673,6.401,674,4.884,675,3.314,676,3.314,677,3.314,678,2.913,679,3.314,680,4.884]],["title/injectables/CommonService.html",[165,1.671,681,3.406]],["body/injectables/CommonService.html",[3,0.101,4,0.101,8,0.089,16,2.644,25,0.089,26,0.149,28,1.131,31,1.261,34,1.472,36,1.533,37,0.011,38,0.853,39,0.235,40,1.128,42,1.35,45,1.228,46,1.131,49,0.885,50,0.818,56,1.367,61,0.101,62,0.751,63,1.866,163,0.007,164,0.007,165,2.518,167,2.644,169,3.972,179,4.189,180,4.831,189,1.065,193,4.696,196,4.696,197,3.036,201,1.164,202,2.89,204,2.761,205,2.588,373,3.202,397,3.396,681,5.131,682,4.313,683,7.156,684,7.156,685,6.421,686,5.131,687,6.421,688,7.591,689,7.591,690,6.421,691,6.421,692,4.696,693,4.908,694,6.421,695,4.908,696,4.313,697,6.421,698,4.908,699,4.908,700,4.908,701,4.908,702,5.293,703,5.293,704,4.908,705,2.761,706,3.036,707,4.908,708,4.908,709,4.908,710,4.908,711,4.908]],["title/directives/ControlValueAccessorDirective.html",[79,0.884,160,0.908]],["body/directives/ControlValueAccessorDirective.html",[3,0.079,4,0.079,8,0.07,10,1.786,11,2.015,12,2.635,13,0.841,14,1.222,17,1.19,18,1.069,25,0.07,26,0.126,27,2.259,28,0.958,29,2.456,30,1.859,31,0.987,34,1.475,36,1.461,37,0.011,38,0.813,39,0.239,40,1.075,42,1.323,43,1.917,45,1.312,46,1.527,47,1.859,48,2.259,49,0.708,50,0.64,55,1.606,56,1.07,61,0.079,62,0.588,74,1.659,75,1.606,79,1.128,119,0.864,159,0.864,160,1.159,161,1.222,163,0.006,164,0.006,198,1.842,234,1.962,339,1.912,340,1.461,398,1.988,492,1.891,513,3.548,712,7.41,713,3.378,714,6.307,715,3.901,716,4.721,717,4.115,718,3.547,719,3.547,720,3.547,721,4.474,722,3.547,723,3.843,724,7.511,725,3.843,726,3.843,727,3.843,728,3.547,729,5.146,730,3.843,731,4.115,732,3.901,733,3.547,734,3.843,735,3.547,736,2.072,737,3.843,738,3.843,739,3.547,740,3.843,741,4.721,742,2.271,743,3.843,744,3.843,745,3.742,746,3.843,747,3.843,748,3.843,749,5.436,750,6.307,751,3.843,752,6.307,753,5.436,754,3.843,755,3.378,756,3.843,757,3.843,758,3.843,759,3.843,760,3.843,761,3.378,762,3.378,763,3.843,764,3.378,765,6.359,766,3.843,767,3.843,768,3.843,769,5.436,770,3.378,771,1.988,772,3.843,773,3.843,774,3.843,775,2.263,776,2.843,777,3.843,778,3.843,779,3.843,780,3.378,781,3.843,782,3.843]],["title/components/CouponFormsComponent.html",[0,0.277,107,0.933]],["body/components/CouponFormsComponent.html",[0,0.363,1,0.678,2,1.045,3,0.064,4,0.064,5,0.716,6,0.716,7,0.716,8,0.056,10,1.527,11,1.781,13,0.678,14,1.99,15,2.042,17,1.017,18,0.914,19,1.073,21,1.162,23,1.162,25,0.056,26,0.108,28,0.819,30,1.679,31,1.194,33,2.244,34,1.309,36,0.626,37,0.011,38,0.696,39,0.192,40,0.46,42,0.955,43,1.392,45,1.067,46,0.982,47,1.26,49,0.853,50,0.516,52,0.937,61,0.064,62,0.474,68,0.626,76,0.716,77,1.073,78,1.073,79,0.643,80,1.43,81,0.716,82,0.716,83,0.678,84,1.017,85,1.073,86,0.678,87,0.561,88,1.716,89,0.678,90,0.716,91,0.678,92,0.661,93,0.716,94,0.678,95,0.643,96,0.678,97,0.716,98,0.678,99,0.678,100,0.661,101,0.678,102,0.716,103,0.678,104,0.716,105,0.678,106,0.609,107,1.356,108,1.668,109,0.678,110,0.716,111,1.356,112,0.716,113,0.678,114,0.716,115,0.678,116,0.697,117,1.287,118,1.356,119,0.697,120,0.716,121,0.678,122,0.716,123,1.356,124,0.716,125,0.678,126,0.716,127,0.678,128,0.716,129,0.678,130,0.716,131,0.678,132,0.716,133,0.678,134,0.678,135,0.716,136,0.678,137,0.531,138,0.678,139,0.716,140,0.678,141,0.716,142,0.678,143,0.716,144,0.678,145,0.716,146,0.678,147,0.716,148,0.678,149,0.643,150,0.678,151,0.716,152,0.678,153,0.716,154,0.678,155,0.716,156,0.678,157,0.678,158,0.678,159,0.697,160,0.661,161,0.697,162,0.716,163,0.005,164,0.005,198,1.485,201,0.735,205,1.018,224,1.94,234,1.772,262,1.018,272,1.144,274,1.078,281,1.018,294,1.215,295,2.741,296,3.018,298,2.057,315,1.67,316,2.737,317,2.329,318,2.884,319,2.737,320,2.737,321,3.283,324,1.825,325,3.204,326,3.136,327,3.136,328,3.484,330,2.404,334,2.737,335,3.603,339,1.542,340,1.179,341,1.743,342,1.542,343,1.384,344,1.743,345,1.743,346,1.743,349,1.825,350,1.825,351,2.148,353,1.603,355,2.614,359,2.614,360,2.614,362,2.148,363,2.614,398,1.603,413,3.638,463,1.603,503,2.477,532,2.145,686,4.456,696,2.724,705,3.136,783,6.073,784,5.62,785,4.545,786,6.194,787,6.194,788,3.099,789,3.099,790,2.724,791,3.099,792,3.638,793,3.858,794,4.084,795,4.647,796,4.647,797,4.124,798,3.099,799,3.099,800,3.099,801,2.022,802,2.477,803,2.724,804,4.647,805,3.099,806,3.099,807,3.099,808,3.099,809,3.099,810,3.099,811,3.099,812,3.099,813,4.647]],["title/components/CouponsComponent.html",[0,0.277,109,0.933]],["body/components/CouponsComponent.html",[0,0.337,1,0.603,2,0.955,3,0.057,4,0.057,5,0.636,6,0.636,7,0.636,8,0.05,10,1.395,11,1.656,12,2.166,13,0.603,14,1.973,15,2.024,17,0.93,18,0.835,19,0.981,21,1.062,23,1.062,25,0.05,26,0.098,27,1.857,28,0.748,29,2.087,30,1.58,31,0.707,32,1.229,33,2.067,34,1.399,36,1.047,37,0.011,38,0.747,39,0.206,40,0.77,42,1.14,43,1.61,45,1.273,46,1.172,47,1.405,48,1.857,49,0.915,50,0.459,51,1.08,52,0.832,55,1.15,56,0.767,61,0.057,62,0.421,63,1.047,64,1.273,66,1.319,68,0.556,74,1.189,75,1.15,76,0.636,77,0.981,78,0.981,79,0.571,80,1.346,81,0.636,82,0.636,83,0.603,84,0.93,85,0.981,86,0.603,87,0.499,88,1.653,89,0.603,90,0.636,91,0.603,92,0.587,93,0.636,94,0.603,95,0.571,96,0.603,97,0.636,98,0.603,99,0.603,100,0.587,101,0.603,102,0.636,103,0.603,104,0.636,105,0.603,106,0.541,107,0.93,108,1.454,109,1.276,110,0.636,111,0.603,112,0.636,113,0.603,114,0.636,115,0.603,116,0.619,117,1.197,118,0.603,119,0.619,120,0.636,121,0.603,122,0.636,123,0.603,124,0.636,125,0.603,126,0.636,127,0.603,128,0.636,129,0.603,130,0.636,131,0.603,132,0.636,133,0.603,134,0.603,135,0.636,136,0.603,137,0.472,138,0.603,139,0.636,140,0.603,141,0.636,142,0.603,143,0.636,144,0.603,145,0.636,146,0.603,147,0.636,148,0.603,149,0.571,150,0.603,151,0.636,152,0.603,153,0.636,154,0.603,155,0.636,156,0.603,157,0.603,158,0.603,159,0.619,160,0.587,161,0.619,162,0.636,163,0.005,164,0.005,189,0.56,201,0.653,217,2.811,218,2.793,219,2.579,220,2.793,221,2.793,222,2.793,223,2.097,224,1.804,225,3.053,228,2.793,229,2.793,230,2.971,231,2.793,232,2.793,233,2.288,234,1.667,236,2.113,237,3.432,238,2.579,239,2.899,241,2.288,243,1.319,254,1.115,255,3.278,258,2.288,260,2.288,262,0.904,263,1.483,264,1.319,265,1.319,266,1.483,267,1.483,268,1.483,269,1.483,270,1.483,271,1.483,272,1.016,273,1.114,274,0.958,275,1.549,280,1.483,281,0.904,282,1.483,283,1.424,284,1.483,286,1.483,287,1.483,289,2.113,291,2.197,292,2.197,293,2.197,294,2.285,295,1.567,296,2.166,297,2.197,298,1.016,304,1.483,305,1.483,306,1.483,307,1.483,308,1.483,309,2.288,310,2.288,311,1.963,312,2.627,414,3.834,452,2.939,463,3.014,619,3.732,686,2.2,692,3.605,702,4.657,705,2.916,784,2.036,792,3.802,793,4.033,802,2.2,803,2.42,814,2.42,815,4.247,816,4.247,817,5.827,818,2.753,819,2.753,820,2.753,821,2.753,822,2.753,823,4.247,824,2.753,825,2.753,826,2.753,827,2.753,828,2.753,829,2.753,830,2.753,831,2.753,832,2.753,833,2.753,834,2.753,835,2.753,836,4.247,837,2.753,838,2.753,839,2.2,840,2.753,841,2.753,842,4.247,843,4.247,844,4.247,845,4.247]],["title/injectables/CustomerService.html",[165,1.671,846,3.406]],["body/injectables/CustomerService.html",[3,0.111,4,0.111,8,0.097,16,2.892,25,0.097,26,0.158,28,1.198,31,1.379,34,1.316,36,1.374,37,0.011,38,0.764,39,0.211,40,1.01,42,0.92,45,1.027,46,0.946,47,1.455,49,0.91,50,0.894,56,1.494,61,0.111,62,0.821,63,2.041,163,0.008,164,0.008,165,2.667,167,2.892,169,4.207,170,4.872,180,4.2,193,4.207,196,4.856,197,3.32,201,1.273,202,3.161,204,3.019,205,1.763,362,2.481,373,3.502,391,4.005,395,5.031,397,3.714,398,2.776,399,5.031,403,5.031,404,3.969,846,5.436,847,4.717,848,5.978,849,6.801,850,6.801,851,5.807,852,5.367,853,4.707,854,2.776,855,3.161,856,3.161,857,3.161,858,3.161,859,4.717,860,4.717,861,4.717,862,4.717,863,4.717,864,4.717,865,4.717,866,4.717,867,5.367]],["title/components/DateComponent.html",[0,0.277,111,0.933]],["body/components/DateComponent.html",[0,0.368,1,0.695,2,1.064,3,0.065,4,0.065,5,0.733,6,0.733,7,0.733,8,0.057,13,0.695,14,1.994,15,2.045,17,1.036,18,1.382,19,1.092,21,1.183,23,1.183,25,0.057,26,0.11,27,1.695,28,0.833,29,2.026,30,1.533,34,1.498,36,1.266,37,0.01,38,0.818,39,0.218,40,0.931,42,1.248,43,1.719,45,1.199,46,1.283,47,1.533,48,1.137,49,0.789,50,0.529,61,0.065,62,0.485,68,0.641,76,0.733,77,1.092,78,1.092,79,0.659,80,1.447,81,0.733,82,0.733,83,0.695,84,1.036,85,1.092,86,0.695,87,0.575,88,1.728,89,0.695,90,0.733,91,0.695,92,0.676,93,0.733,94,0.695,95,0.659,96,0.695,97,0.733,98,0.695,99,0.695,100,0.676,101,0.695,102,0.733,103,0.695,104,0.733,105,0.695,106,0.624,107,0.695,108,0.733,109,0.695,110,0.733,111,1.539,112,0.733,113,0.695,114,0.733,115,0.695,116,0.714,117,1.306,118,0.695,119,0.714,120,0.733,121,0.695,122,0.733,123,0.695,124,0.733,125,0.695,126,0.733,127,0.695,128,0.733,129,0.695,130,0.733,131,0.695,132,0.733,133,0.695,134,0.695,135,0.733,136,0.695,137,0.544,138,0.695,139,0.733,140,0.695,141,0.733,142,0.695,143,0.733,144,0.695,145,0.733,146,0.695,147,0.733,148,0.695,149,0.659,150,0.695,151,0.733,152,0.695,153,0.733,154,0.695,155,0.733,156,0.695,157,0.695,158,0.695,159,0.714,160,1.766,161,0.714,162,0.733,163,0.006,164,0.006,234,1.353,254,1.282,262,1.043,317,2.362,340,1.207,463,3.636,492,1.104,497,2.71,513,3.526,519,4.096,631,2.661,637,2.661,715,3.877,716,3.69,717,3.087,718,3.087,719,3.087,720,3.087,721,3.69,722,3.087,728,2.071,729,3.69,731,3.087,732,3.498,733,2.071,735,2.071,736,1.554,739,2.071,741,2.071,742,1.326,745,2.447,868,2.79,869,3.274,870,3.274,871,5.655,872,3.274,873,3.914,874,3.274,875,3.274,876,5.655,877,4.183,878,4.731,879,4.731,880,5.357,881,5.655,882,4.639,883,4.731,884,4.731,885,4.731,886,4.731,887,5.537,888,2.197,889,2.197,890,2.197,891,2.197,892,2.197,893,2.197,894,2.197,895,3.174,896,2.197,897,2.197,898,2.197,899,2.197,900,2.197,901,3.174,902,3.174,903,2.197,904,2.197,905,4.158,906,4.731]],["title/components/EnquiriesComponent.html",[0,0.277,113,0.933]],["body/components/EnquiriesComponent.html",[0,0.451,1,1.007,2,1.383,3,0.095,4,0.095,5,1.062,6,1.062,7,1.062,8,0.083,13,1.007,14,2.037,15,2.09,17,1.347,18,1.209,19,1.062,21,1.539,23,1.539,37,0.01,38,0.778,49,0.517,50,0.766,61,0.095,62,0.703,68,0.929,76,1.062,77,1.42,78,1.42,79,0.954,80,1.709,81,1.062,82,1.062,83,1.007,84,1.347,85,1.42,86,1.007,87,0.833,88,1.901,89,1.007,90,1.062,91,1.007,92,0.98,93,1.062,94,1.007,95,0.954,96,1.007,97,1.062,98,1.007,99,1.007,100,0.98,101,1.007,102,1.062,103,1.007,104,1.062,105,1.007,106,0.904,107,1.007,108,1.062,109,1.007,110,1.062,111,1.007,112,1.062,113,1.62,114,1.062,115,1.007,116,1.034,117,1.6,118,1.007,119,1.034,120,1.062,121,1.007,122,1.062,123,1.007,124,1.062,125,1.007,126,1.062,127,1.007,128,1.062,129,1.007,130,1.062,131,1.007,132,1.062,133,1.007,134,1.007,135,1.062,136,1.007,137,0.788,138,1.007,139,1.062,140,1.007,141,1.062,142,1.007,143,1.062,144,1.007,145,1.062,146,1.007,147,1.062,148,1.007,149,0.954,150,1.007,151,1.062,152,1.007,153,1.062,154,1.007,155,1.062,156,1.007,157,1.007,158,1.007,159,1.034,160,0.98,161,1.034,162,1.062,163,0.007,164,0.007,703,5.473,907,4.043,908,6.151,909,6.151,910,6.151]],["title/injectables/EnquiryService.html",[165,1.671,911,3.406]],["body/injectables/EnquiryService.html",[3,0.119,4,0.119,8,0.104,16,3.097,25,0.104,26,0.165,28,1.251,31,1.477,34,1.357,36,1.434,37,0.011,38,0.797,39,0.22,40,1.055,42,0.985,45,1.1,46,1.013,49,0.928,50,0.958,56,1.601,61,0.119,62,0.879,63,2.186,163,0.008,164,0.008,165,2.784,167,3.097,169,4.392,170,5.027,179,4.633,180,4.334,193,4.392,196,4.977,197,3.556,201,1.363,202,3.385,204,3.234,205,1.889,373,3.751,397,3.978,408,4.594,703,5.251,911,5.674,912,5.052,913,7.1,914,7.1,915,7.1,916,8.046,917,5.748,918,5.748]],["title/components/ForgotPasswordComponent.html",[0,0.277,115,0.933]],["body/components/ForgotPasswordComponent.html",[0,0.392,1,0.774,2,1.152,3,0.073,4,0.073,5,0.817,6,0.817,7,0.817,8,0.064,13,0.774,14,2.008,15,2.06,17,1.121,18,1.007,19,1.183,21,1.281,23,1.281,25,0.064,26,0.119,28,0.902,33,2.051,34,1.287,37,0.011,38,0.676,42,0.606,43,0.795,45,1.34,46,1.234,49,0.897,50,0.589,52,1.069,56,0.985,61,0.073,62,0.541,68,0.714,76,0.817,77,1.183,78,1.183,79,0.734,80,1.524,81,0.817,82,0.817,83,0.774,84,1.121,85,1.183,86,0.774,87,0.641,88,1.782,89,0.774,90,0.817,91,0.774,92,0.754,93,0.817,94,0.774,95,0.734,96,0.774,97,0.817,98,0.774,99,0.774,100,0.754,101,0.774,102,0.817,103,0.774,104,0.817,105,0.774,106,0.695,107,0.774,108,0.817,109,0.774,110,0.817,111,0.774,112,0.817,113,0.774,114,0.817,115,1.445,116,1.768,117,1.391,118,1.445,119,1.484,120,0.817,121,0.774,122,0.817,123,1.445,124,0.817,125,0.774,126,0.817,127,0.774,128,0.817,129,0.774,130,0.817,131,0.774,132,0.817,133,0.774,134,0.774,135,0.817,136,0.774,137,0.606,138,0.774,139,0.817,140,0.774,141,0.817,142,0.774,143,0.817,144,0.774,145,0.817,146,0.774,147,0.817,148,0.774,149,0.734,150,0.774,151,0.817,152,0.774,153,0.817,154,0.774,155,0.817,156,0.774,157,0.774,158,0.774,159,0.795,160,0.754,161,0.795,162,0.817,163,0.006,164,0.006,198,1.695,205,1.162,209,3.052,223,2.437,224,2.095,262,1.162,273,1.431,274,1.231,281,1.162,294,2.954,317,2.516,325,1.83,330,3.115,335,2.65,339,1.76,340,1.345,342,1.76,351,1.635,353,1.83,466,3.725,485,4.168,497,2.455,785,4.767,801,2.308,919,6.622,920,6.622,921,2.827,922,4.094,923,4.094,924,5.838,925,3.537,926,2.882,927,4.094,928,3.537,929,4.502,930,3.537,931,4.094,932,2.758,933,4.502,934,3.109,935,3.537,936,4.502,937,3.537,938,2.827,939,2.448,940,2.827,941,2.616,942,2.827,943,2.827,944,3.537,945,3.109,946,3.789,947,4.502,948,5.122]],["title/components/FormGroupComponent.html",[0,0.277,118,0.933]],["body/components/FormGroupComponent.html",[0,0.395,1,0.785,2,1.163,3,0.074,4,0.074,5,0.828,6,0.828,7,0.828,8,0.065,13,0.785,14,2.009,15,2.062,17,1.132,18,1.193,19,0.828,21,1.294,23,1.294,25,0.065,26,0.12,28,0.911,34,1.293,37,0.011,38,0.682,42,0.614,49,0.581,50,0.597,61,0.074,62,0.548,68,0.724,76,0.828,77,1.194,78,1.194,79,0.744,80,1.534,81,0.828,82,0.828,83,0.785,84,1.132,85,1.194,86,0.785,87,0.649,88,1.788,89,0.785,90,0.828,91,0.785,92,0.764,93,0.828,94,0.785,95,0.744,96,0.785,97,0.828,98,0.785,99,0.785,100,0.764,101,0.785,102,0.828,103,0.785,104,0.828,105,0.785,106,0.705,107,0.785,108,0.828,109,0.785,110,0.828,111,0.785,112,0.828,113,0.785,114,0.828,115,0.785,116,0.806,117,1.401,118,1.454,119,1.701,120,0.828,121,0.785,122,0.828,123,0.785,124,0.828,125,0.785,126,0.828,127,0.785,128,0.828,129,0.785,130,0.828,131,0.785,132,0.828,133,0.785,134,0.785,135,0.828,136,0.785,137,0.614,138,0.785,139,0.828,140,0.785,141,0.828,142,0.785,143,0.828,144,0.785,145,0.828,146,0.785,147,0.828,148,0.785,149,0.744,150,0.785,151,0.828,152,0.785,153,0.828,154,0.785,155,0.828,156,0.785,157,0.785,158,0.785,159,0.806,160,0.764,161,0.806,162,0.828,163,0.006,164,0.006,205,1.7,340,1.363,497,2.479,513,4.256,631,2.91,637,2.017,715,4.68,762,4.547,764,7.422,765,4.547,857,3.046,858,3.046,949,6.65,950,6.65,951,3.151,952,5.173,953,5.173,954,5.173,955,7.89,956,6.644,957,5.173,958,7.565,959,5.173,960,5.173,961,3.585,962,3.585,963,3.585,964,3.585,965,3.585,966,3.585,967,3.585,968,3.585,969,3.585,970,6.644,971,5.173,972,5.173,973,5.173,974,5.839,975,5.173,976,5.173,977,5.173,978,5.173,979,5.173,980,5.173,981,6.644,982,4.547,983,5.173,984,5.173,985,6.644]],["title/components/HomeComponent.html",[0,0.277,121,0.933]],["body/components/HomeComponent.html",[0,0.364,1,0.682,2,1.049,3,0.064,4,0.064,5,0.719,6,0.719,7,0.719,8,0.056,10,1.532,11,1.786,12,2.336,13,0.682,14,1.991,15,2.042,17,1.021,18,0.917,19,1.077,21,1.167,23,1.167,25,0.056,26,0.108,27,2.003,28,0.822,29,2.224,30,1.683,31,0.8,32,1.391,33,2.168,34,1.275,36,0.629,37,0.011,38,0.697,39,0.192,40,0.463,42,0.799,43,1.396,45,1.188,46,1.094,47,1.264,48,2.003,49,0.855,50,0.519,52,0.941,53,1.44,55,1.301,56,0.867,61,0.064,62,0.476,63,1.184,64,2.585,66,2.68,68,1.129,74,1.345,75,1.301,76,0.719,77,1.077,78,1.077,79,0.646,80,1.434,81,0.719,82,0.719,83,0.682,84,1.021,85,1.077,86,0.682,87,0.564,88,1.718,89,0.682,90,0.719,91,0.682,92,0.664,93,0.719,94,0.682,95,0.646,96,0.682,97,0.719,98,0.682,99,0.682,100,0.664,101,0.682,102,0.719,103,0.682,104,0.719,105,0.682,106,0.612,107,0.682,108,0.719,109,0.682,110,0.719,111,0.682,112,0.719,113,0.682,114,0.719,115,0.682,116,0.7,117,1.291,118,0.682,119,0.7,120,0.719,121,1.359,122,0.719,123,0.682,124,0.719,125,0.682,126,0.719,127,0.682,128,0.719,129,0.682,130,0.719,131,0.682,132,0.719,133,0.682,134,0.682,135,0.719,136,0.682,137,0.534,138,0.682,139,0.719,140,0.682,141,0.719,142,0.682,143,0.719,144,0.682,145,0.719,146,0.682,147,0.719,148,0.682,149,0.646,150,0.682,151,0.719,152,0.682,153,0.719,154,0.682,155,0.719,156,0.682,157,0.682,158,1.629,159,0.7,160,0.664,161,0.7,162,0.719,163,0.005,164,0.005,223,2.262,262,1.023,273,1.26,311,3.724,538,1.55,986,2.737,987,4.1,988,4.136,989,4.664,990,4.664,991,4.261,992,5.266,993,3.115,994,3.115,995,3.115,996,3.115,997,5.592,998,5.592,999,6.649,1000,3.115,1001,6.368,1002,6.649,1003,3.115,1004,4.113,1005,3.115,1006,2.489,1007,2.737,1008,2.737,1009,2.737,1010,2.737,1011,2.156,1012,2.304,1013,3.115,1014,2.737,1015,2.737,1016,5.592,1017,6.209,1018,2.737,1019,4.664,1020,3.115,1021,5.592,1022,2.737,1023,2.737,1024,2.737,1025,3.115,1026,2.737,1027,2.737,1028,2.737,1029,3.115,1030,3.115,1031,3.115,1032,4.664,1033,4.664,1034,4.1,1035,4.664,1036,4.664,1037,4.664,1038,4.664,1039,4.664,1040,4.664,1041,3.45]],["title/interfaces/IAddress.html",[1042,0.132,1043,2.781]],["body/interfaces/IAddress.html",[3,0.094,4,0.094,8,0.083,25,0.083,26,0.142,37,0.011,39,0.261,49,0.514,61,0.159,62,0.699,137,1.05,163,0.007,164,0.007,188,2.829,189,1.204,200,2.042,209,2.114,254,1.548,433,2.042,434,2.261,437,1.911,492,1.591,736,1.502,853,3.165,854,3.17,855,2.693,856,2.693,932,2.56,991,2.693,1004,2.829,1042,0.229,1043,4.817,1044,0.875,1045,2.984,1046,5.86,1047,5.86,1048,5.483,1049,3.672,1050,3.672,1051,5.483,1052,5.86,1053,2.315,1054,3.17,1055,2.984,1056,3.195,1057,4.241,1058,2.573,1059,3.165,1060,2.573,1061,3.382,1062,2.56,1063,2.56,1064,3.382,1065,2.984,1066,2.984,1067,3.165,1068,3.165,1069,3.382]],["title/interfaces/IAuthStoreState.html",[1042,0.132,1070,3.406]],["body/interfaces/IAuthStoreState.html",[3,0.129,4,0.129,8,0.114,25,0.114,26,0.173,37,0.01,39,0.248,49,0.705,61,0.129,163,0.009,164,0.009,200,3.701,201,1.488,492,2.784,736,2.63,742,3.344,771,4.288,926,4.663,1042,0.194,1044,1.2,1070,5.984,1071,5.515,1072,8.289]],["title/interfaces/IBackendError.html",[1042,0.132,1073,2.949]],["body/interfaces/IBackendError.html",[3,0.129,4,0.129,8,0.113,25,0.113,26,0.173,37,0.01,39,0.248,61,0.165,163,0.009,164,0.009,189,1.144,199,4.078,771,4.282,1042,0.248,1044,1.196,1053,2.421,1073,5.17,1074,4.622,1075,6.762,1076,6.762,1077,4.325,1078,4.994]],["title/interfaces/IBackendSuccess.html",[199,2.781,1042,0.132]],["body/interfaces/IBackendSuccess.html",[3,0.131,4,0.131,8,0.115,25,0.115,26,0.175,37,0.01,39,0.233,61,0.166,163,0.009,164,0.009,189,1.119,199,4.915,771,3.278,1042,0.249,1044,1.212,1053,2.43,1073,4.386,1074,4.687,1075,6.788,1076,6.788,1077,4.386,1078,5.065]],["title/interfaces/IBlog.html",[396,2.296,1042,0.132]],["body/interfaces/IBlog.html",[3,0.107,4,0.107,8,0.094,25,0.094,26,0.155,37,0.01,38,0.749,39,0.271,40,1.153,61,0.166,87,1.406,163,0.008,164,0.008,189,1.191,248,4.183,254,1.571,357,4.152,376,3.067,389,3.398,391,3.067,396,3.595,400,2.929,433,3.667,434,2.962,435,4.325,436,5.373,437,3.243,1042,0.241,1044,1.276,1049,2.325,1050,2.325,1053,2.106,1079,3.398,1080,5.742,1081,4.618,1082,3.398,1083,3.604,1084,3.852,1085,3.852,1086,3.852,1087,3.852,1088,3.852,1089,3.852]],["title/interfaces/IBlogCategory.html",[248,2.296,1042,0.132]],["body/interfaces/IBlogCategory.html",[3,0.118,4,0.118,8,0.103,25,0.103,26,0.164,37,0.01,38,0.927,39,0.249,40,1.05,61,0.17,87,1.034,163,0.008,164,0.008,189,1.188,248,4.138,254,1.608,357,3.656,376,3.361,389,3.724,391,3.361,396,3.075,400,3.21,433,3.429,434,2.608,435,3.809,436,3.949,437,2.384,1042,0.249,1044,1.352,1049,2.548,1050,2.548,1053,1.633,1079,3.724,1080,4.221,1082,3.724,1083,3.949,1084,4.221,1085,4.221,1086,4.221,1087,4.221,1088,4.221,1089,4.221]],["title/interfaces/IBlogStoreState.html",[1042,0.132,1090,3.406]],["body/interfaces/IBlogStoreState.html",[3,0.125,4,0.125,8,0.109,25,0.109,26,0.17,37,0.01,39,0.26,49,0.679,61,0.125,84,1.792,92,1.745,163,0.009,164,0.009,201,1.434,248,4.411,396,4.646,492,2.74,736,2.588,742,3.291,771,4.235,926,4.606,1042,0.187,1044,1.157,1090,5.852,1091,5.314,1092,7.196]],["title/interfaces/IBulkDeleteResponse.html",[1042,0.132,1077,2.949]],["body/interfaces/IBulkDeleteResponse.html",[3,0.133,4,0.133,8,0.116,25,0.116,26,0.176,37,0.01,39,0.199,61,0.167,163,0.009,164,0.009,189,1.065,199,4.194,771,3.325,1042,0.251,1044,1.23,1053,2.439,1073,4.448,1074,4.754,1075,6.071,1076,6.071,1077,5.257,1078,6.677]],["title/interfaces/ICart.html",[1042,0.132,1054,2.204]],["body/interfaces/ICart.html",[3,0.113,4,0.113,8,0.099,25,0.099,26,0.16,37,0.01,39,0.267,61,0.168,137,1.355,163,0.008,164,0.008,189,1.18,254,1.513,434,2.022,492,1.906,512,2.834,606,3.519,742,2.289,1042,0.253,1044,1.048,1053,2.483,1054,3.899,1060,3.082,1062,3.476,1063,3.304,1081,4.769,1093,3.575,1094,4.202,1095,4.092,1096,3.389,1097,3.389,1098,3.389,1099,3.389,1100,4.769,1101,3.389]],["title/interfaces/ICartData.html",[1042,0.132,1097,2.636]],["body/interfaces/ICartData.html",[3,0.117,4,0.117,8,0.103,25,0.103,26,0.164,37,0.011,39,0.238,61,0.17,137,0.976,163,0.008,164,0.008,189,1.157,254,1.09,434,2.102,492,2.669,512,2.947,606,3.048,742,3.205,1042,0.255,1044,1.09,1053,2.499,1054,4.149,1060,4.512,1062,3.205,1063,2.38,1093,3.717,1094,4.237,1095,2.947,1096,3.524,1097,4.367,1098,4.961,1099,3.524,1100,4.886,1101,3.524]],["title/interfaces/IColor.html",[640,2.12,1042,0.132]],["body/interfaces/IColor.html",[3,0.126,4,0.126,8,0.111,25,0.111,26,0.171,37,0.01,38,0.98,39,0.229,61,0.174,163,0.009,164,0.009,189,1.176,254,1.654,379,3.447,535,3.17,579,3.17,640,3.673,1042,0.261,1044,1.172,1102,3.998,1103,3.998,1104,3.17]],["title/interfaces/ICommonStoreState.html",[1042,0.132,1105,3.406]],["body/interfaces/ICommonStoreState.html",[3,0.12,4,0.12,8,0.105,25,0.105,26,0.166,37,0.011,39,0.262,49,0.653,61,0.12,163,0.008,164,0.008,201,1.378,492,2.937,702,5.974,703,5.974,705,4.544,706,4.996,736,2.86,742,3.527,771,4.178,926,4.544,1042,0.18,1044,1.112,1105,5.713,1106,5.108,1107,7.099,1108,7.099]],["title/interfaces/IControlItem.html",[483,2.781,1042,0.132]],["body/interfaces/IControlItem.html",[3,0.133,4,0.133,8,0.117,25,0.117,26,0.176,37,0.01,39,0.251,46,1.474,61,0.157,163,0.009,164,0.009,189,1.102,483,4.968,519,4.706,736,2.12,1042,0.2,1044,1.235,1053,1.847,1109,5.158,1110,7.353]],["title/interfaces/ICoupon.html",[705,2.397,1042,0.132]],["body/interfaces/ICoupon.html",[3,0.12,4,0.12,8,0.105,25,0.105,26,0.165,37,0.01,38,0.652,39,0.261,61,0.16,163,0.008,164,0.008,189,1.169,254,1.586,437,2.424,463,4.423,692,3.588,705,4.017,706,3.588,736,2.541,792,5.408,793,5.736,797,6.13,932,2.424,1042,0.24,1044,1.11,1053,2.309,1056,2.682,1058,4.541,1111,4.291,1112,6.451,1113,3.785]],["title/interfaces/ICreateAddress.html",[1042,0.132,1055,2.781]],["body/interfaces/ICreateAddress.html",[3,0.095,4,0.095,8,0.083,25,0.083,26,0.142,37,0.011,39,0.258,40,1.098,49,0.516,61,0.159,62,0.702,137,1.053,163,0.007,164,0.007,188,2.841,189,1.203,200,2.051,209,2.124,254,1.415,433,2.051,434,2.268,437,1.919,492,1.598,736,1.509,853,3.179,854,3.179,855,2.705,856,2.705,932,2.567,991,2.705,1004,2.841,1042,0.229,1043,4.519,1044,0.879,1045,2.997,1046,5.867,1047,5.867,1048,5.49,1049,3.676,1050,3.676,1051,5.49,1052,5.867,1053,2.318,1054,3.179,1055,4.01,1056,3.202,1057,4.253,1058,2.584,1059,3.179,1060,2.584,1061,3.397,1062,2.567,1063,2.567,1064,3.397,1065,2.997,1066,2.997,1067,3.179,1068,3.179,1069,3.397]],["title/interfaces/ICreateBlog.html",[376,2.51,1042,0.132]],["body/interfaces/ICreateBlog.html",[3,0.115,4,0.115,8,0.101,25,0.101,26,0.161,37,0.01,38,0.782,39,0.259,40,1.182,61,0.169,87,1.008,163,0.008,164,0.008,189,1.189,248,3.75,254,1.453,357,4.236,376,4.098,389,3.632,391,3.278,396,2.999,400,3.131,433,3.73,434,3.022,435,4.413,436,3.852,437,2.325,1042,0.246,1044,1.331,1049,2.485,1050,2.485,1053,1.592,1079,3.632,1080,4.117,1082,3.632,1083,3.852,1084,4.117,1085,4.117,1086,4.117,1087,4.117,1088,4.117,1089,4.117]],["title/interfaces/ICreateBlogCategory.html",[1042,0.132,1082,2.781]],["body/interfaces/ICreateBlogCategory.html",[3,0.119,4,0.119,8,0.105,25,0.105,26,0.165,37,0.01,38,0.93,39,0.239,40,1.058,61,0.171,87,1.047,163,0.008,164,0.008,189,1.185,248,3.839,254,1.477,357,3.685,376,3.404,389,3.771,391,3.404,396,3.114,400,3.251,433,3.448,434,2.629,435,3.839,436,4,437,2.415,1042,0.25,1044,1.363,1049,2.581,1050,2.581,1053,1.654,1079,3.771,1080,4.275,1082,4.648,1083,4,1084,4.275,1085,4.275,1086,4.275,1087,4.275,1088,4.275,1089,4.275]],["title/interfaces/ICreateCart.html",[1042,0.132,1096,2.636]],["body/interfaces/ICreateCart.html",[3,0.119,4,0.119,8,0.104,25,0.104,26,0.165,37,0.01,39,0.239,40,1.056,61,0.171,137,0.987,163,0.008,164,0.008,189,1.175,254,1.102,434,2.125,492,2.003,512,2.979,606,3.571,742,2.406,1042,0.256,1044,1.102,1053,2.467,1054,3.677,1060,3.24,1062,3.519,1063,2.406,1093,3.758,1094,4.247,1095,2.979,1096,4.397,1097,3.562,1098,3.562,1099,3.562,1100,4.919,1101,3.562]],["title/interfaces/ICreateCommonProductSup.html",[379,2.397,1042,0.132]],["body/interfaces/ICreateCommonProductSup.html",[3,0.128,4,0.128,8,0.112,25,0.112,26,0.172,37,0.01,38,0.982,39,0.192,61,0.174,163,0.009,164,0.009,189,1.17,254,1.581,379,4.187,535,3.214,579,3.214,640,3.091,1042,0.262,1044,1.189,1102,4.054,1103,4.054,1104,3.214]],["title/interfaces/ICreateCoupon.html",[692,2.636,1042,0.132]],["body/interfaces/ICreateCoupon.html",[3,0.124,4,0.124,8,0.109,25,0.109,26,0.169,37,0.01,38,0.678,39,0.244,61,0.162,163,0.009,164,0.009,189,1.166,254,1.399,437,2.521,463,4.335,692,4.524,705,3.395,706,3.733,736,1.982,792,5.468,793,5.8,797,6.199,932,2.521,1042,0.244,1044,1.154,1053,2.341,1056,2.79,1058,3.395,1111,4.463,1112,4.822,1113,3.937]],["title/interfaces/ICreateProduct.html",[1042,0.132,1114,2.636]],["body/interfaces/ICreateProduct.html",[3,0.105,4,0.105,8,0.092,18,1.002,25,0.092,26,0.152,37,0.011,38,0.819,39,0.272,49,0.573,61,0.159,87,0.923,95,1.366,106,1.568,149,1.058,163,0.008,164,0.008,189,1.183,254,1.259,357,3.984,400,2.868,434,2.942,435,4.296,512,3.404,543,5.331,606,2.201,736,1.675,745,2.637,857,3.002,858,3.002,1042,0.226,1044,0.975,1053,2.486,1063,3.331,1081,5.331,1094,3.967,1114,4.071,1115,3.528,1116,4.486,1117,3.876,1118,4.868,1119,5.518,1120,2.747,1121,3.771,1122,4.074,1123,4.294,1124,4.868,1125,3.528]],["title/interfaces/ICreateReview.html",[1042,0.132,1126,2.949]],["body/interfaces/ICreateReview.html",[3,0.126,4,0.126,8,0.11,25,0.11,26,0.17,37,0.01,39,0.245,61,0.152,68,1.596,163,0.009,164,0.009,189,1.179,254,1.407,433,2.72,437,2.545,1042,0.245,1044,1.166,1049,2.72,1050,2.72,1053,2.348,1062,3.51,1113,5.483,1117,3.588,1126,5.091,1127,4.506,1128,6.716]],["title/interfaces/ICustomerStoreState.html",[1042,0.132,1129,3.406]],["body/interfaces/ICustomerStoreState.html",[3,0.129,4,0.129,8,0.114,25,0.114,26,0.173,37,0.01,39,0.248,49,0.705,61,0.129,163,0.009,164,0.009,201,1.488,492,2.784,736,2.63,742,3.344,771,4.288,854,4.288,926,4.663,991,4.882,1042,0.194,1044,1.2,1129,5.984,1130,5.515]],["title/interfaces/IData.html",[1042,0.132,1131,3.406]],["body/interfaces/IData.html",[3,0.103,4,0.103,8,0.09,25,0.09,26,0.15,37,0.011,39,0.223,49,0.728,61,0.103,92,1.061,100,1.381,106,0.978,158,1.09,163,0.008,164,0.008,189,1.069,217,3.955,230,2.222,398,2.575,519,4.983,547,3.248,702,3.681,987,4.375,991,4.243,992,3.445,1042,0.154,1044,0.952,1092,4.375,1116,2.8,1131,5.758,1132,4.375,1133,8.857,1134,7.632,1135,3.978,1136,5.179,1137,3.978,1138,7.205,1139,6.48,1140,6.48,1141,7.914,1142,7.205,1143,6.48,1144,6.48,1145,6.48,1146,6.48,1147,3.978,1148,3.978,1149,3.978,1150,4.977,1151,4.375,1152,4.977,1153,4.977,1154,4.977,1155,4.977,1156,4.977,1157,4.977,1158,4.977,1159,4.977,1160,4.977,1161,4.977,1162,4.977]],["title/interfaces/IDeleteCatProductRequest.html",[1042,0.132,1099,2.636]],["body/interfaces/IDeleteCatProductRequest.html",[3,0.121,4,0.121,8,0.106,25,0.106,26,0.166,37,0.01,39,0.222,61,0.171,137,1.003,163,0.008,164,0.008,189,1.177,254,1.12,434,2.16,492,2.037,512,3.029,606,3.1,742,2.446,1042,0.257,1044,1.12,1053,2.42,1054,3.714,1060,3.294,1062,3.533,1063,2.446,1093,3.82,1094,4.029,1095,3.029,1096,3.622,1097,3.622,1098,3.622,1099,4.442,1100,5.751,1101,3.622]],["title/interfaces/IEnquiry.html",[706,2.636,1042,0.132]],["body/interfaces/IEnquiry.html",[3,0.12,4,0.12,8,0.105,25,0.105,26,0.165,37,0.01,38,0.907,39,0.261,61,0.16,163,0.008,164,0.008,189,1.189,254,1.586,437,3.372,463,4.001,692,3.588,705,3.263,706,4.417,736,1.906,792,4.659,793,4.942,797,5.281,932,3.372,1042,0.24,1044,1.11,1053,2.043,1056,3.732,1058,3.263,1111,4.291,1112,4.636,1113,5.267]],["title/interfaces/IForgotPassword.html",[177,2.636,1042,0.132]],["body/interfaces/IForgotPassword.html",[3,0.13,4,0.13,8,0.114,25,0.114,26,0.174,37,0.01,39,0.195,61,0.171,163,0.009,164,0.009,177,4.637,182,3.889,187,3.889,189,1.172,209,3.703,932,3.593,1042,0.257,1044,1.203,1049,2.807,1050,2.807,1056,2.907,1163,4.351,1164,4.102]],["title/interfaces/ILogin.html",[182,2.636,1042,0.132]],["body/interfaces/ILogin.html",[3,0.128,4,0.128,8,0.112,25,0.112,26,0.172,37,0.01,39,0.23,61,0.17,163,0.009,164,0.009,177,3.835,182,4.599,187,3.835,189,1.178,209,3.963,932,3.581,1042,0.256,1044,1.186,1049,2.769,1050,2.769,1056,2.867,1163,4.291,1164,4.046]],["title/interfaces/INamedProductAttr.html",[1042,0.132,1119,2.949]],["body/interfaces/INamedProductAttr.html",[3,0.114,4,0.114,8,0.1,18,1.083,25,0.1,26,0.16,37,0.01,38,0.936,39,0.246,49,0.619,61,0.163,87,0.998,95,1.434,106,1.359,149,1.143,163,0.008,164,0.008,189,1.183,254,1.562,357,2.849,400,3.098,434,2.551,435,3.725,512,3.576,543,3.812,606,2.378,736,1.809,745,2.849,857,3.243,858,3.243,1042,0.234,1044,1.054,1053,2.446,1063,2.888,1094,3.439,1114,3.407,1115,3.812,1116,3.889,1117,4.071,1118,5.113,1119,5.766,1120,2.968,1121,4.073,1122,4.401,1123,4.511,1124,5.113,1125,3.812]],["title/interfaces/IOrderItemResponse.html",[1042,0.132,1165,3.152]],["body/interfaces/IOrderItemResponse.html",[3,0.118,4,0.118,8,0.103,25,0.103,26,0.164,37,0.01,39,0.264,61,0.146,163,0.008,164,0.008,189,1.189,254,1.579,437,2.388,606,3.467,851,4.228,854,2.957,855,3.367,856,3.367,857,3.367,858,3.367,1042,0.219,1044,1.094,1053,2.464,1058,3.216,1062,3.355,1063,3.355,1094,3.995,1095,2.957,1098,3.536,1165,5.234,1166,4.228,1167,7.058,1168,5.025,1169,5.025,1170,5.025,1171,5.025,1172,5.025]],["title/interfaces/IOrderResponse.html",[854,2.204,1042,0.132]],["body/interfaces/IOrderResponse.html",[3,0.114,4,0.114,8,0.1,25,0.1,26,0.16,37,0.01,39,0.269,61,0.143,163,0.008,164,0.008,189,1.192,254,1.562,437,3.311,606,2.378,851,4.073,854,3.576,855,3.243,856,3.243,857,3.243,858,3.243,1042,0.214,1044,1.054,1053,2.446,1058,4.458,1062,2.301,1063,2.301,1094,2.74,1095,4.099,1098,4.902,1165,4.073,1166,4.073,1167,4.841,1168,6.965,1169,6.965,1170,6.965,1171,6.965,1172,6.641]],["title/interfaces/IProduct.html",[1042,0.132,1120,2.296]],["body/interfaces/IProduct.html",[3,0.099,4,0.099,8,0.087,18,0.941,25,0.087,26,0.146,37,0.011,38,0.794,39,0.272,40,0.938,49,0.538,61,0.155,87,1.362,95,1.622,106,1.536,149,0.993,163,0.007,164,0.007,189,1.177,254,1.495,357,2.477,400,2.694,434,2.884,435,4.211,512,4.043,543,3.314,606,2.067,736,2.323,745,2.477,857,2.82,858,2.82,1042,0.219,1044,0.916,1053,2.509,1063,3.265,1094,3.888,1114,2.962,1115,3.314,1116,4.397,1117,4.428,1118,5.781,1119,5.992,1120,3.404,1121,5.561,1122,6.009,1123,5.1,1124,4.673,1125,3.314]],["title/interfaces/IProductBrand.html",[535,2.204,1042,0.132]],["body/interfaces/IProductBrand.html",[3,0.126,4,0.126,8,0.111,25,0.111,26,0.171,37,0.01,38,0.98,39,0.229,61,0.174,163,0.009,164,0.009,189,1.176,254,1.654,379,3.447,535,3.819,579,3.17,640,3.049,1042,0.261,1044,1.172,1102,3.998,1103,3.998,1104,3.17]],["title/interfaces/IProductCategory.html",[579,2.204,1042,0.132]],["body/interfaces/IProductCategory.html",[3,0.126,4,0.126,8,0.111,25,0.111,26,0.171,37,0.01,38,0.98,39,0.229,61,0.174,163,0.009,164,0.009,189,1.176,254,1.654,379,3.447,535,3.17,579,3.819,640,3.049,1042,0.261,1044,1.172,1102,3.998,1103,3.998,1104,3.17]],["title/interfaces/IProductStoreState.html",[1042,0.132,1173,3.406]],["body/interfaces/IProductStoreState.html",[3,0.108,4,0.108,8,0.095,25,0.095,26,0.156,37,0.011,39,0.263,49,0.591,61,0.108,106,1.532,137,1.335,163,0.008,164,0.008,201,1.247,492,3.073,535,4.031,547,5.085,579,4.031,640,3.877,736,2.43,742,3.69,771,4.031,926,4.384,992,5.393,1042,0.163,1044,1.006,1104,4.031,1116,4.384,1120,4.509,1173,5.366,1174,4.623,1175,7.793]],["title/interfaces/IRegister.html",[1042,0.132,1164,2.781]],["body/interfaces/IRegister.html",[3,0.122,4,0.122,8,0.107,25,0.107,26,0.168,37,0.01,39,0.258,40,1.075,61,0.168,163,0.008,164,0.008,177,3.669,182,3.669,187,3.669,189,1.188,209,3.923,932,3.544,1042,0.252,1044,1.135,1049,3.632,1050,3.632,1056,3.761,1163,4.105,1164,4.723]],["title/interfaces/IResetPassword.html",[187,2.636,1042,0.132]],["body/interfaces/IResetPassword.html",[3,0.13,4,0.13,8,0.114,25,0.114,26,0.174,37,0.01,39,0.195,61,0.171,163,0.009,164,0.009,177,3.889,182,3.889,187,4.637,189,1.172,209,3.976,932,3.346,1042,0.257,1044,1.203,1049,2.807,1050,2.807,1056,2.907,1163,4.351,1164,4.102]],["title/interfaces/IReview.html",[1042,0.132,1117,2.51]],["body/interfaces/IReview.html",[3,0.12,4,0.12,8,0.106,25,0.106,26,0.166,37,0.01,39,0.262,40,1.064,61,0.148,68,1.746,163,0.008,164,0.008,189,1.184,254,1.588,433,2.605,437,3.379,1042,0.24,1044,1.116,1049,2.605,1050,2.605,1053,2.314,1062,3.468,1113,5.416,1117,4.219,1126,4.037,1127,4.315,1128,6.634]],["title/interfaces/ITag.html",[1042,0.132,1104,2.204]],["body/interfaces/ITag.html",[3,0.126,4,0.126,8,0.111,25,0.111,26,0.171,37,0.01,38,0.98,39,0.229,61,0.174,163,0.009,164,0.009,189,1.176,254,1.654,379,3.447,535,3.17,579,3.17,640,3.049,1042,0.261,1044,1.172,1102,3.998,1103,3.998,1104,3.819]],["title/interfaces/IUpdateCartRequest.html",[1042,0.132,1101,2.636]],["body/interfaces/IUpdateCartRequest.html",[3,0.121,4,0.121,8,0.106,25,0.106,26,0.166,37,0.01,39,0.222,61,0.171,137,1.003,163,0.008,164,0.008,189,1.17,254,1.12,434,2.16,492,2.037,512,3.029,606,3.1,742,2.446,1042,0.257,1044,1.12,1053,2.475,1054,3.714,1060,3.294,1062,3.245,1063,2.446,1093,3.82,1094,4.262,1095,3.029,1096,3.622,1097,3.622,1098,3.622,1099,3.622,1100,5.751,1101,4.442]],["title/interfaces/IUpdateUser.html",[1042,0.132,1065,2.781]],["body/interfaces/IUpdateUser.html",[3,0.098,4,0.098,8,0.086,25,0.086,26,0.145,37,0.011,39,0.241,40,1.231,49,0.532,61,0.161,62,0.725,137,1.075,163,0.007,164,0.007,188,2.931,189,1.202,200,2.116,209,2.191,254,1.432,433,2.116,434,2.315,437,1.979,492,1.648,736,1.557,853,3.279,854,3.245,855,2.79,856,2.79,932,2.621,991,2.79,1004,2.931,1042,0.232,1043,5.082,1044,0.906,1045,3.091,1046,5.202,1047,5.202,1048,4.868,1049,3.701,1050,3.701,1051,4.868,1052,5.202,1053,2.228,1054,3.245,1055,3.091,1056,3.7,1057,5.39,1058,2.665,1059,3.279,1060,2.665,1061,3.504,1062,2.621,1063,2.621,1064,3.504,1065,4.094,1066,3.091,1067,3.279,1068,3.279,1069,3.504]],["title/interfaces/IUser.html",[200,1.903,1042,0.132]],["body/interfaces/IUser.html",[3,0.086,4,0.086,8,0.075,25,0.075,26,0.133,37,0.011,39,0.272,40,0.853,49,0.467,61,0.154,62,0.636,137,0.984,163,0.007,164,0.007,188,4.389,189,1.202,200,2.564,209,3.281,254,1.51,433,3.168,434,2.119,437,2.964,492,2.289,736,2.162,853,2.877,854,3.67,855,2.448,856,2.448,932,3.111,991,4.179,1004,4.389,1042,0.22,1043,4.859,1044,0.795,1045,2.713,1046,4.866,1047,4.866,1048,4.553,1049,3.592,1050,3.592,1051,4.553,1052,4.866,1053,2.131,1054,3.67,1055,2.713,1056,3.56,1057,5.154,1058,3.992,1059,4.911,1060,3.992,1061,5.248,1062,2.399,1063,2.399,1064,5.248,1065,2.713,1066,2.713,1067,2.877,1068,2.877,1069,3.075,1081,4.911]],["title/interfaces/IUserStoreState.html",[1042,0.132,1176,3.406]],["body/interfaces/IUserStoreState.html",[3,0.12,4,0.12,8,0.105,25,0.105,26,0.166,37,0.011,39,0.262,49,0.654,61,0.12,163,0.008,164,0.008,200,3.821,201,1.381,492,2.938,736,2.861,742,3.529,771,4.181,926,4.547,1042,0.18,1044,1.114,1107,7.104,1108,7.104,1176,5.719,1177,5.118,1178,8.082,1179,8.082]],["title/components/InputComponent.html",[0,0.277,123,0.933]],["body/components/InputComponent.html",[0,0.373,1,0.709,2,1.08,3,0.067,4,0.067,5,0.748,6,0.748,7,0.748,8,0.059,13,0.709,14,1.996,15,2.048,17,1.051,18,1.392,19,1.109,21,1.201,23,1.201,25,0.059,26,0.111,27,1.72,28,0.846,29,2.05,30,1.551,34,1.502,36,1.279,37,0.01,38,0.823,39,0.238,40,0.94,42,1.256,43,1.729,45,1.211,46,1.291,47,0.878,48,1.16,49,0.759,50,0.54,61,0.067,62,0.495,68,0.654,76,0.748,77,1.109,78,1.109,79,0.672,80,1.462,81,0.748,82,0.748,83,0.709,84,1.051,85,1.109,86,0.709,87,0.587,88,1.738,89,0.709,90,0.748,91,0.709,92,0.69,93,0.748,94,0.709,95,0.672,96,0.709,97,0.748,98,0.709,99,0.709,100,0.69,101,0.709,102,0.748,103,0.709,104,0.748,105,0.709,106,0.637,107,0.709,108,0.748,109,0.709,110,0.748,111,0.709,112,0.748,113,0.709,114,0.748,115,0.709,116,0.728,117,1.322,118,0.709,119,0.728,120,0.748,121,0.709,122,0.748,123,1.55,124,0.748,125,0.709,126,0.748,127,0.709,128,0.748,129,0.709,130,0.748,131,0.709,132,0.748,133,0.709,134,0.709,135,0.748,136,0.709,137,0.555,138,0.709,139,0.748,140,0.709,141,0.748,142,0.709,143,0.748,144,0.709,145,0.748,146,0.709,147,0.748,148,0.709,149,0.672,150,0.709,151,0.748,152,0.709,153,0.748,154,0.709,155,0.748,156,0.709,157,0.709,158,0.709,159,0.728,160,1.772,161,0.728,162,0.748,163,0.006,164,0.006,234,1.374,254,1.293,262,1.064,317,2.391,340,1.232,492,1.127,497,3.24,513,3.561,519,4.123,631,2.702,637,2.702,715,3.916,716,3.734,717,3.134,718,3.134,719,3.134,720,3.134,721,3.734,722,3.134,728,2.114,729,3.734,731,3.134,732,3.54,733,2.114,735,2.114,736,1.578,739,2.114,741,2.114,742,1.353,745,2.484,869,3.324,870,3.324,872,3.324,873,3.961,874,3.324,875,3.324,877,4.233,880,5.403,882,4.679,887,5.56,888,2.242,889,2.242,890,2.242,891,2.242,892,2.242,893,2.242,894,2.242,896,2.242,897,2.242,898,2.242,899,2.242,900,2.242,903,2.242,904,2.242,1180,2.847,1181,4.803,1182,4.803,1183,4.803,1184,4.803,1185,4.803,1186,4.803,1187,4.803,1188,3.239,1189,2.847,1190,3.239]],["title/components/LayoutComponent.html",[0,0.277,125,0.933]],["body/components/LayoutComponent.html",[0,0.391,1,0.771,2,1.148,3,0.073,4,0.073,5,0.813,6,0.813,7,0.813,8,0.064,13,0.771,14,2.007,15,2.059,17,1.118,18,1.004,19,1.179,20,5.28,21,1.277,23,1.277,25,0.109,26,0.118,28,0.9,31,0.905,32,1.572,33,2.266,34,1.285,36,0.711,37,0.011,38,0.74,39,0.158,40,0.523,42,0.875,43,1.148,45,1.149,46,1.058,49,0.934,50,0.587,51,1.381,52,1.064,56,0.981,57,3.095,61,0.073,62,0.539,63,1.339,68,1.473,76,0.813,77,1.179,78,1.179,79,0.731,80,1.521,81,0.813,82,0.813,83,0.771,84,1.118,85,1.179,86,0.771,87,0.638,88,1.78,89,0.771,90,0.813,91,0.771,92,0.75,93,0.813,94,0.771,95,0.731,96,0.771,97,0.813,98,0.771,99,0.771,100,0.75,101,0.771,102,0.813,103,0.771,104,0.813,105,0.771,106,0.692,107,0.771,108,0.813,109,0.771,110,0.813,111,0.771,112,0.813,113,0.771,114,0.813,115,0.771,116,0.792,117,1.387,118,0.771,119,0.792,120,0.813,121,0.771,122,0.813,123,0.771,124,0.813,125,1.442,126,0.813,127,0.771,128,0.813,129,0.771,130,0.813,131,0.771,132,0.813,133,0.771,134,0.771,135,0.813,136,0.771,137,0.603,138,0.771,139,0.813,140,0.771,141,0.813,142,0.771,143,0.813,144,0.771,145,0.813,146,0.771,147,0.813,148,0.771,149,0.731,150,0.771,151,0.813,152,0.771,153,0.813,154,0.771,155,0.813,156,0.771,157,0.771,158,0.771,159,0.792,160,0.75,161,0.792,162,0.813,163,0.006,164,0.006,173,6.411,174,4.488,180,3.379,188,3.158,200,1.572,201,0.835,217,2.682,219,2.988,230,3.257,262,1.157,264,1.688,265,1.688,281,1.157,294,2.355,466,3.716,627,3.332,939,2.437,941,2.605,1149,6.159,1151,4.488,1191,3.095,1192,5.106,1193,6.007,1194,6.007,1195,6.007,1196,5.106,1197,5.106,1198,6.588,1199,3.521,1200,3.521,1201,3.521,1202,3.521,1203,3.521,1204,5.106,1205,3.521,1206,3.521,1207,3.521,1208,3.521,1209,3.521,1210,3.095,1211,3.521,1212,3.521,1213,5.106,1214,5.106,1215,5.106,1216,4.488,1217,4.488]],["title/components/LoaderComponent.html",[0,0.277,127,0.933]],["body/components/LoaderComponent.html",[0,0.403,1,0.813,2,1.192,3,0.077,4,0.077,5,1.225,6,0.857,7,0.857,8,0.067,10,1.742,11,1.976,12,2.585,13,0.813,14,2.013,15,2.066,17,1.161,18,1.043,19,1.225,25,0.067,26,0.123,27,2.216,28,0.934,29,2.418,30,1.83,31,0.954,34,1.308,36,0.75,37,0.011,38,0.758,39,0.192,40,0.551,42,0.909,43,1.391,45,1.015,46,0.934,47,1.438,48,2.216,49,0.802,50,0.618,51,1.456,55,1.551,56,1.034,61,0.077,62,0.568,63,1.412,68,0.75,75,1.551,76,0.857,77,1.225,78,1.225,79,0.77,80,1.559,81,0.857,82,0.857,83,0.813,84,1.161,85,1.225,86,0.813,87,0.672,88,1.805,89,0.813,90,0.857,91,0.813,92,0.791,93,0.857,94,0.813,95,0.77,96,0.813,97,0.857,98,0.813,99,0.813,100,0.791,101,0.813,102,0.857,103,0.813,104,0.857,105,0.813,106,0.73,107,0.813,108,0.857,109,0.813,110,0.857,111,0.813,112,0.857,113,0.813,114,0.857,115,0.813,116,0.835,117,1.429,118,0.813,119,0.835,120,0.857,121,0.813,122,0.857,123,0.813,124,0.857,125,0.813,126,0.857,127,1.478,128,0.857,129,0.813,130,0.857,131,0.813,132,0.857,133,0.813,134,0.813,135,0.857,136,0.813,137,0.636,138,0.813,139,0.857,140,0.813,141,0.857,142,0.813,143,0.857,144,0.813,145,0.857,146,0.813,147,0.857,148,0.813,149,0.77,150,0.813,151,0.857,152,0.813,153,0.857,154,0.813,155,0.857,156,0.813,157,0.813,158,0.813,159,0.835,160,0.791,161,0.835,162,0.857,163,0.006,164,0.006,180,3.481,234,1.062,262,1.22,466,3.827,479,4.238,497,2.542,631,2.983,736,1.22,745,2.743,755,3.263,775,2.186,776,2.746,780,3.263,946,4.577,1218,3.263,1219,5.303,1220,6.527,1221,6.188,1222,3.712,1223,5.492,1224,7.644,1225,5.303,1226,3.712,1227,3.712,1228,3.712,1229,3.712,1230,3.712,1231,5.303,1232,5.303,1233,3.712,1234,3.712,1235,3.712,1236,3.712,1237,3.712,1238,3.712,1239,5.303,1240,3.712,1241,3.712,1242,3.712,1243,3.712]],["title/injectables/LoaderService.html",[165,1.671,1223,3.152]],["body/injectables/LoaderService.html",[3,0.123,4,0.123,8,0.108,16,3.214,25,0.108,26,0.168,28,1.28,34,1.436,37,0.011,42,1.245,43,1.633,45,1.39,46,1.28,47,1.969,49,0.816,50,0.994,56,1.661,61,0.123,62,0.912,163,0.008,164,0.008,165,2.848,167,3.214,204,3.356,234,2.241,1220,6.883,1223,5.372,1244,5.243,1245,7.831,1246,8.15,1247,8.15,1248,5.966,1249,5.966,1250,7.263,1251,5.966,1252,7.263,1253,5.966,1254,5.966,1255,5.966,1256,5.966]],["title/components/LoginComponent.html",[0,0.277,129,0.933]],["body/components/LoginComponent.html",[0,0.394,1,0.781,2,1.159,3,0.074,4,0.074,5,0.824,6,0.824,7,0.824,8,0.065,13,0.781,14,2.009,15,2.061,17,1.129,18,1.014,19,1.191,21,1.29,23,1.29,25,0.065,26,0.119,28,0.908,33,2.059,34,1.291,37,0.011,38,0.68,42,0.612,43,0.802,45,1.345,46,1.239,49,0.91,50,0.595,51,1.4,52,1.079,56,0.994,61,0.074,62,0.546,68,0.721,76,0.824,77,1.191,78,1.191,79,0.741,80,1.531,81,0.824,82,0.824,83,0.781,84,1.129,85,1.191,86,0.781,87,0.646,88,1.786,89,0.781,90,0.824,91,0.781,92,0.761,93,0.824,94,0.781,95,0.741,96,0.781,97,0.824,98,0.781,99,0.781,100,0.761,101,0.781,102,0.824,103,0.781,104,0.824,105,0.781,106,0.702,107,0.781,108,0.824,109,0.781,110,0.824,111,0.781,112,0.824,113,0.781,114,0.824,115,0.781,116,1.361,117,1.398,118,1.451,119,1.491,120,0.824,121,0.781,122,0.824,123,1.451,124,0.824,125,0.781,126,0.824,127,0.781,128,0.824,129,1.451,130,0.824,131,0.781,132,0.824,133,1.451,134,0.781,135,0.824,136,0.781,137,0.612,138,0.781,139,0.824,140,0.781,141,0.824,142,0.781,143,0.824,144,0.781,145,0.824,146,0.781,147,0.824,148,0.781,149,0.741,150,0.781,151,0.824,152,0.781,153,0.824,154,0.781,155,0.824,156,0.781,157,0.781,158,0.781,159,0.802,160,0.761,161,0.802,162,0.824,163,0.006,164,0.006,172,6.441,198,1.711,205,1.173,209,3.065,217,2.703,223,2.449,224,2.106,262,1.173,273,1.444,274,1.242,281,1.173,294,2.963,317,2.529,325,1.846,330,3.131,335,3.429,339,1.776,340,1.357,342,1.776,351,1.65,353,1.846,466,3.744,485,4.189,785,4.781,801,2.329,924,5.298,926,2.9,927,4.121,929,4.532,931,4.121,932,2.154,933,4.532,936,4.532,938,2.852,939,2.47,940,2.852,941,2.64,942,2.852,943,2.852,945,3.137,946,3.814,1257,3.137,1258,5.156,1259,5.156,1260,3.569,1261,3.569,1262,3.569,1263,4.532,1264,3.569,1265,3.569,1266,3.569,1267,3.569]],["title/components/OrdersComponent.html",[0,0.277,131,0.933]],["body/components/OrdersComponent.html",[0,0.345,1,0.623,2,0.98,3,0.059,4,0.059,5,0.657,6,0.657,7,0.657,8,0.052,10,1.432,11,1.691,12,2.212,13,0.623,14,1.978,15,2.029,17,0.954,18,0.857,19,1.006,21,1.09,23,1.09,25,0.052,26,0.101,27,1.896,28,0.768,29,2.125,30,1.608,31,0.732,32,1.271,33,2.095,34,1.408,36,1.198,37,0.011,38,0.788,39,0.217,40,0.881,42,1.155,43,1.627,45,1.29,46,1.188,47,1.435,48,1.896,49,0.898,50,0.474,51,1.117,52,0.86,55,1.19,56,0.793,61,0.059,62,0.435,63,1.083,64,1.316,66,1.365,68,0.575,74,1.229,75,1.19,76,0.657,77,1.006,78,1.006,79,0.591,80,1.37,81,0.657,82,0.657,83,0.623,84,0.954,85,1.006,86,0.623,87,0.516,88,1.671,89,0.623,90,0.657,91,0.623,92,0.607,93,0.657,94,0.623,95,0.591,96,0.623,97,0.657,98,0.623,99,0.623,100,0.607,101,0.623,102,0.657,103,0.623,104,0.657,105,0.623,106,0.56,107,0.623,108,0.657,109,0.623,110,0.657,111,0.623,112,0.657,113,0.623,114,0.657,115,0.623,116,0.64,117,1.223,118,0.623,119,0.64,120,0.657,121,0.623,122,0.657,123,0.623,124,0.657,125,0.623,126,0.657,127,0.623,128,0.657,129,0.623,130,0.657,131,1.298,132,0.657,133,0.623,134,0.623,135,0.657,136,0.623,137,0.488,138,0.623,139,0.657,140,0.623,141,0.657,142,0.623,143,0.657,144,0.623,145,0.657,146,0.623,147,0.657,148,0.623,149,0.591,150,0.623,151,0.657,152,0.623,153,0.657,154,0.623,155,0.657,156,0.623,157,0.623,158,0.623,159,0.64,160,0.607,161,0.64,162,0.657,163,0.005,164,0.005,189,0.574,201,0.675,217,2.855,218,2.853,219,2.634,220,2.853,221,2.853,222,2.853,223,2.142,228,2.853,229,2.853,230,3.011,231,2.853,232,2.853,233,2.348,234,1.697,236,2.168,238,2.634,239,2.951,241,2.348,243,1.365,254,1.135,258,2.348,260,2.348,262,0.936,263,1.534,264,1.365,265,1.365,266,1.534,267,1.534,268,1.534,269,1.534,270,1.534,271,1.534,272,1.051,273,1.152,281,0.936,282,2.348,283,2.254,284,2.348,286,1.534,287,1.534,301,1.534,302,2.348,304,1.534,305,1.534,306,1.534,307,1.534,308,1.534,309,2.348,310,3.196,311,2.742,413,3.454,414,3.916,419,3.016,455,3.223,457,3.483,462,3.83,463,2.254,848,5.213,854,3.838,988,3.916,991,3.765,1001,4.74,1006,2.276,1007,2.503,1008,2.503,1026,2.503,1027,2.503,1028,2.503,1041,3.223,1063,2.478,1095,3.068,1268,2.503,1269,4.358,1270,4.358,1271,2.847,1272,2.847,1273,2.847,1274,2.847,1275,2.847,1276,4.358,1277,2.847,1278,4.358,1279,4.358,1280,2.847,1281,2.847,1282,2.847,1283,5.213,1284,2.847,1285,2.847,1286,2.847,1287,2.847,1288,2.847,1289,2.503,1290,2.847,1291,2.847,1292,4.358,1293,4.358]],["title/components/PasswordComponent.html",[0,0.277,133,0.933]],["body/components/PasswordComponent.html",[0,0.367,1,0.691,2,1.059,3,0.065,4,0.065,5,0.729,6,0.729,7,0.729,8,0.057,13,0.691,14,1.993,15,2.044,17,1.031,18,1.379,19,1.087,21,1.178,23,1.178,25,0.057,26,0.109,27,1.687,28,0.83,29,2.018,30,1.527,34,1.491,36,1.262,37,0.011,38,0.816,39,0.25,40,0.928,42,1.28,43,1.774,45,1.195,46,1.28,47,0.855,48,1.13,49,0.633,50,0.526,61,0.065,62,0.483,68,0.637,76,0.729,77,1.087,78,1.087,79,0.655,80,1.443,81,0.729,82,0.729,83,0.691,84,1.031,85,1.087,86,0.691,87,0.571,88,1.725,89,0.691,90,0.729,91,0.691,92,0.672,93,0.729,94,0.691,95,0.655,96,0.691,97,0.729,98,0.691,99,0.691,100,0.672,101,0.691,102,0.729,103,0.691,104,0.729,105,0.691,106,0.62,107,0.691,108,0.729,109,0.691,110,0.729,111,0.691,112,0.729,113,0.691,114,0.729,115,0.691,116,0.709,117,1.301,118,0.691,119,0.709,120,0.729,121,0.691,122,0.729,123,0.691,124,0.729,125,0.691,126,0.729,127,0.691,128,0.729,129,0.691,130,0.729,131,0.691,132,0.729,133,1.535,134,0.691,135,0.729,136,0.691,137,0.541,138,0.691,139,0.729,140,0.691,141,0.729,142,0.691,143,0.729,144,0.691,145,0.729,146,0.691,147,0.729,148,0.691,149,0.655,150,0.691,151,0.729,152,0.691,153,0.729,154,0.691,155,0.729,156,0.691,157,0.691,158,0.691,159,0.709,160,1.764,161,0.709,162,0.729,163,0.005,164,0.005,209,3.53,234,1.347,254,1.279,317,2.354,340,1.2,492,1.098,497,2.257,513,3.515,519,4.088,631,2.649,637,2.649,715,3.865,716,3.677,717,3.073,718,3.073,719,3.073,720,3.073,721,3.677,722,3.073,728,2.059,729,3.677,731,3.073,732,3.486,733,2.059,735,2.059,736,1.547,739,2.059,741,2.059,742,1.318,745,2.436,869,3.259,870,3.259,872,3.259,873,3.9,874,3.259,875,3.259,882,4.627,887,5.53,888,2.184,889,2.184,890,2.184,891,2.184,892,2.184,893,2.184,894,2.184,896,2.184,897,2.184,898,2.184,899,2.184,900,2.184,903,2.184,904,2.184,922,3.764,923,3.764,1294,2.522,1295,6.249,1296,4.709,1297,4.709,1298,4.709,1299,3.155,1300,4.953,1301,3.155,1302,3.764,1303,4.709,1304,4.709,1305,4.709]],["title/components/ProductComponent.html",[0,0.277,134,0.933]],["body/components/ProductComponent.html",[0,0.339,1,0.607,2,0.961,3,0.057,4,0.057,5,0.641,6,0.641,7,0.641,8,0.05,10,1.404,11,1.664,12,2.176,13,0.607,14,1.974,15,2.025,17,0.935,18,0.84,19,0.987,21,1.069,23,1.069,25,0.126,26,0.099,27,1.866,28,0.753,29,2.096,30,1.586,31,1.098,33,2.16,34,1.265,36,1.052,37,0.011,38,0.75,39,0.181,40,0.774,42,1.083,43,1.421,45,0.531,46,0.489,47,1.158,48,1.866,49,0.893,50,0.462,51,1.088,52,0.838,53,1.283,55,1.159,56,0.773,61,0.057,62,0.424,68,0.56,74,1.198,75,1.159,76,0.641,77,0.987,78,0.987,79,0.576,80,1.351,81,0.641,82,0.641,83,0.607,84,0.935,85,0.987,86,0.607,87,0.944,88,1.658,89,0.607,90,0.641,91,0.607,92,0.591,93,0.641,94,0.607,95,1.081,96,0.607,97,0.641,98,0.607,99,0.607,100,0.591,101,1.281,102,0.641,103,0.607,104,0.641,105,0.607,106,1.024,107,0.607,108,0.641,109,0.607,110,0.641,111,0.607,112,0.641,113,0.607,114,0.641,115,0.607,116,0.624,117,1.203,118,0.607,119,0.624,120,0.641,121,0.607,122,0.641,123,0.607,124,0.641,125,0.607,126,0.641,127,0.607,128,0.641,129,0.607,130,0.641,131,0.607,132,0.641,133,0.607,134,1.281,135,0.641,136,1.281,137,1.331,138,0.607,139,0.641,140,1.281,141,0.641,142,0.607,143,0.641,144,0.607,145,0.641,146,0.607,147,0.641,148,0.607,149,1.081,150,0.607,151,0.641,152,0.607,153,0.641,154,0.607,155,0.641,156,0.607,157,0.607,158,0.607,159,0.624,160,0.591,161,0.624,162,0.641,163,0.005,164,0.005,201,0.658,205,0.912,223,2.108,224,1.813,234,1.491,236,2.126,238,2.126,239,2.911,262,0.912,272,1.024,273,1.123,274,0.965,280,1.495,281,0.912,289,2.126,291,2.21,292,2.21,293,2.21,294,2.295,295,1.576,297,2.21,298,1.922,318,2.695,343,1.239,351,1.283,452,1.92,453,2.218,538,1.38,627,4.355,775,1.634,776,2.052,839,2.218,988,3.853,1041,3.16,1062,1.159,1116,2.403,1118,4.328,1120,3.968,1121,3.16,1123,2.788,1306,2.439,1307,5.21,1308,4.579,1309,3.853,1310,4.272,1311,4.272,1312,5.852,1313,4.272,1314,2.439,1315,5.557,1316,2.775,1317,2.775,1318,2.775,1319,2.775,1320,3.755,1321,2.775,1322,4.272,1323,2.775,1324,2.775,1325,2.775,1326,2.775,1327,2.775,1328,2.775,1329,2.439,1330,2.775,1331,1.92,1332,2.439,1333,2.775,1334,2.218,1335,2.439,1336,2.775,1337,2.439,1338,2.775,1339,2.775,1340,3.755,1341,2.218,1342,2.052,1343,4.272,1344,4.272,1345,4.272,1346,4.272,1347,4.272,1348,4.272,1349,4.272,1350,4.272,1351,4.272,1352,4.272,1353,4.272,1354,4.272,1355,3.755,1356,4.272,1357,4.272,1358,4.272,1359,4.272,1360,4.272,1361,3.755,1362,4.272,1363,4.272,1364,2.775,1365,4.272]],["title/components/ProductFormsComponent.html",[0,0.277,136,0.933]],["body/components/ProductFormsComponent.html",[0,0.292,1,0.482,2,0.8,3,0.045,4,0.045,5,0.508,6,0.508,7,0.508,8,0.04,10,1.169,11,1.431,13,0.482,14,1.935,15,1.984,17,0.779,18,0.7,19,0.822,21,0.89,23,0.89,25,0.04,26,0.082,28,0.627,30,1.395,31,0.914,33,1.976,34,1.375,36,1.039,37,0.011,38,0.807,39,0.212,40,0.764,42,1.134,43,1.43,45,1.081,46,1.065,47,0.597,49,0.789,50,0.367,52,0.665,53,1.018,56,0.613,61,0.045,62,0.337,64,3.061,68,0.719,76,0.508,77,0.822,78,0.822,79,0.457,80,1.188,81,0.508,82,0.508,83,0.482,84,0.779,85,0.822,86,0.482,87,0.399,88,1.529,89,0.482,90,0.508,91,0.482,92,0.469,93,0.508,94,0.482,95,0.457,96,0.482,97,0.508,98,0.482,99,0.482,100,0.955,101,0.482,102,0.508,103,0.482,104,0.508,105,0.482,106,1.344,107,0.482,108,0.508,109,0.482,110,0.508,111,0.482,112,0.508,113,0.482,114,0.508,115,0.482,116,0.495,117,1.034,118,1.126,119,0.495,120,0.508,121,0.482,122,0.508,123,1.126,124,0.508,125,0.482,126,0.508,127,0.482,128,0.508,129,0.482,130,0.508,131,0.482,132,0.508,133,0.482,134,0.482,135,0.508,136,1.126,137,1.09,138,0.482,139,0.508,140,0.482,141,0.508,142,0.482,143,0.508,144,1.126,145,0.508,146,0.482,147,0.508,148,0.482,149,0.457,150,0.482,151,0.508,152,1.126,153,0.508,154,0.482,155,0.508,156,0.482,157,0.482,158,0.482,159,0.495,160,0.469,161,0.495,162,0.508,163,0.004,164,0.004,189,0.469,198,1.055,200,0.983,201,0.522,205,1.69,224,1.559,234,2.129,243,1.055,262,0.723,272,0.812,274,0.766,281,0.723,294,2.596,295,2.592,296,2.657,298,1.653,302,1.918,311,2.794,315,1.186,316,2.096,317,1.871,318,2.317,319,2.096,320,2.096,321,2.638,324,1.296,325,2.662,326,2.52,327,2.52,328,2.894,330,1.841,334,3.03,335,3.998,339,1.095,340,0.837,341,1.238,342,1.095,343,2,344,1.238,345,1.238,346,1.238,349,1.296,350,1.296,351,1.018,353,1.139,355,2.002,357,2.922,359,2.002,360,2.002,362,1.645,363,2.002,398,3.425,413,2.923,434,2.084,435,3.044,466,2.771,473,3.128,479,3.58,481,3.128,483,2.923,485,3.1,486,5.819,487,5.819,488,5.819,494,1.935,497,1.055,498,1.935,499,1.935,503,1.759,504,3.128,512,1.841,518,4.522,519,1.238,520,1.935,521,1.935,522,3.128,531,1.628,532,1.524,538,1.095,543,3.909,547,2.322,566,1.935,570,3.128,589,1.935,594,3.128,662,1.935,668,3.128,785,3.943,790,1.935,794,5.819,801,1.436,1062,0.92,1063,2.36,1094,2.81,1114,1.362,1116,3.847,1120,3.044,1331,5.45,1341,3.58,1342,3.313,1355,3.128,1366,6.294,1367,4.48,1368,4.48,1369,5.145,1370,5.145,1371,5.145,1372,4.48,1373,3.559,1374,3.559,1375,2.202,1376,2.202,1377,2.202,1378,2.202,1379,2.202,1380,3.559,1381,2.202,1382,3.559,1383,2.202,1384,2.202,1385,2.202,1386,3.128,1387,1.935,1388,2.202,1389,2.202,1390,2.202,1391,2.202,1392,3.559,1393,1.935,1394,3.559,1395,4.48,1396,3.559,1397,2.202,1398,2.202,1399,2.202,1400,2.202,1401,2.202,1402,2.202,1403,2.202,1404,2.202,1405,2.202,1406,2.202,1407,2.202,1408,2.202,1409,2.202,1410,5.145,1411,2.202,1412,2.202,1413,2.202,1414,2.202,1415,2.202,1416,2.202,1417,2.202,1418,2.202,1419,2.202,1420,2.202,1421,2.202,1422,2.202,1423,2.202,1424,2.202,1425,3.559,1426,2.202,1427,2.202,1428,2.202,1429,3.559]],["title/injectables/ProductService.html",[165,1.671,1430,3.406]],["body/injectables/ProductService.html",[3,0.062,4,0.062,8,0.054,16,1.614,25,0.054,26,0.105,28,0.798,31,0.77,34,1.504,36,1.645,37,0.011,38,0.915,39,0.252,40,1.21,42,1.425,45,1.251,46,1.152,47,0.812,49,0.734,50,0.499,56,0.834,61,0.062,62,0.458,63,1.139,95,0.622,100,1.164,106,1.074,137,0.513,149,0.622,163,0.005,164,0.005,165,1.776,167,1.614,169,2.802,170,3.564,179,5.268,180,4.942,189,1.125,193,4.746,196,3.766,197,1.853,201,0.711,202,1.764,204,1.686,205,2.731,362,1.385,366,4.801,373,1.955,379,4.496,386,3.982,391,2.668,395,3.351,397,2.074,398,1.55,399,3.351,400,1.686,401,2.633,403,3.351,404,2.216,405,2.395,408,2.395,409,2.633,410,2.633,411,2.633,512,3.15,527,3.621,535,1.55,547,3.564,579,1.55,593,3.621,606,1.293,640,1.491,646,5.352,667,3.621,678,2.633,857,1.764,858,1.764,863,2.633,864,2.633,865,2.633,866,2.633,992,3.135,1062,2.873,1104,1.55,1114,3.766,1116,3.073,1120,1.614,1123,1.955,1125,4.214,1342,3.351,1430,3.621,1431,2.633,1432,5.462,1433,5.462,1434,5.462,1435,4.53,1436,4.53,1437,4.53,1438,5.462,1439,4.53,1440,3.621,1441,6.089,1442,6.089,1443,4.53,1444,6.089,1445,4.53,1446,5.462,1447,4.53,1448,4.53,1449,4.53,1450,2.996,1451,4.53,1452,2.996,1453,4.53,1454,2.996,1455,2.996,1456,2.996,1457,4.53,1458,2.996,1459,4.53,1460,2.996,1461,4.53,1462,2.996,1463,4.53,1464,2.996,1465,4.53,1466,2.996,1467,4.53,1468,2.996,1469,2.633,1470,2.996,1471,2.996,1472,4.53,1473,2.996,1474,2.996,1475,2.996,1476,4.53,1477,2.996,1478,2.996,1479,5.462,1480,2.996,1481,4.53,1482,2.996,1483,2.996,1484,2.996,1485,2.996,1486,2.996,1487,2.996,1488,2.996,1489,2.996,1490,2.996,1491,2.996,1492,2.996,1493,2.996,1494,2.996,1495,2.996,1496,2.996,1497,2.996,1498,2.996,1499,2.996,1500,2.996,1501,2.996,1502,2.996,1503,2.996,1504,2.996,1505,2.996,1506,2.996,1507,2.996,1508,2.996]],["title/components/ProductsComponent.html",[0,0.277,138,0.933]],["body/components/ProductsComponent.html",[0,0.327,1,0.572,2,0.917,3,0.054,4,0.054,5,0.604,6,0.604,7,0.604,8,0.047,10,1.34,11,1.602,12,2.096,13,0.572,14,1.965,15,2.015,17,0.893,18,0.802,19,0.942,21,1.02,23,1.02,25,0.047,26,0.095,27,1.797,28,0.719,29,2.03,30,1.536,31,0.672,32,1.167,33,2.023,34,1.398,36,1.145,37,0.011,38,0.764,39,0.211,40,0.842,42,1.166,43,1.626,45,1.246,46,1.148,47,1.36,48,1.797,49,0.907,50,0.435,51,1.025,52,0.79,53,1.208,55,1.092,56,0.728,61,0.054,62,0.4,63,0.994,64,1.208,66,1.253,68,0.528,74,1.128,75,1.092,76,0.604,77,0.942,78,0.942,79,0.542,80,1.309,81,0.604,82,0.604,83,0.572,84,0.893,85,0.942,86,0.572,87,0.473,88,1.625,89,0.572,90,0.604,91,0.572,92,0.557,93,0.604,94,0.572,95,1.275,96,0.572,97,0.604,98,0.572,99,0.572,100,0.557,101,1.241,102,0.604,103,0.572,104,0.604,105,0.572,106,0.514,107,0.572,108,0.604,109,0.572,110,0.604,111,0.572,112,0.604,113,0.572,114,0.604,115,0.572,116,0.588,117,1.158,118,0.572,119,0.588,120,0.604,121,0.572,122,0.604,123,0.572,124,0.604,125,0.572,126,0.604,127,0.572,128,0.604,129,0.572,130,0.604,131,0.572,132,0.604,133,0.572,134,0.572,135,0.604,136,0.893,137,1.166,138,1.241,139,0.604,140,0.572,141,0.604,142,0.572,143,0.604,144,0.572,145,0.604,146,0.572,147,0.604,148,0.572,149,0.542,150,0.572,151,0.604,152,0.572,153,0.604,154,0.572,155,0.604,156,0.572,157,0.572,158,0.572,159,0.588,160,0.557,161,0.588,162,0.604,163,0.005,164,0.005,189,0.537,201,0.62,217,2.745,218,2.703,219,2.496,220,2.703,221,2.703,222,2.703,223,2.03,224,1.745,225,2.954,228,2.703,229,2.703,230,2.908,231,2.703,232,2.703,233,2.198,234,1.622,236,2.029,237,3.338,238,2.496,239,2.82,241,2.198,243,1.253,254,1.084,255,3.188,258,2.198,260,2.198,262,0.859,263,1.408,264,1.253,265,1.253,266,1.408,267,1.408,268,1.408,269,1.408,270,1.408,271,1.408,272,0.964,273,1.058,274,0.909,275,1.47,280,1.408,281,0.859,282,2.198,283,2.11,284,2.198,286,1.408,287,1.408,289,2.496,291,2.595,292,2.595,293,2.595,294,1.967,295,1.851,296,2.096,297,2.11,298,0.964,301,1.408,302,2.198,304,1.408,305,1.408,306,1.408,307,1.408,308,1.408,309,2.198,310,3.054,311,2.62,343,1.167,413,3.273,419,2.823,433,2.531,434,2.091,452,2.823,453,3.26,455,3.017,456,3.585,457,3.26,538,1.3,606,2.447,992,4.254,1009,2.297,1022,2.297,1023,2.297,1024,2.297,1120,3.897,1123,3.698,1289,2.297,1320,3.585,1331,1.809,1340,4.409,1341,2.089,1342,1.933,1509,2.297,1510,4.079,1511,4.079,1512,5.668,1513,2.614,1514,2.614,1515,2.614,1516,2.614,1517,2.614,1518,2.614,1519,2.614,1520,4.079,1521,2.614,1522,2.614,1523,2.614,1524,2.614,1525,2.614,1526,2.614,1527,2.614,1528,2.614,1529,2.614,1530,2.614,1531,2.614,1532,4.079,1533,5.668,1534,5.668,1535,4.079]],["title/components/RatingComponent.html",[0,0.277,140,0.933]],["body/components/RatingComponent.html",[0,0.416,1,0.863,2,1.245,3,0.081,4,0.081,5,0.911,6,0.911,7,0.911,8,0.071,13,0.863,14,2.02,15,2.073,17,1.212,18,1.257,19,1.278,21,1.385,23,1.385,25,0.116,26,0.128,28,0.975,34,1.37,36,0.797,37,0.01,38,0.779,39,0.122,40,0.586,42,0.949,43,0.887,45,0.755,46,0.695,49,0.821,50,0.657,61,0.081,62,0.603,68,0.797,76,0.911,77,1.278,78,1.278,79,0.818,80,1.602,81,0.911,82,0.911,83,0.863,84,1.212,85,1.278,86,0.863,87,0.714,88,1.833,89,0.863,90,0.911,91,0.863,92,0.841,93,0.911,94,0.863,95,0.818,96,0.863,97,0.911,98,0.863,99,0.863,100,0.841,101,0.863,102,0.911,103,0.863,104,0.911,105,0.863,106,0.775,107,0.863,108,0.911,109,0.863,110,0.911,111,0.863,112,0.911,113,0.863,114,0.911,115,0.863,116,0.887,117,1.477,118,0.863,119,0.887,120,0.911,121,0.863,122,0.911,123,0.863,124,0.911,125,0.863,126,0.911,127,0.863,128,0.911,129,0.863,130,0.911,131,0.863,132,0.911,133,0.863,134,0.863,135,0.911,136,0.863,137,0.676,138,0.863,139,0.911,140,1.518,141,0.911,142,0.863,143,0.911,144,0.863,145,0.911,146,0.863,147,0.911,148,0.863,149,0.818,150,0.863,151,0.911,152,0.863,153,0.911,154,0.863,155,0.911,156,0.863,157,0.863,158,0.863,159,0.887,160,0.841,161,0.887,162,0.911,163,0.006,164,0.006,205,1.296,219,3.182,230,3.473,264,1.89,265,1.89,497,2.653,513,2.219,627,3.612,629,6.421,631,3.114,637,2.219,1053,1.83,1135,3.152,1136,4.424,1137,3.152,1147,3.152,1148,3.152,1536,3.467,1537,5.536,1538,5.536,1539,5.536,1540,7.305,1541,5.536,1542,7.574,1543,5.536,1544,5.536,1545,5.536,1546,3.944,1547,3.944,1548,3.944,1549,3.944,1550,3.944,1551,3.944,1552,3.944,1553,3.944,1554,3.944,1555,4.095]],["title/components/ResetPasswordComponent.html",[0,0.277,142,0.933]],["body/components/ResetPasswordComponent.html",[0,0.36,1,0.671,2,1.036,3,0.063,4,0.063,5,0.707,6,0.707,7,0.707,8,0.055,10,1.513,11,1.768,12,2.313,13,0.671,14,1.989,15,2.04,17,1.008,18,0.906,19,1.064,21,1.152,23,1.152,25,0.055,26,0.107,27,1.983,28,0.812,29,2.206,30,1.669,31,1.183,33,2.235,34,1.334,36,0.619,37,0.011,38,0.692,39,0.143,40,0.455,42,0.949,43,1.245,45,1.263,46,1.163,47,1.249,48,1.983,49,0.892,50,0.51,51,1.201,52,0.926,55,1.28,56,0.853,61,0.063,62,0.468,66,1.468,68,0.619,74,1.322,75,1.28,76,0.707,77,1.064,78,1.064,79,0.636,80,1.422,81,0.707,82,0.707,83,0.671,84,1.008,85,1.064,86,0.671,87,0.555,88,1.71,89,0.671,90,0.707,91,0.671,92,0.653,93,0.707,94,0.671,95,0.636,96,0.671,97,0.707,98,0.671,99,0.671,100,0.653,101,0.671,102,0.707,103,0.671,104,0.707,105,0.671,106,0.602,107,0.671,108,0.707,109,0.671,110,0.707,111,0.671,112,0.707,113,0.671,114,0.707,115,0.671,116,0.689,117,1.278,118,1.348,119,1.384,120,0.707,121,0.671,122,0.707,123,0.671,124,0.707,125,0.671,126,0.707,127,0.671,128,0.707,129,0.671,130,0.707,131,0.671,132,0.707,133,1.348,134,0.671,135,0.707,136,0.671,137,0.525,138,0.671,139,0.707,140,0.671,141,0.707,142,1.348,143,1.809,144,0.671,145,0.707,146,0.671,147,0.707,148,0.671,149,0.636,150,0.671,151,0.707,152,0.671,153,0.707,154,0.671,155,0.707,156,0.671,157,0.671,158,0.671,159,0.689,160,0.653,161,0.689,162,0.707,163,0.005,164,0.005,179,1.999,188,2.849,189,0.404,205,1.006,209,3.327,217,2.472,223,2.24,224,1.926,234,1.584,262,1.006,273,1.239,274,1.066,281,1.006,294,2.822,301,1.651,317,2.313,324,1.804,325,3.185,330,2.383,335,3.185,339,2.754,340,1.165,342,1.524,351,1.416,353,1.584,466,3.424,485,3.831,785,4.525,801,1.999,905,4.049,921,2.448,922,3.681,923,3.681,924,4.921,926,2.591,927,3.681,931,3.681,934,2.692,938,2.448,939,2.12,940,2.448,941,2.266,942,2.448,943,2.448,946,3.407,947,4.049,974,2.692,982,4.049,1083,2.12,1263,5.412,1315,5.751,1334,2.448,1556,6.782,1557,6.782,1558,5.536,1559,3.063,1560,3.063,1561,3.063,1562,3.063,1563,3.063,1564,4.606,1565,4.424,1566,3.063,1567,3.063,1568,3.063,1569,3.063,1570,4.606,1571,3.063,1572,3.063,1573,3.063,1574,4.606,1575,4.606,1576,4.606]],["title/components/SelectComponent.html",[0,0.277,144,0.933]],["body/components/SelectComponent.html",[0,0.358,1,0.663,2,1.027,3,0.062,4,0.062,5,0.7,6,0.7,7,0.7,8,0.055,13,0.663,14,1.987,15,2.038,17,1,18,1.358,19,1.055,21,1.143,23,1.143,25,0.119,26,0.106,27,1.637,28,0.805,29,1.97,30,1.491,34,1.489,36,1.237,37,0.011,38,0.805,39,0.214,40,0.91,42,1.229,43,1.698,45,1.322,46,1.331,47,0.822,48,1.086,49,0.738,50,0.505,61,0.062,62,0.463,68,0.612,76,0.7,77,1.055,78,1.055,79,0.629,80,1.414,81,0.7,82,0.7,83,0.663,84,1,85,1.055,86,0.663,87,0.549,88,1.704,89,0.663,90,0.7,91,0.663,92,0.646,93,0.7,94,0.663,95,0.629,96,0.663,97,0.7,98,0.663,99,0.663,100,0.646,101,0.663,102,0.7,103,0.663,104,0.7,105,0.663,106,0.596,107,0.663,108,0.7,109,0.663,110,0.7,111,0.663,112,0.7,113,0.663,114,0.7,115,0.663,116,0.681,117,1.27,118,0.663,119,0.681,120,0.7,121,0.663,122,0.7,123,0.663,124,0.7,125,0.663,126,0.7,127,0.663,128,0.7,129,0.663,130,0.7,131,0.663,132,0.7,133,0.663,134,0.663,135,0.7,136,0.663,137,0.519,138,0.663,139,0.7,140,0.663,141,0.7,142,0.663,143,0.7,144,1.512,145,0.7,146,0.663,147,0.7,148,0.663,149,0.629,150,0.663,151,0.7,152,0.663,153,0.7,154,0.663,155,0.7,156,0.663,157,0.663,158,0.663,159,0.681,160,1.752,161,0.681,162,0.7,163,0.005,164,0.005,201,0.719,234,1.307,254,1.257,317,2.298,340,1.153,483,1.978,492,1.054,497,2.19,513,3.445,519,4.248,523,4.016,610,6.638,627,3.996,631,2.571,637,3.445,715,3.788,716,3.589,717,2.982,718,2.982,719,2.982,720,2.982,721,3.589,722,2.982,728,1.978,729,3.589,731,2.982,732,3.402,733,1.978,735,1.978,736,1.501,739,1.978,741,1.978,742,1.266,745,3.168,869,3.163,870,3.163,872,3.163,873,3.807,874,3.163,875,3.163,882,4.548,887,5.482,888,2.098,889,2.098,890,2.098,891,2.098,892,2.098,893,2.098,894,2.098,896,2.098,897,2.098,898,2.098,899,2.098,900,2.098,903,2.098,904,2.098,1555,4.53,1577,2.664,1578,5.501,1579,4.57,1580,4.57,1581,7.17,1582,4.57,1583,4.57,1584,4.57,1585,4.57,1586,3.031,1587,3.031,1588,3.031,1589,6.124]],["title/injectables/StorageService.html",[165,1.671,1590,3.406]],["body/injectables/StorageService.html",[3,0.114,4,0.114,8,0.1,16,2.973,25,0.1,28,1.219,34,1.332,36,1.527,37,0.011,38,0.849,39,0.234,40,1.123,42,0.945,43,1.556,49,0.62,50,0.919,61,0.114,62,0.844,163,0.008,164,0.008,165,2.714,167,2.973,189,1.137,204,3.104,205,2.605,294,2.965,398,2.854,492,2.631,515,6.647,761,6.647,770,6.647,771,3.912,1555,5.119,1590,5.531,1591,4.849,1592,6.921,1593,6.921,1594,6.921,1595,5.517,1596,7.562,1597,6.921,1598,5.517,1599,6.921,1600,5.517,1601,5.517,1602,5.517,1603,7.562,1604,5.517,1605,5.517,1606,5.517]],["title/components/SubnavComponent.html",[0,0.277,146,0.933]],["body/components/SubnavComponent.html",[0,0.411,1,0.842,2,1.223,3,0.079,4,0.079,5,1.256,6,0.888,7,0.888,8,0.07,10,1.787,11,2.016,13,0.842,14,2.018,15,2.07,17,1.191,18,1.07,19,1.256,25,0.07,26,0.126,28,0.959,30,1.86,31,1.621,34,1.112,37,0.01,38,0.709,42,0.659,43,1.223,45,0.736,46,0.678,49,0.611,50,0.641,51,1.509,61,0.079,62,0.588,68,0.777,76,0.888,77,1.256,78,1.256,79,0.798,80,1.933,81,0.888,82,0.888,83,0.842,84,1.191,85,1.256,86,0.842,87,0.697,88,1.822,89,0.842,90,0.888,91,0.842,92,0.82,93,0.888,94,0.842,95,0.798,96,0.842,97,0.888,98,0.842,99,0.842,100,0.82,101,0.842,102,0.888,103,0.842,104,0.888,105,0.842,106,0.756,107,0.842,108,0.888,109,0.842,110,0.888,111,0.842,112,0.888,113,0.842,114,0.888,115,0.842,116,0.865,117,1.457,118,0.842,119,0.865,120,0.888,121,0.842,122,0.888,123,0.842,124,0.888,125,0.842,126,0.888,127,0.842,128,0.888,129,0.842,130,0.888,131,0.842,132,0.888,133,0.842,134,0.842,135,0.888,136,0.842,137,0.659,138,0.842,139,0.888,140,0.842,141,0.888,142,0.842,143,0.888,144,0.842,145,0.888,146,1.502,147,0.888,148,0.842,149,0.798,150,0.842,151,0.888,152,0.842,153,0.888,154,0.842,155,0.888,156,0.842,157,0.842,158,0.842,159,0.865,160,0.82,161,0.865,162,0.888,163,0.006,164,0.006,217,2.818,497,1.844,604,5.547,606,3.244,607,5.547,608,5.547,609,5.547,611,5.547,615,5.547,620,5.547,637,3.061,1302,5.044,1607,3.382,1608,5.441,1609,7.514,1610,6.311,1611,6.311,1612,6.311,1613,6.311,1614,6.311,1615,7.514,1616,6.311,1617,6.311,1618,6.311,1619,6.311,1620,6.311,1621,6.311,1622,3.848,1623,3.848,1624,3.848]],["title/components/TagFormsComponent.html",[0,0.277,148,0.933]],["body/components/TagFormsComponent.html",[0,0.377,1,0.722,2,1.095,3,0.068,4,0.068,5,0.762,6,0.762,7,0.762,8,0.06,10,1.6,11,1.848,13,0.722,14,1.999,15,2.051,17,1.066,18,0.957,19,1.124,21,1.218,23,1.218,25,0.06,26,0.113,28,0.858,30,1.732,31,1.251,33,2.291,34,1.299,36,0.667,37,0.011,38,0.828,39,0.198,40,0.49,42,0.991,43,1.436,45,0.932,46,0.858,49,0.85,50,0.55,52,0.997,53,1.526,61,0.068,62,0.505,68,0.667,76,0.762,77,1.124,78,1.124,79,0.685,80,1.475,81,0.762,82,0.762,83,0.722,84,1.066,85,1.124,86,0.722,87,0.598,88,1.748,89,0.722,90,0.762,91,0.722,92,0.703,93,0.762,94,0.722,95,0.685,96,0.722,97,0.762,98,0.722,99,0.722,100,0.703,101,0.722,102,0.762,103,0.722,104,0.762,105,0.722,106,0.649,107,0.722,108,0.762,109,0.722,110,0.762,111,0.722,112,0.762,113,0.722,114,0.762,115,0.722,116,0.742,117,1.336,118,1.398,119,0.742,120,0.762,121,0.722,122,0.762,123,1.398,124,0.762,125,0.722,126,0.762,127,0.722,128,0.762,129,0.722,130,0.762,131,0.722,132,0.762,133,0.722,134,0.722,135,0.762,136,0.722,137,0.565,138,0.722,139,0.762,140,0.722,141,0.762,142,0.722,143,0.762,144,0.722,145,0.762,146,0.722,147,0.762,148,1.398,149,1.53,150,0.722,151,0.762,152,0.722,153,0.762,154,0.722,155,0.762,156,0.722,157,0.722,158,0.722,159,0.742,160,0.703,161,0.742,162,0.762,163,0.006,164,0.006,198,1.582,201,0.783,205,1.084,224,2.013,234,1.828,272,1.218,274,1.148,281,1.084,295,2.792,296,3.08,298,2.135,315,1.778,316,2.868,317,2.417,318,2.993,319,2.868,320,2.868,321,3.408,324,1.944,325,3.304,326,3.255,327,3.255,328,3.594,330,2.519,334,2.868,335,2.519,339,1.642,340,1.255,341,1.857,342,1.642,343,1.474,344,1.857,345,1.857,346,1.857,349,1.944,350,1.944,351,2.251,353,2.519,354,2.284,355,2.739,359,2.739,360,2.739,362,2.251,363,2.739,530,2.638,531,2.441,532,2.284,533,2.638,534,2.638,536,2.638,537,2.638,538,1.642,1104,2.993,1440,4.625,1469,2.901,1625,6.048,1626,5.598,1627,6.388,1628,6.388,1629,4.869,1630,3.3,1631,3.3,1632,3.3,1633,3.3,1634,4.869]],["title/components/TagsComponent.html",[0,0.277,150,0.933]],["body/components/TagsComponent.html",[0,0.345,1,0.626,2,0.983,3,0.059,4,0.059,5,0.66,6,0.66,7,0.66,8,0.052,10,1.436,11,1.695,12,2.217,13,0.626,14,1.979,15,2.029,17,0.957,18,0.859,19,1.009,21,1.093,23,1.093,25,0.052,26,0.101,27,1.901,28,0.77,29,2.129,30,1.611,31,0.734,32,1.276,33,2.098,34,1.409,36,1.072,37,0.011,38,0.851,39,0.209,40,0.788,42,1.157,43,1.629,45,1.292,46,1.19,47,1.438,48,1.901,49,0.921,50,0.476,51,1.121,52,0.864,53,1.321,55,1.194,56,0.796,61,0.059,62,0.437,63,1.087,64,1.321,66,1.37,68,0.577,71,2.114,74,1.234,75,1.194,76,0.66,77,1.009,78,1.009,79,0.593,80,1.372,81,0.66,82,0.66,83,0.626,84,0.957,85,1.009,86,0.626,87,0.518,88,1.673,89,0.626,90,0.66,91,0.626,92,0.609,93,0.66,94,0.626,95,0.593,96,0.626,97,0.66,98,0.626,99,0.626,100,0.609,101,0.626,102,0.66,103,0.626,104,0.66,105,0.626,106,0.562,107,0.626,108,0.66,109,0.626,110,0.66,111,0.626,112,0.66,113,0.626,114,0.66,115,0.626,116,0.643,117,1.225,118,0.626,119,0.643,120,0.66,121,0.626,122,0.66,123,0.626,124,0.66,125,0.626,126,0.66,127,0.626,128,0.66,129,0.626,130,0.66,131,0.626,132,0.66,133,0.626,134,0.626,135,0.66,136,0.626,137,0.49,138,0.626,139,0.66,140,0.626,141,0.66,142,0.626,143,0.66,144,0.626,145,0.66,146,0.626,147,0.66,148,0.957,149,1.329,150,1.301,151,0.66,152,0.626,153,0.66,154,0.626,155,0.66,156,0.626,157,0.626,158,0.626,159,0.643,160,0.609,161,0.643,162,0.66,163,0.005,164,0.005,189,0.576,201,0.678,217,2.859,218,2.859,219,2.64,220,2.859,221,2.859,222,2.859,223,2.147,224,1.846,225,3.125,228,2.859,229,2.859,230,3.015,231,2.859,232,2.859,233,2.355,234,1.7,236,2.174,237,3.5,238,2.64,239,2.957,241,2.355,243,1.37,254,1.137,255,3.343,258,2.355,260,2.355,262,0.939,263,1.54,264,1.37,265,1.37,266,1.54,267,1.54,268,1.54,269,1.54,270,1.54,271,1.54,272,1.054,273,1.156,274,0.994,275,1.608,280,1.54,281,0.939,282,1.54,283,1.478,284,1.54,286,1.54,287,1.54,289,2.174,290,2.851,291,2.261,292,2.261,293,2.261,294,1.714,295,1.613,296,2.217,297,2.261,298,1.054,301,1.54,302,2.355,304,1.54,305,1.54,306,1.54,307,1.54,308,1.54,309,2.355,310,2.355,311,2.02,312,2.703,313,3.024,538,1.422,1104,3.493,1116,3.602,1386,2.512,1393,2.512,1440,2.284,1626,2.114,1635,2.512,1636,4.37,1637,4.37,1638,5.943,1639,2.858,1640,2.858,1641,2.858,1642,2.858,1643,2.858,1644,4.37,1645,2.858,1646,2.858,1647,2.858,1648,2.858,1649,2.858,1650,2.858,1651,2.858,1652,2.858,1653,2.858,1654,2.858,1655,2.858,1656,4.37,1657,2.858,1658,2.858]],["title/components/TextAreaComponent.html",[0,0.277,152,0.933]],["body/components/TextAreaComponent.html",[0,0.376,1,0.721,2,1.093,3,0.068,4,0.068,5,0.76,6,0.76,7,0.76,8,0.06,13,0.721,14,1.998,15,2.05,17,1.064,18,1.4,19,1.123,21,1.216,23,1.216,25,0.06,26,0.113,27,1.742,28,0.857,29,2.07,30,1.567,34,1.499,36,1.289,37,0.01,38,0.828,39,0.221,40,0.948,42,1.263,43,1.736,45,1.106,46,1.255,47,0.893,48,1.18,49,0.717,50,0.549,61,0.068,62,0.504,68,0.665,76,0.76,77,1.123,78,1.123,79,0.683,80,1.474,81,0.76,82,0.76,83,0.721,84,1.064,85,1.123,86,0.721,87,0.597,88,1.746,89,0.721,90,0.76,91,0.721,92,0.702,93,0.76,94,0.721,95,0.683,96,0.721,97,0.76,98,0.721,99,0.721,100,0.702,101,0.721,102,0.76,103,0.721,104,0.76,105,0.721,106,0.647,107,0.721,108,0.76,109,0.721,110,0.76,111,0.721,112,0.76,113,0.721,114,0.76,115,0.721,116,0.74,117,1.335,118,0.721,119,0.74,120,0.76,121,0.721,122,0.76,123,0.721,124,0.76,125,0.721,126,0.76,127,0.721,128,0.76,129,0.721,130,0.76,131,0.721,132,0.76,133,0.721,134,0.721,135,0.76,136,0.721,137,0.564,138,0.721,139,0.76,140,0.721,141,0.76,142,0.721,143,0.76,144,0.721,145,0.76,146,0.721,147,0.76,148,0.721,149,0.683,150,0.721,151,0.76,152,1.559,153,0.76,154,0.721,155,0.76,156,0.721,157,0.721,158,0.721,159,0.74,160,1.776,161,0.74,162,0.76,163,0.006,164,0.006,234,1.391,254,1.302,262,1.082,317,2.414,340,1.252,492,1.146,497,2.77,513,3.59,519,4.145,631,2.735,637,2.735,715,3.947,716,3.771,717,3.172,718,3.172,719,3.172,720,3.172,721,3.771,722,3.172,728,2.149,729,3.771,731,3.172,732,3.575,733,2.149,735,2.149,736,1.597,739,2.149,741,2.149,742,1.376,745,2.515,869,3.365,870,3.365,872,3.365,873,4,874,3.365,875,3.365,877,4.275,880,5.44,882,4.711,887,5.579,888,2.279,889,2.279,890,2.279,891,2.279,892,2.279,893,2.279,894,2.279,896,2.279,897,2.279,898,2.279,899,2.279,900,2.279,903,2.279,904,2.279,1659,2.895,1660,4.862,1661,4.862,1662,4.862,1663,4.862,1664,4.862,1665,4.862,1666,4.862]],["title/pipes/TimesincePipe.html",[775,2.51,1309,3.152]],["body/pipes/TimesincePipe.html",[3,0.113,4,0.113,8,0.099,10,1.794,13,1.195,17,1.505,18,1.352,28,0.962,34,0.962,36,1.103,37,0.011,38,0.845,39,0.169,40,0.811,42,0.936,46,1.326,47,1.48,49,0.613,50,0.91,61,0.113,62,0.835,163,0.008,164,0.008,205,2.473,311,2.524,362,2.524,398,3.557,452,3.779,463,2.824,775,4.049,1034,4.799,1309,5.085,1361,6.043,1667,5.46,1668,4.799,1669,5.46,1670,6.876,1671,7.526,1672,5.46,1673,6.876,1674,6.876,1675,5.46,1676,5.46,1677,5.46,1678,5.46,1679,5.46,1680,5.46,1681,5.46,1682,5.46,1683,5.46,1684,6.876,1685,5.46,1686,5.46,1687,5.46,1688,5.46,1689,5.46,1690,6.015,1691,8.313,1692,5.46,1693,5.46,1694,5.46,1695,7.9,1696,5.46,1697,5.46,1698,4.799,1699,5.46]],["title/interfaces/User.html",[68,0.861,1042,0.132]],["body/interfaces/User.html",[3,0.124,4,0.124,8,0.109,25,0.109,26,0.169,37,0.01,39,0.253,61,0.15,68,1.65,163,0.008,164,0.008,189,1.187,254,1.602,433,3.649,437,2.511,1042,0.243,1044,1.15,1049,3.649,1050,3.649,1053,2.088,1062,3.048,1113,4.761,1117,3.54,1126,4.16,1127,4.446,1128,5.832]],["title/components/UserComponent.html",[0,0.277,154,0.933]],["body/components/UserComponent.html",[0,0.305,1,0.516,2,0.845,3,0.049,4,0.049,5,0.544,6,0.544,7,0.544,8,0.043,10,1.235,11,1.498,12,1.959,13,0.516,14,1.947,15,1.997,17,0.823,18,0.739,19,0.868,21,0.94,23,0.94,25,0.127,26,0.087,27,1.679,28,0.662,29,1.917,30,1.45,31,0.966,33,2.031,34,1.196,36,0.947,37,0.011,38,0.7,39,0.166,40,0.696,42,1.002,43,1.314,45,0.451,46,0.415,47,1.019,48,1.679,49,0.85,50,0.393,51,0.924,52,0.712,55,0.984,56,0.656,61,0.049,62,0.36,68,1.506,74,1.017,75,0.984,76,0.544,77,0.868,78,0.868,79,0.489,80,1.235,81,0.544,82,0.544,83,0.516,84,0.823,85,0.868,86,0.516,87,0.427,88,1.567,89,0.516,90,0.544,91,0.516,92,0.502,93,0.544,94,0.516,95,0.489,96,0.516,97,0.544,98,0.516,99,0.516,100,0.502,101,1.171,102,0.544,103,0.516,104,0.544,105,0.516,106,0.463,107,0.516,108,0.544,109,0.516,110,0.544,111,0.516,112,0.544,113,0.516,114,0.544,115,0.516,116,0.53,117,1.083,118,0.516,119,0.53,120,0.544,121,0.516,122,0.544,123,0.516,124,0.544,125,0.516,126,0.544,127,0.516,128,0.544,129,0.516,130,0.544,131,0.516,132,0.544,133,0.516,134,0.516,135,0.544,136,0.516,137,1.12,138,0.516,139,0.544,140,1.171,141,0.544,142,0.516,143,0.544,144,0.516,145,0.544,146,0.516,147,0.544,148,0.516,149,0.489,150,0.516,151,0.544,152,0.516,153,0.544,154,1.171,155,0.544,156,1.171,157,0.516,158,0.516,159,0.53,160,0.502,161,0.53,162,0.544,163,0.004,164,0.004,200,3.124,201,0.559,205,0.774,223,1.897,224,1.631,234,1.341,236,1.87,238,1.87,239,2.662,254,1.426,262,0.774,272,0.869,273,0.953,274,0.82,280,1.27,281,0.774,289,1.87,291,1.944,292,1.944,293,1.944,294,2.098,295,1.387,297,2.768,298,1.73,318,2.425,343,1.052,351,1.089,414,3.468,419,2.601,434,1.974,463,3.223,606,1.623,627,4.429,775,1.388,776,1.743,792,2.452,839,1.883,932,1.57,988,3.468,1001,3.004,1004,2.325,1011,1.631,1012,1.743,1041,5.021,1048,2.601,1051,2.601,1056,1.738,1057,3.703,1059,2.601,1063,2.836,1094,1.87,1095,1.219,1216,3.303,1217,3.303,1283,3.303,1308,4.121,1314,2.071,1315,5.225,1329,2.071,1332,2.071,1334,1.883,1335,2.071,1337,2.071,1555,5.021,1690,3.004,1698,3.303,1700,2.071,1701,3.758,1702,3.758,1703,5.35,1704,2.356,1705,2.356,1706,2.356,1707,2.356,1708,3.303,1709,2.356,1710,3.303,1711,2.356,1712,2.356,1713,2.356,1714,2.356,1715,2.356,1716,1.631,1717,2.356,1718,2.356,1719,2.356,1720,2.356,1721,2.356,1722,3.303,1723,1.883,1724,1.743,1725,3.758,1726,3.758,1727,3.758,1728,3.758,1729,5.35,1730,3.758,1731,3.758,1732,3.758,1733,3.758,1734,3.758,1735,3.758,1736,3.758,1737,3.758,1738,3.758,1739,3.758,1740,3.004,1741,3.004,1742,3.758,1743,3.758,1744,6.23,1745,3.758,1746,3.758,1747,3.758,1748,3.758,1749,3.758,1750,3.758,1751,6.23,1752,3.758,1753,3.758,1754,3.758,1755,3.758,1756,5.35,1757,5.35,1758,3.758,1759,3.758]],["title/components/UserFormsComponent.html",[0,0.277,156,0.933]],["body/components/UserFormsComponent.html",[0,0.371,1,0.705,2,1.075,3,0.066,4,0.066,5,0.743,6,0.743,7,0.743,8,0.058,10,1.571,11,1.822,13,0.705,14,1.995,15,2.047,17,1.047,18,0.94,19,1.104,21,1.196,23,1.196,25,0.058,26,0.111,28,0.842,30,1.711,31,1.228,32,1.438,33,2.195,34,1.289,36,0.65,37,0.011,38,0.709,39,0.209,40,0.478,42,0.977,43,1.419,45,0.616,46,0.567,49,0.862,50,0.536,52,0.973,61,0.066,62,0.492,68,1.477,76,0.743,77,1.104,78,1.104,79,0.668,80,1.457,81,0.743,82,0.743,83,0.705,84,1.047,85,1.104,86,0.705,87,0.583,88,1.735,89,0.705,90,0.743,91,0.705,92,0.686,93,0.743,94,0.705,95,0.668,96,0.705,97,0.743,98,0.705,99,0.705,100,0.686,101,0.705,102,0.743,103,0.705,104,0.743,105,0.705,106,0.633,107,0.705,108,0.743,109,0.705,110,0.743,111,0.705,112,0.743,113,0.705,114,0.743,115,0.705,116,0.724,117,1.317,118,1.382,119,0.724,120,0.743,121,0.705,122,0.743,123,1.382,124,0.743,125,0.705,126,0.743,127,0.705,128,0.743,129,0.705,130,0.743,131,0.705,132,0.743,133,0.705,134,0.705,135,0.743,136,0.705,137,0.552,138,0.705,139,0.743,140,0.705,141,0.743,142,0.705,143,0.743,144,0.705,145,0.743,146,0.705,147,0.743,148,0.705,149,0.668,150,0.705,151,0.743,152,0.705,153,0.743,154,0.705,155,0.743,156,1.382,157,0.705,158,0.705,159,0.724,160,0.686,161,0.724,162,0.743,163,0.006,164,0.006,198,1.543,200,3.011,201,0.763,205,1.058,223,2.307,224,1.984,234,1.632,272,1.188,273,1.303,274,1.12,281,1.058,295,2.882,298,2.488,315,1.735,316,2.815,317,2.382,318,2.95,319,2.815,320,2.815,326,3.208,327,3.208,328,3.55,336,2.573,337,2.573,338,2.573,340,1.224,341,1.811,343,3.011,344,1.811,345,1.811,346,1.811,351,2.637,355,3.208,359,3.55,360,3.55,362,2.918,363,3.55,1011,2.228,1012,2.381,1095,2.95,1387,2.83,1716,5.2,1723,4.558,1724,4.218,1740,3.821,1741,3.821,1760,6.005,1761,6.311,1762,6.311,1763,3.219,1764,3.219,1765,3.219,1766,4.781,1767,3.219,1768,4.781,1769,3.219,1770,3.219,1771,3.219,1772,4.781,1773,3.219,1774,4.781,1775,3.219,1776,4.781,1777,4.781,1778,4.781]],["title/injectables/UserService.html",[165,1.671,1779,3.406]],["body/injectables/UserService.html",[3,0.094,4,0.094,8,0.083,16,2.457,25,0.083,26,0.142,28,1.077,31,1.171,34,1.425,36,1.599,37,0.011,38,0.889,39,0.245,40,1.176,42,1.318,45,0.872,46,0.803,47,1.236,49,0.864,50,0.76,56,1.27,61,0.094,62,0.697,63,1.734,158,1.339,163,0.007,164,0.007,165,2.398,167,2.457,169,3.783,170,4.502,180,4.773,189,1.126,193,3.783,196,4.561,197,2.821,200,2.036,201,1.081,202,2.685,203,4.008,204,2.565,205,2.526,362,2.108,373,2.975,391,3.602,395,4.523,398,2.359,399,4.523,403,4.523,404,3.373,405,3.644,855,2.685,856,2.685,859,4.008,860,4.008,861,4.008,862,4.008,932,1.905,1056,2.108,1066,4.811,1067,3.156,1068,3.156,1095,3.814,1724,4.523,1779,4.888,1780,4.008,1781,6.116,1782,6.116,1783,6.116,1784,6.116,1785,6.116,1786,6.116,1787,4.56,1788,6.116,1789,4.56,1790,6.116,1791,4.56,1792,6.116,1793,4.56,1794,6.116,1795,4.56,1796,4.56,1797,4.56,1798,4.56,1799,4.56,1800,4.56,1801,4.56,1802,4.56,1803,4.56,1804,4.56,1805,4.56,1806,4.56,1807,4.56]],["title/components/UsersComponent.html",[0,0.277,157,0.933]],["body/components/UsersComponent.html",[0,0.331,1,0.584,2,0.932,3,0.055,4,0.055,5,0.616,6,0.616,7,0.616,8,0.048,10,1.362,11,1.624,12,2.124,13,0.584,14,1.968,15,2.018,17,0.908,18,0.815,19,0.957,21,1.037,23,1.037,25,0.048,26,0.096,27,1.821,28,0.73,29,2.053,30,1.554,31,0.686,32,1.192,33,2.041,34,1.39,36,1.158,37,0.011,38,0.895,39,0.212,40,0.851,42,1.126,43,1.594,45,1.257,46,1.157,47,1.378,48,1.821,49,0.91,50,0.445,51,1.047,52,0.807,55,1.115,56,0.743,61,0.055,62,0.408,63,1.015,64,1.234,66,1.279,68,1.254,74,1.152,75,1.115,76,0.616,77,0.957,78,0.957,79,0.554,80,1.324,81,0.616,82,0.616,83,0.584,84,0.908,85,0.957,86,0.584,87,0.483,88,1.637,89,0.584,90,0.616,91,0.584,92,0.569,93,0.616,94,0.584,95,0.554,96,0.584,97,0.616,98,0.584,99,0.584,100,0.569,101,1.255,102,0.616,103,0.584,104,0.616,105,0.584,106,0.525,107,0.584,108,0.616,109,0.584,110,0.616,111,0.584,112,0.616,113,0.584,114,0.616,115,0.584,116,0.6,117,1.174,118,0.584,119,0.6,120,0.616,121,0.584,122,0.616,123,0.584,124,0.616,125,0.584,126,0.616,127,0.584,128,0.616,129,0.584,130,0.616,131,0.584,132,0.616,133,0.584,134,0.584,135,0.616,136,0.584,137,0.457,138,0.584,139,0.616,140,0.584,141,0.616,142,0.584,143,0.616,144,0.584,145,0.616,146,0.584,147,0.616,148,0.584,149,0.554,150,0.584,151,0.616,152,0.584,153,0.616,154,0.584,155,0.616,156,0.908,157,1.255,158,1.438,159,0.6,160,0.569,161,0.6,162,0.616,163,0.005,164,0.005,189,0.546,200,3.25,201,0.633,217,2.772,218,2.739,219,2.529,220,2.739,221,2.739,222,2.739,223,2.057,224,1.769,225,2.994,228,2.739,229,2.739,230,2.934,231,2.739,232,2.739,233,2.234,234,1.64,236,2.063,238,2.529,239,2.852,241,2.234,243,1.279,254,1.097,255,3.225,258,2.234,260,2.234,262,0.877,263,1.438,264,1.279,265,1.279,266,1.438,267,1.438,268,1.438,269,1.438,270,1.438,271,1.438,272,0.985,273,1.08,274,0.929,275,1.502,280,1.438,281,0.877,282,1.438,283,1.381,284,1.438,286,1.438,287,1.438,289,2.063,291,2.145,292,2.145,293,2.145,294,1.626,295,1.53,297,2.965,298,0.985,301,1.438,302,2.234,304,1.438,305,1.438,306,1.438,307,1.438,308,1.438,309,2.234,310,2.234,311,1.917,343,1.192,413,3.317,419,2.869,433,2.56,455,3.067,877,3.76,932,2.395,1004,3.546,1010,2.346,1011,1.847,1012,1.974,1014,2.346,1015,2.346,1018,2.346,1056,2.65,1708,3.644,1710,3.644,1716,1.847,1722,3.644,1723,2.133,1724,1.974,1740,3.314,1741,3.314,1808,2.346,1809,4.146,1810,4.146,1811,5.732,1812,2.669,1813,2.669,1814,2.669,1815,2.669,1816,2.669,1817,2.669,1818,2.669,1819,2.669,1820,2.669,1821,5.732,1822,5.732,1823,2.669,1824,2.669,1825,2.669,1826,2.669,1827,2.669,1828,2.669,1829,2.669,1830,2.669,1831,4.146,1832,4.146,1833,4.146,1834,4.146,1835,4.146]],["title/coverage.html",[1836,5.134]],["body/coverage.html",[0,0.552,1,0.444,8,0.037,9,1.782,37,0.011,39,0.063,46,0.357,47,0.55,53,0.937,59,1.323,68,0.409,79,0.421,83,0.444,86,0.444,87,0.603,89,0.444,91,0.444,94,0.444,96,0.444,98,0.444,99,0.444,101,0.444,103,0.444,105,0.444,107,0.444,109,0.444,111,0.444,113,0.444,115,0.444,118,0.444,121,0.444,123,0.444,125,0.444,127,0.444,129,0.444,131,0.444,133,0.444,134,0.444,136,0.444,138,0.444,140,0.444,142,0.444,144,0.444,146,0.444,148,0.444,150,0.444,152,0.444,154,0.444,156,0.444,157,0.444,160,0.432,163,0.004,164,0.004,165,2.604,166,1.62,168,1.782,177,1.254,182,1.254,187,1.254,199,1.323,200,0.905,202,1.96,214,2.462,215,1.782,216,1.782,230,0.905,248,1.092,279,1.5,283,1.049,311,4.207,314,1.62,315,3.456,342,1.009,364,1.62,365,1.782,376,1.194,379,1.141,396,1.092,412,1.782,443,1.5,464,1.62,465,1.62,483,1.323,525,1.62,526,1.5,535,1.049,546,1.782,573,1.782,579,1.049,591,1.5,595,1.62,605,1.782,640,1.009,643,1.782,664,1.5,671,1.62,681,1.62,682,1.782,692,1.254,705,1.141,706,1.254,712,1.782,713,1.782,732,1.254,775,1.194,783,1.62,784,1.5,785,1.323,801,1.323,802,1.62,814,1.782,846,1.62,847,1.782,854,1.049,868,1.782,907,1.782,911,1.62,912,1.782,919,1.782,920,1.782,921,2.66,939,1.403,949,1.782,950,1.782,951,1.782,986,1.782,1006,1.62,1011,1.403,1042,0.266,1043,1.323,1045,3.197,1054,1.049,1055,1.323,1065,1.323,1070,1.62,1071,1.782,1073,1.403,1074,3.131,1077,1.403,1079,3.197,1082,1.323,1090,1.62,1091,1.782,1093,3.53,1096,1.254,1097,1.254,1099,1.254,1101,1.254,1102,3.53,1103,3.53,1104,1.049,1105,1.62,1106,1.782,1109,1.62,1111,3.131,1114,1.254,1115,2.93,1117,1.194,1119,1.403,1120,1.092,1126,1.403,1127,3.131,1129,1.62,1130,1.782,1131,1.62,1132,2.925,1149,1.62,1163,3.391,1164,1.323,1165,1.5,1166,2.462,1173,1.62,1174,1.782,1176,1.62,1177,1.782,1180,1.782,1191,1.782,1218,1.782,1223,1.5,1244,1.782,1257,1.782,1268,1.782,1294,1.62,1306,1.782,1309,1.5,1331,1.403,1366,1.62,1430,1.62,1431,1.782,1509,1.782,1536,1.782,1556,1.782,1557,1.782,1565,1.62,1577,1.782,1590,1.62,1591,1.782,1607,1.782,1625,1.62,1626,1.5,1635,1.782,1659,1.782,1668,1.782,1700,1.782,1716,1.403,1760,1.62,1779,1.62,1780,1.782,1808,1.782,1836,1.782,1837,2.027,1838,2.027,1839,2.027,1840,5.411,1841,2.027,1842,8.904,1843,2.027,1844,8.916,1845,2.027,1846,2.027,1847,2.027,1848,2.027,1849,2.027,1850,2.027,1851,2.027,1852,2.027,1853,2.027,1854,2.027,1855,7.004,1856,2.027,1857,6.143,1858,7.151,1859,2.027,1860,7.004,1861,7.004,1862,5.411,1863,4.233,1864,4.9,1865,6.642,1866,3.328,1867,2.027,1868,2.027,1869,1.782,1870,1.782,1871,3.328,1872,2.027,1873,4.233,1874,2.027,1875,3.328,1876,2.027,1877,3.328,1878,2.027,1879,2.027,1880,2.027,1881,3.328,1882,2.027,1883,6.642,1884,2.027,1885,2.027,1886,2.027,1887,2.027,1888,2.027,1889,2.027,1890,2.027,1891,2.027,1892,2.027,1893,4.233,1894,2.027,1895,5.411,1896,2.027,1897,6.143,1898,2.027,1899,3.328,1900,2.027,1901,2.027,1902,2.027,1903,2.027,1904,2.027,1905,4.233,1906,2.027,1907,2.027,1908,5.411,1909,2.027,1910,2.027,1911,2.027,1912,2.027,1913,2.027,1914,4.233,1915,2.027,1916,2.027,1917,2.027,1918,2.027,1919,4.233,1920,2.027,1921,2.027,1922,2.027,1923,7.669,1924,2.027,1925,2.027,1926,2.027,1927,2.027,1928,2.027,1929,2.027,1930,2.027,1931,2.027,1932,2.027,1933,2.027,1934,2.027,1935,2.027,1936,2.027,1937,2.027,1938,2.027,1939,2.027,1940,4.233,1941,2.027,1942,2.027,1943,5.411,1944,2.027,1945,2.027,1946,2.027,1947,2.027,1948,2.027,1949,4.233,1950,2.027,1951,2.027,1952,2.027,1953,2.027]],["title/dependencies.html",[1954,3.117,1955,4.511]],["body/dependencies.html",[37,0.011,50,0.972,51,2.287,52,2.165,56,1.624,163,0.008,164,0.008,230,3.463,262,1.916,264,2.796,265,2.796,340,2.218,547,3.806,1135,4.662,1136,6.463,1137,4.662,1147,6.197,1148,4.662,1210,5.127,1955,5.127,1956,5.833,1957,7.597,1958,5.833,1959,7.164,1960,5.833,1961,7.164,1962,7.164,1963,5.833,1964,5.833,1965,5.833,1966,5.833,1967,5.833,1968,8.087,1969,5.833,1970,5.833,1971,7.754,1972,5.833,1973,7.164,1974,5.833,1975,5.833,1976,5.833,1977,5.833,1978,5.833,1979,5.833,1980,5.833,1981,5.833,1982,5.833,1983,5.833]],["title/miscellaneous/functions.html",[1984,2.623,1985,4.511]],["body/miscellaneous/functions.html",[25,0.124,37,0.01,42,1.173,163,0.009,164,0.009,1565,6.632,1869,6.017,1870,6.926,1984,5.064,1985,6.017,1986,6.846,1987,6.846]],["title/index.html",[25,0.064,1988,3.547,1989,3.547]],["body/index.html",[37,0.009,163,0.009,164,0.009,1957,6.097,1990,6.937,1991,6.937,1992,6.937,1993,6.937,1994,6.937,1995,6.097]],["title/modules.html",[1996,5.134]],["body/modules.html",[37,0.009,163,0.009,164,0.009,1996,6.178]],["title/overview.html",[1997,5.134]],["body/overview.html",[2,1.546,37,0.009,79,1.427,163,0.009,164,0.009,167,3.705,775,4.049,1044,1.316,1690,6.314,1997,6.044,1998,6.876,1999,6.876,2000,6.876]],["title/properties.html",[26,0.119,1954,3.117]],["body/properties.html",[26,0.162,37,0.01,163,0.009,164,0.009,1995,6.137,2001,6.983]],["title/miscellaneous/typealiases.html",[1984,2.623,2002,5.132]],["body/miscellaneous/typealiases.html",[18,0.993,25,0.091,37,0.011,39,0.246,87,1.314,163,0.008,164,0.008,189,0.665,209,3.024,214,3.734,279,3.734,295,3.273,296,3.51,298,3.133,314,4.035,315,4.753,343,3.792,389,4.268,443,3.734,463,2.612,464,4.035,465,5.227,525,4.035,526,3.734,591,3.734,595,4.035,664,3.734,671,4.035,736,1.659,745,2.612,783,4.035,784,3.734,851,4.838,932,2.109,1045,3.294,1053,1.871,1066,4.268,1079,3.294,1081,5.311,1109,4.035,1110,5.749,1115,3.494,1124,4.838,1125,4.527,1166,3.734,1189,5.749,1294,4.035,1300,5.749,1302,5.227,1331,3.494,1366,4.035,1625,4.035,1626,3.734,1716,3.494,1760,4.035,1984,3.734,2003,5.049,2004,8.145,2005,5.049,2006,5.049,2007,5.049,2008,5.049,2009,5.049,2010,5.049,2011,5.049,2012,5.049,2013,5.049,2014,5.049,2015,5.049,2016,5.049,2017,5.049,2018,5.049]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":311,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"pipes/TimesincePipe.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2001,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":1983,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":618,"title":{},"body":{"components/ColorComponent.html":{}}}],["0.5rem",{"_index":613,"title":{},"body":{"components/ColorComponent.html":{}}}],["0.8rem",{"_index":1613,"title":{},"body":{"components/SubnavComponent.html":{}}}],["0/1",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1690,"title":{},"body":{"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["10",{"_index":312,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/TagsComponent.html":{}}}],["100",{"_index":619,"title":{},"body":{"components/ColorComponent.html":{},"components/CouponsComponent.html":{}}}],["1000",{"_index":1677,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["15",{"_index":457,"title":{},"body":{"components/BlogsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{}}}],["17.1.0",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["17.2.0",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1957,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.3.8",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["18.0.0",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1698,"title":{},"body":{"pipes/TimesincePipe.html":{},"components/UserComponent.html":{}}}],["2.3.0",{"_index":1981,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":617,"title":{},"body":{"components/ColorComponent.html":{}}}],["2592000",{"_index":1681,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["31536000",{"_index":1679,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["35",{"_index":459,"title":{},"body":{"components/BlogsComponent.html":{}}}],["3600",{"_index":1687,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["38",{"_index":1998,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":621,"title":{},"body":{"components/ColorComponent.html":{}}}],["40",{"_index":297,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["44",{"_index":2000,"title":{},"body":{"overview.html":{}}}],["5.2.0",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":290,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/TagsComponent.html":{}}}],["500",{"_index":293,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["6",{"_index":455,"title":{},"body":{"components/BlogsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/UsersComponent.html":{}}}],["6.4.2",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":452,"title":{},"body":{"components/BlogsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"pipes/TimesincePipe.html":{}}}],["604800",{"_index":1683,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["7.8.0",{"_index":1979,"title":{},"body":{"dependencies.html":{}}}],["86400",{"_index":1685,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["9",{"_index":1999,"title":{},"body":{"overview.html":{}}}],["90",{"_index":453,"title":{},"body":{"components/BlogsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{}}}],["_loading",{"_index":1245,"title":{},"body":{"injectables/LoaderService.html":{}}}],["abstractcontrol",{"_index":964,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["accessor.directive",{"_index":904,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["accessor.directive.ts",{"_index":713,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"coverage.html":{}}}],["accessor.directive.ts:19",{"_index":725,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:22",{"_index":743,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:24",{"_index":748,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:26",{"_index":746,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:28",{"_index":744,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:30",{"_index":747,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:32",{"_index":727,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:37",{"_index":738,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:59",{"_index":740,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:65",{"_index":730,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:76",{"_index":734,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:80",{"_index":737,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:84",{"_index":726,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessors",{"_index":957,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["actions",{"_index":255,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["activatedroute",{"_index":1315,"title":{},"body":{"components/ProductComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserComponent.html":{}}}],["actual_component",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":296,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["addform",{"_index":321,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["addnewblog",{"_index":470,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["addnewblogcategory",{"_index":322,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["addnewcolor",{"_index":672,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["addnewcoupon",{"_index":786,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["addnewproduct",{"_index":1369,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["addnewproductbrand",{"_index":528,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["addnewproductcategory",{"_index":596,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["addnewtag",{"_index":1627,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["address",{"_index":1057,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/UserComponent.html":{}}}],["address1",{"_index":1046,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["address2",{"_index":1047,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["addressid",{"_index":1170,"title":{},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{}}}],["admin",{"_index":1990,"title":{},"body":{"index.html":{}}}],["ago",{"_index":1695,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["aliases",{"_index":2003,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":609,"title":{},"body":{"components/ColorComponent.html":{},"components/SubnavComponent.html":{}}}],["alphanumeric",{"_index":1575,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["angular",{"_index":1993,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":275,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/common",{"_index":262,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":340,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/DateComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/PasswordComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagFormsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserFormsComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1210,"title":{},"body":{"components/LayoutComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":274,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/card",{"_index":273,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/core",{"_index":902,"title":{},"body":{"components/DateComponent.html":{}}}],["angular/material/datepicker",{"_index":901,"title":{},"body":{"components/DateComponent.html":{}}}],["angular/material/dialog",{"_index":272,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/grid",{"_index":1326,"title":{},"body":{"components/ProductComponent.html":{}}}],["angular/material/menu",{"_index":1209,"title":{},"body":{"components/LayoutComponent.html":{}}}],["angular/material/paginator",{"_index":271,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/select",{"_index":1587,"title":{},"body":{"components/SelectComponent.html":{}}}],["angular/material/sidenav",{"_index":1207,"title":{},"body":{"components/LayoutComponent.html":{}}}],["angular/material/sort",{"_index":269,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/table",{"_index":267,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/tabs",{"_index":1332,"title":{},"body":{"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["angular/material/toolbar",{"_index":1208,"title":{},"body":{"components/LayoutComponent.html":{}}}],["angular/platform",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubnavComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["any)[0",{"_index":969,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUserStoreState.html":{},"components/LayoutComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/SelectComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["app/shared",{"_index":281,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["app/shared/icons",{"_index":1550,"title":{},"body":{"components/RatingComponent.html":{}}}],["app/store/auth",{"_index":941,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["app/store/blogs",{"_index":277,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{}}}],["app/store/common",{"_index":803,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{}}}],["app/store/customer",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{}}}],["app/store/products",{"_index":538,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{}}}],["app/store/user",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["appcontrolvalueaccessor",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["args",{"_index":1671,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["array",{"_index":1172,"title":{},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{}}}],["array(this.stars()).fill(this.stars",{"_index":1553,"title":{},"body":{"components/RatingComponent.html":{}}}],["async",{"_index":946,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["asyncpipe",{"_index":466,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/angular",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["auth_routes",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["authactions",{"_index":939,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["authactions.forgotpassword",{"_index":944,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["authactions.login",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{}}}],["authactions.resetpassword",{"_index":1572,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["authfeature",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["authguard",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["author",{"_index":436,"title":{},"body":{"components/BlogsComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["authservice",{"_index":166,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["authuser",{"_index":1072,"title":{},"body":{"interfaces/IAuthStoreState.html":{}}}],["available",{"_index":1123,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{}}}],["availabletype",{"_index":1124,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"miscellaneous/typealiases.html":{}}}],["b",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["back",{"_index":1365,"title":{},"body":{"components/ProductComponent.html":{}}}],["backend",{"_index":1403,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["background",{"_index":615,"title":{},"body":{"components/ColorComponent.html":{},"components/SubnavComponent.html":{}}}],["behaviorsubject",{"_index":1254,"title":{},"body":{"injectables/LoaderService.html":{}}}],["behaviorsubject(false",{"_index":1250,"title":{},"body":{"injectables/LoaderService.html":{}}}],["between",{"_index":1612,"title":{},"body":{"components/SubnavComponent.html":{}}}],["block",{"_index":1741,"title":{},"body":{"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["blocked",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["blockuser",{"_index":1781,"title":{},"body":{"injectables/UserService.html":{}}}],["blockuser(userid",{"_index":1786,"title":{},"body":{"injectables/UserService.html":{}}}],["blockusereffect",{"_index":1944,"title":{},"body":{"coverage.html":{}}}],["blog",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBlogStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["blogactions",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"coverage.html":{}}}],["blogactions.createblog",{"_index":514,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["blogactions.createblogcategory",{"_index":352,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["blogactions.deleteblog",{"_index":516,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["blogactions.deleteblogcategory",{"_index":356,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["blogcategories",{"_index":1092,"title":{},"body":{"interfaces/IBlogStoreState.html":{},"interfaces/IData.html":{}}}],["blogcategoriescomponent",{"_index":83,"title":{"components/BlogCategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["blogcategoryformscomponent",{"_index":86,"title":{"components/BlogCategoryFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["blogfeature",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["blogid",{"_index":383,"title":{},"body":{"injectables/BlogService.html":{},"components/BlogsFormComponent.html":{}}}],["blogquerytype",{"_index":389,"title":{},"body":{"injectables/BlogService.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"miscellaneous/typealiases.html":{}}}],["blogs",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IData.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["blogs'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["blogs.component.html",{"_index":416,"title":{},"body":{"components/BlogsComponent.html":{}}}],["blogs.component.scss",{"_index":417,"title":{},"body":{"components/BlogsComponent.html":{}}}],["blogscomponent",{"_index":89,"title":{"components/BlogsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["blogservice",{"_index":364,"title":{"injectables/BlogService.html":{}},"body":{"injectables/BlogService.html":{},"coverage.html":{}}}],["blogsformcomponent",{"_index":91,"title":{"components/BlogsFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":736,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IEnquiry.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{},"miscellaneous/typealiases.html":{}}}],["border",{"_index":622,"title":{},"body":{"components/ColorComponent.html":{}}}],["brand",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["brandformscomponent",{"_index":94,"title":{"components/BrandFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["brandid",{"_index":543,"title":{},"body":{"components/BrandFormsComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/ProductFormsComponent.html":{}}}],["brands",{"_index":547,"title":{},"body":{"components/BrandsComponent.html":{},"interfaces/IData.html":{},"interfaces/IProductStoreState.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["brands'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["brands.component.html",{"_index":548,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.component.scss",{"_index":549,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands_url",{"_index":1432,"title":{},"body":{"injectables/ProductService.html":{}}}],["brandscomponent",{"_index":96,"title":{"components/BrandsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["break",{"_index":769,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["browser",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":1410,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["c.totalpriceafterdiscount",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["cancel",{"_index":363,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["cart",{"_index":1060,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["cartid",{"_index":1100,"title":{},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{}}}],["case",{"_index":764,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/FormGroupComponent.html":{}}}],["cat",{"_index":400,"title":{},"body":{"injectables/BlogService.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"injectables/ProductService.html":{}}}],["cat_url",{"_index":366,"title":{},"body":{"injectables/BlogService.html":{},"injectables/ProductService.html":{}}}],["catch",{"_index":770,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/StorageService.html":{}}}],["categories",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IData.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["categories'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["categories.component.html",{"_index":226,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":227,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/CategoriesComponent.html":{}}}],["categories.component.ts",{"_index":216,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"coverage.html":{}}}],["categories.component.ts:104",{"_index":245,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:38",{"_index":240,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:41",{"_index":257,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:43",{"_index":253,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:45",{"_index":259,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:47",{"_index":261,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:49",{"_index":251,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:52",{"_index":256,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:54",{"_index":252,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:56",{"_index":246,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:60",{"_index":242,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:64",{"_index":250,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:75",{"_index":249,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories.component.ts:87",{"_index":244,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["categories/blog",{"_index":215,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"coverage.html":{}}}],["categories/components/blog",{"_index":314,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["categoriescomponent",{"_index":98,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["categoriesformscomponent",{"_index":99,"title":{"components/CategoriesFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["category",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["categoryid",{"_index":357,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/CategoriesFormsComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/ProductFormsComponent.html":{}}}],["catid",{"_index":386,"title":{},"body":{"injectables/BlogService.html":{},"injectables/ProductService.html":{}}}],["cdkcopytoclipboard",{"_index":415,"title":{},"body":{"components/BlogsComponent.html":{}}}],["center",{"_index":611,"title":{},"body":{"components/ColorComponent.html":{},"components/SubnavComponent.html":{}}}],["characters",{"_index":982,"title":{},"body":{"components/FormGroupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["checkbox",{"_index":2017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["choose",{"_index":905,"title":{},"body":{"components/DateComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["city",{"_index":1048,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/UserComponent.html":{}}}],["class",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["cli",{"_index":1994,"title":{},"body":{"index.html":{}}}],["clipboardmodule",{"_index":225,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["code",{"_index":792,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"components/UserComponent.html":{}}}],["color",{"_index":606,"title":{},"body":{"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IUpdateCartRequest.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/SubnavComponent.html":{},"components/UserComponent.html":{}}}],["color'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["color_url",{"_index":1433,"title":{},"body":{"injectables/ProductService.html":{}}}],["colorcomponent",{"_index":101,"title":{"components/ColorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["colorid",{"_index":678,"title":{},"body":{"components/ColorsFormsComponent.html":{},"injectables/ProductService.html":{}}}],["colors",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IData.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IProductStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["colors'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["colors.component.html",{"_index":644,"title":{},"body":{"components/ColorsComponent.html":{}}}],["colors.component.scss",{"_index":645,"title":{},"body":{"components/ColorsComponent.html":{}}}],["colors.push(d",{"_index":1412,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["colorscomponent",{"_index":103,"title":{"components/ColorsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["colorsformscomponent",{"_index":105,"title":{"components/ColorsFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["combinelatest",{"_index":485,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["comment",{"_index":1113,"title":{},"body":{"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateReview.html":{},"interfaces/IEnquiry.html":{},"interfaces/IReview.html":{},"interfaces/User.html":{}}}],["commonactions",{"_index":802,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"coverage.html":{}}}],["commonactions.createcoupon",{"_index":806,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["commonactions.deletecoupon",{"_index":811,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["commonfeature",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["commonservice",{"_index":681,"title":{"injectables/CommonService.html":{}},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["compare",{"_index":1061,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/blog",{"_index":278,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["components/blogs",{"_index":442,"title":{},"body":{"components/BlogsComponent.html":{}}}],["components/brand",{"_index":567,"title":{},"body":{"components/BrandsComponent.html":{}}}],["components/categories",{"_index":590,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["components/colors",{"_index":663,"title":{},"body":{"components/ColorsComponent.html":{}}}],["components/coupon",{"_index":834,"title":{},"body":{"components/CouponsComponent.html":{}}}],["components/product",{"_index":1529,"title":{},"body":{"components/ProductsComponent.html":{}}}],["components/tag",{"_index":1654,"title":{},"body":{"components/TagsComponent.html":{}}}],["components/user",{"_index":1828,"title":{},"body":{"components/UsersComponent.html":{}}}],["config",{"_index":284,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["confirm_password",{"_index":1564,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.error(error",{"_index":1603,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(data",{"_index":1721,"title":{},"body":{"components/UserComponent.html":{}}}],["console.log(num",{"_index":1554,"title":{},"body":{"components/RatingComponent.html":{}}}],["const",{"_index":398,"title":{},"body":{"injectables/BlogService.html":{},"components/BlogsFormComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"injectables/CustomerService.html":{},"interfaces/IData.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"pipes/TimesincePipe.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(@inject(injector",{"_index":756,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["constructor(dialog",{"_index":1314,"title":{},"body":{"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["constructor(fb",{"_index":324,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{}}}],["constructor(http",{"_index":373,"title":{},"body":{"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(injector",{"_index":723,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["constructor(loaderservice",{"_index":1222,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"injectables/CommonService.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(store",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["content",{"_index":1609,"title":{},"body":{"components/SubnavComponent.html":{}}}],["control",{"_index":715,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["control().errors?.[errorkey].max",{"_index":977,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["control().errors?.[errorkey].min",{"_index":979,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["control().errors?.[errorkey].requiredlength",{"_index":981,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["controlitemvaluetype",{"_index":1110,"title":{},"body":{"interfaces/IControlItem.html":{},"miscellaneous/typealiases.html":{}}}],["controlvalueaccessor",{"_index":714,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["controlvalueaccessordirective",{"_index":160,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["controlvalueaccessordirective:22",{"_index":896,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:24",{"_index":900,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:26",{"_index":898,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:28",{"_index":897,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:30",{"_index":899,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:32",{"_index":889,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:37",{"_index":893,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:59",{"_index":894,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:65",{"_index":890,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:76",{"_index":891,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:80",{"_index":892,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["controlvalueaccessordirective:84",{"_index":888,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["cookie",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1137,"title":{},"body":{"interfaces/IData.html":{},"components/RatingComponent.html":{},"dependencies.html":{}}}],["count",{"_index":1078,"title":{},"body":{"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBulkDeleteResponse.html":{}}}],["counter",{"_index":1691,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["coup_url",{"_index":683,"title":{},"body":{"injectables/CommonService.html":{}}}],["coupon",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["couponformscomponent",{"_index":107,"title":{"components/CouponFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["couponid",{"_index":696,"title":{},"body":{"injectables/CommonService.html":{},"components/CouponFormsComponent.html":{}}}],["coupons",{"_index":702,"title":{},"body":{"injectables/CommonService.html":{},"components/CouponsComponent.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IData.html":{}}}],["coupons'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["coupons.component.html",{"_index":815,"title":{},"body":{"components/CouponsComponent.html":{}}}],["coupons.component.scss",{"_index":816,"title":{},"body":{"components/CouponsComponent.html":{}}}],["couponscomponent",{"_index":109,"title":{"components/CouponsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["coverage",{"_index":1836,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createblog",{"_index":367,"title":{},"body":{"injectables/BlogService.html":{}}}],["createblog(dto",{"_index":375,"title":{},"body":{"injectables/BlogService.html":{}}}],["createblogcategory",{"_index":368,"title":{},"body":{"injectables/BlogService.html":{}}}],["createblogcategory(dto",{"_index":378,"title":{},"body":{"injectables/BlogService.html":{}}}],["createblogcategoryeffects",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["createbrandeffects",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["createcolor",{"_index":1435,"title":{},"body":{"injectables/ProductService.html":{}}}],["createcolor(dto",{"_index":1449,"title":{},"body":{"injectables/ProductService.html":{}}}],["createcoloreffects",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["createcoupon",{"_index":685,"title":{},"body":{"injectables/CommonService.html":{}}}],["createcoupon(dto",{"_index":691,"title":{},"body":{"injectables/CommonService.html":{}}}],["createcouponeffect",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["created",{"_index":1726,"title":{},"body":{"components/UserComponent.html":{}}}],["createdat",{"_index":1058,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["createenquiry",{"_index":913,"title":{},"body":{"injectables/EnquiryService.html":{}}}],["createenquiry(dto",{"_index":915,"title":{},"body":{"injectables/EnquiryService.html":{}}}],["createproduct",{"_index":1436,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproduct(dto",{"_index":1451,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductbrand",{"_index":1437,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductbrand(dto",{"_index":1453,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductcategorieseffects",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["createproductcategory",{"_index":1438,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductcategory(dto",{"_index":1455,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproducteffects",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["createtag",{"_index":1439,"title":{},"body":{"injectables/ProductService.html":{}}}],["createtag(dto",{"_index":1457,"title":{},"body":{"injectables/ProductService.html":{}}}],["createtageffects",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["currency",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["currencypipe",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["cursor",{"_index":624,"title":{},"body":{"components/ColorComponent.html":{}}}],["customaddressupdatedto",{"_index":1069,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["customer",{"_index":853,"title":{},"body":{"injectables/CustomerService.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["customeractions",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"coverage.html":{}}}],["customerfeature",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["customerservice",{"_index":846,"title":{"injectables/CustomerService.html":{}},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["d",{"_index":302,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["dashboard",{"_index":1150,"title":{},"body":{"interfaces/IData.html":{}}}],["data",{"_index":294,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["data$|async",{"_index":522,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["data.colors",{"_index":1411,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["data.colors?.length",{"_index":1408,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["data.expiresat",{"_index":809,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["data.id",{"_index":521,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["data.label",{"_index":1215,"title":{},"body":{"components/LayoutComponent.html":{}}}],["data.map((x",{"_index":1427,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["data.name",{"_index":520,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["data.tags",{"_index":1413,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["data.tags?.length",{"_index":1409,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["data?.map((x",{"_index":487,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["datasource",{"_index":228,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["date",{"_index":463,"title":{},"body":{"components/BlogsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"components/OrdersComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"miscellaneous/typealiases.html":{}}}],["date'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["date(data.expiresat",{"_index":810,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["date(value",{"_index":1676,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["date.component.html",{"_index":878,"title":{},"body":{"components/DateComponent.html":{}}}],["date.component.scss",{"_index":879,"title":{},"body":{"components/DateComponent.html":{}}}],["datecomponent",{"_index":111,"title":{"components/DateComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["datepipe",{"_index":414,"title":{},"body":{"components/BlogsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/UserComponent.html":{}}}],["day",{"_index":1684,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["days",{"_index":1699,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["dbuser",{"_index":1178,"title":{},"body":{"interfaces/IUserStoreState.html":{}}}],["dbusers",{"_index":1179,"title":{},"body":{"interfaces/IUserStoreState.html":{}}}],["decoration",{"_index":1617,"title":{},"body":{"components/SubnavComponent.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["delay",{"_index":1230,"title":{},"body":{"components/LoaderComponent.html":{}}}],["delay(2000",{"_index":1242,"title":{},"body":{"components/LoaderComponent.html":{}}}],["delete",{"_index":298,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/typealiases.html":{}}}],["deleteblog",{"_index":369,"title":{},"body":{"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{}}}],["deleteblog(blogid",{"_index":381,"title":{},"body":{"injectables/BlogService.html":{}}}],["deleteblog.title",{"_index":524,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["deleteblogcategory",{"_index":299,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{}}}],["deleteblogcategory(catid",{"_index":384,"title":{},"body":{"injectables/BlogService.html":{}}}],["deleteblogcategory.name",{"_index":361,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["deleteblogcategoyeffects",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["deleteblogeffects",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["deletecolor",{"_index":667,"title":{},"body":{"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/ProductService.html":{}}}],["deletecolor(colorid",{"_index":1459,"title":{},"body":{"injectables/ProductService.html":{}}}],["deletecolor.name",{"_index":680,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["deletecoloreffects",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["deletecoupon",{"_index":686,"title":{},"body":{"injectables/CommonService.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{}}}],["deletecoupon(couponid",{"_index":694,"title":{},"body":{"injectables/CommonService.html":{}}}],["deletecoupon.code",{"_index":813,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["deletecouponeffect",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["deleteenquiry",{"_index":687,"title":{},"body":{"injectables/CommonService.html":{}}}],["deleteenquiry(enquiryid",{"_index":697,"title":{},"body":{"injectables/CommonService.html":{}}}],["deleteenquiryeffects",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["deleteproduct",{"_index":1342,"title":{},"body":{"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{}}}],["deleteproduct(productid",{"_index":1461,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct.title",{"_index":1429,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["deleteproductbrand",{"_index":527,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"injectables/ProductService.html":{}}}],["deleteproductbrand(catid",{"_index":1463,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproductbrand.name",{"_index":545,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["deleteproductbrandeffects",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["deleteproductcategory",{"_index":593,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"injectables/ProductService.html":{}}}],["deleteproductcategory(catid",{"_index":1465,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproductcategory.name",{"_index":603,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["deleteproductcategoyeffects",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["deleteproducteffects",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["deletetag",{"_index":1440,"title":{},"body":{"injectables/ProductService.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{}}}],["deletetag(tagid",{"_index":1467,"title":{},"body":{"injectables/ProductService.html":{}}}],["deletetag.name",{"_index":1634,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["deletetageffects",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["deleteuser",{"_index":1724,"title":{},"body":{"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["deleteuser(userid",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser.firstname",{"_index":1778,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["deleteusereffect",{"_index":1945,"title":{},"body":{"coverage.html":{}}}],["dependencies",{"_index":1955,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desc",{"_index":435,"title":{},"body":{"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/ProductFormsComponent.html":{}}}],["destroy",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["detectroutetransitions",{"_index":1221,"title":{},"body":{"components/LoaderComponent.html":{}}}],["devtools",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["dialog",{"_index":238,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["dialogdata",{"_index":326,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["dialogref",{"_index":327,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["directive",{"_index":79,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["directives/control",{"_index":903,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["discount",{"_index":793,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{}}}],["display",{"_index":607,"title":{},"body":{"components/ColorComponent.html":{},"components/SubnavComponent.html":{}}}],["displaycolumms",{"_index":229,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["distinctuntilchanged",{"_index":753,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["documentation",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["dont",{"_index":973,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["dto",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":243,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["e.target",{"_index":498,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["e.target.value",{"_index":287,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["edit",{"_index":343,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/typealiases.html":{}}}],["editblog",{"_index":454,"title":{},"body":{"components/BlogsComponent.html":{}}}],["editform",{"_index":1367,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["editproduct",{"_index":1341,"title":{},"body":{"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{}}}],["edituser",{"_index":1723,"title":{},"body":{"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["edituser.blocked",{"_index":1776,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["edituser.firstname",{"_index":1777,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["el.author.firstname",{"_index":460,"title":{},"body":{"components/BlogsComponent.html":{}}}],["el.author.lastname",{"_index":461,"title":{},"body":{"components/BlogsComponent.html":{}}}],["el.available",{"_index":1533,"title":{},"body":{"components/ProductsComponent.html":{}}}],["el.blocked",{"_index":1835,"title":{},"body":{"components/UsersComponent.html":{}}}],["el.brand.name",{"_index":1532,"title":{},"body":{"components/ProductsComponent.html":{}}}],["el.code",{"_index":842,"title":{},"body":{"components/CouponsComponent.html":{}}}],["el.createdat",{"_index":844,"title":{},"body":{"components/CouponsComponent.html":{}}}],["el.desc",{"_index":458,"title":{},"body":{"components/BlogsComponent.html":{}}}],["el.discount",{"_index":843,"title":{},"body":{"components/CouponsComponent.html":{}}}],["el.email",{"_index":1834,"title":{},"body":{"components/UsersComponent.html":{}}}],["el.expiresat",{"_index":845,"title":{},"body":{"components/CouponsComponent.html":{}}}],["el.firstname",{"_index":1831,"title":{},"body":{"components/UsersComponent.html":{}}}],["el.id",{"_index":309,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["el.lastname",{"_index":1832,"title":{},"body":{"components/UsersComponent.html":{}}}],["el.mobile",{"_index":1833,"title":{},"body":{"components/UsersComponent.html":{}}}],["el.name",{"_index":313,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/TagsComponent.html":{}}}],["el.title",{"_index":456,"title":{},"body":{"components/BlogsComponent.html":{},"components/ProductsComponent.html":{}}}],["el.totalprice",{"_index":1293,"title":{},"body":{"components/OrdersComponent.html":{}}}],["el.updatedat",{"_index":462,"title":{},"body":{"components/BlogsComponent.html":{},"components/OrdersComponent.html":{}}}],["el.userid",{"_index":1292,"title":{},"body":{"components/OrdersComponent.html":{}}}],["element",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":932,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/IAddress.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/typealiases.html":{}}}],["empty",{"_index":1363,"title":{},"body":{"components/ProductComponent.html":{}}}],["end",{"_index":1289,"title":{},"body":{"components/OrdersComponent.html":{},"components/ProductsComponent.html":{}}}],["enq_url",{"_index":684,"title":{},"body":{"injectables/CommonService.html":{}}}],["enquiries",{"_index":703,"title":{},"body":{"injectables/CommonService.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"interfaces/ICommonStoreState.html":{}}}],["enquiries'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["enquiries.component.html",{"_index":908,"title":{},"body":{"components/EnquiriesComponent.html":{}}}],["enquiries.component.scss",{"_index":909,"title":{},"body":{"components/EnquiriesComponent.html":{}}}],["enquiriescomponent",{"_index":113,"title":{"components/EnquiriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["enquiryid",{"_index":699,"title":{},"body":{"injectables/CommonService.html":{}}}],["enquiryservice",{"_index":911,"title":{"injectables/EnquiryService.html":{}},"body":{"injectables/EnquiryService.html":{},"coverage.html":{}}}],["enteranimationduration",{"_index":292,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["environment",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["environment.server_url",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["environments/environment.development",{"_index":397,"title":{},"body":{"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{}}}],["error",{"_index":771,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUserStoreState.html":{},"injectables/StorageService.html":{}}}],["errorinterceptor",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["errorkey",{"_index":958,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["event",{"_index":479,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/LoaderComponent.html":{},"components/ProductFormsComponent.html":{}}}],["expiresat",{"_index":797,"title":{},"body":{"components/CouponFormsComponent.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["extends",{"_index":869,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["fablog",{"_index":1138,"title":{},"body":{"interfaces/IData.html":{}}}],["fabookskull",{"_index":1139,"title":{},"body":{"interfaces/IData.html":{}}}],["facartplus",{"_index":1140,"title":{},"body":{"interfaces/IData.html":{}}}],["fahomealt",{"_index":1141,"title":{},"body":{"interfaces/IData.html":{}}}],["falayergroup",{"_index":1142,"title":{},"body":{"interfaces/IData.html":{}}}],["false",{"_index":745,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fapalette",{"_index":1143,"title":{},"body":{"interfaces/IData.html":{}}}],["fastar",{"_index":1552,"title":{},"body":{"components/RatingComponent.html":{}}}],["fatags",{"_index":1144,"title":{},"body":{"interfaces/IData.html":{}}}],["fauseralt",{"_index":1145,"title":{},"body":{"interfaces/IData.html":{}}}],["fausers",{"_index":1146,"title":{},"body":{"interfaces/IData.html":{}}}],["fb",{"_index":330,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{}}}],["field",{"_index":970,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["filelist",{"_index":1392,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["filterchange",{"_index":233,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["filterchange(e",{"_index":241,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["first",{"_index":1821,"title":{},"body":{"components/UsersComponent.html":{}}}],["firstname",{"_index":1049,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateReview.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/User.html":{}}}],["flex",{"_index":608,"title":{},"body":{"components/ColorComponent.html":{},"components/SubnavComponent.html":{}}}],["fn",{"_index":731,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["fn(val",{"_index":779,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["fname",{"_index":1067,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{}}}],["following",{"_index":1406,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["fontawesome",{"_index":265,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/LayoutComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":219,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/LayoutComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["forgot",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["forgotpassword",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(dto",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":115,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["forgotpasswordeffect",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["form'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["form.component",{"_index":444,"title":{},"body":{"components/BlogsComponent.html":{}}}],["form.component.html",{"_index":467,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.scss",{"_index":468,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts",{"_index":465,"title":{},"body":{"components/BlogsFormComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["form.component.ts:118",{"_index":477,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:128",{"_index":482,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:43",{"_index":474,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:51",{"_index":489,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:57",{"_index":491,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:59",{"_index":490,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:61",{"_index":493,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:63",{"_index":484,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:69",{"_index":476,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:76",{"_index":480,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form.component.ts:84",{"_index":475,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["form/blogs",{"_index":443,"title":{},"body":{"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["format",{"_index":1407,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["formbuilder",{"_index":325,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{}}}],["formcontrol",{"_index":741,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["formcontrol(value",{"_index":773,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["formcontroldirective",{"_index":749,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["formcontrolname",{"_index":750,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["formdata",{"_index":504,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["formdata.append('categoryid",{"_index":509,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["formdata.append('desc",{"_index":507,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["formdata.append('image",{"_index":511,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["formdata.append('title",{"_index":505,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["formgroupcomponent",{"_index":118,"title":{"components/FormGroupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["formgroupdirective",{"_index":751,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["forms",{"_index":316,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["forms'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["forms.component",{"_index":280,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["forms.component.html",{"_index":319,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["forms.component.scss",{"_index":320,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["forms.component.ts",{"_index":315,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms.component.ts:105",{"_index":1377,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:117",{"_index":1381,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:124",{"_index":1375,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:172",{"_index":1379,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:201",{"_index":1378,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:211",{"_index":1376,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:230",{"_index":1384,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:233",{"_index":1383,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:32",{"_index":1763,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["forms.component.ts:33",{"_index":329,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/ColorsFormsComponent.html":{}}}],["forms.component.ts:34",{"_index":530,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["forms.component.ts:39",{"_index":1765,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["forms.component.ts:40",{"_index":788,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["forms.component.ts:41",{"_index":338,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["forms.component.ts:42",{"_index":537,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["forms.component.ts:43",{"_index":337,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["forms.component.ts:44",{"_index":536,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["forms.component.ts:45",{"_index":336,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["forms.component.ts:46",{"_index":534,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["forms.component.ts:48",{"_index":799,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["forms.component.ts:49",{"_index":332,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/ColorsFormsComponent.html":{}}}],["forms.component.ts:50",{"_index":532,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["forms.component.ts:52",{"_index":800,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["forms.component.ts:54",{"_index":798,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["forms.component.ts:56",{"_index":1764,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["forms.component.ts:57",{"_index":331,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/ColorsFormsComponent.html":{}}}],["forms.component.ts:58",{"_index":531,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["forms.component.ts:60",{"_index":1391,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:62",{"_index":1390,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:64",{"_index":1389,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:66",{"_index":1387,"title":{},"body":{"components/ProductFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["forms.component.ts:68",{"_index":790,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{}}}],["forms.component.ts:74",{"_index":333,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/ColorsFormsComponent.html":{}}}],["forms.component.ts:75",{"_index":533,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["forms.component.ts:76",{"_index":789,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["forms.component.ts:83",{"_index":1385,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:94",{"_index":1388,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["forms.component.ts:97",{"_index":791,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["forms/blog",{"_index":279,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/brand",{"_index":526,"title":{},"body":{"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/categories",{"_index":591,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/colors",{"_index":664,"title":{},"body":{"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/coupon",{"_index":784,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/product",{"_index":1331,"title":{},"body":{"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/tag",{"_index":1626,"title":{},"body":{"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/user",{"_index":1716,"title":{},"body":{"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["formtype",{"_index":295,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fortawesome/angular",{"_index":264,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/LayoutComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1135,"title":{},"body":{"interfaces/IData.html":{},"components/RatingComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":1147,"title":{},"body":{"interfaces/IData.html":{},"components/RatingComponent.html":{},"dependencies.html":{}}}],["fromobject",{"_index":404,"title":{},"body":{"injectables/BlogService.html":{},"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["function",{"_index":732,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1985,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":612,"title":{},"body":{"components/ColorComponent.html":{}}}],["generated",{"_index":1992,"title":{},"body":{"index.html":{}}}],["get(formgroupdirective",{"_index":767,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["get(key",{"_index":1594,"title":{},"body":{"injectables/StorageService.html":{}}}],["getallblogcategories",{"_index":370,"title":{},"body":{"injectables/BlogService.html":{}}}],["getallblogcategorieseffects",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["getallblogs",{"_index":371,"title":{},"body":{"injectables/BlogService.html":{}}}],["getallblogs(query",{"_index":388,"title":{},"body":{"injectables/BlogService.html":{}}}],["getallblogseffects",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["getallbrands",{"_index":1441,"title":{},"body":{"injectables/ProductService.html":{}}}],["getallcoupons",{"_index":688,"title":{},"body":{"injectables/CommonService.html":{}}}],["getallcouponseffects",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["getallenquiries",{"_index":689,"title":{},"body":{"injectables/CommonService.html":{}}}],["getallproductcategories",{"_index":1442,"title":{},"body":{"injectables/ProductService.html":{}}}],["getallproducts",{"_index":1443,"title":{},"body":{"injectables/ProductService.html":{}}}],["getallproducts(query",{"_index":1472,"title":{},"body":{"injectables/ProductService.html":{}}}],["getallproductseffects",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["getalltags",{"_index":1444,"title":{},"body":{"injectables/ProductService.html":{}}}],["getallusers",{"_index":1782,"title":{},"body":{"injectables/UserService.html":{}}}],["getallusers(query",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["getblogs",{"_index":418,"title":{},"body":{"components/BlogsComponent.html":{}}}],["getbrandseffects",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["getcategories",{"_index":235,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/CategoriesComponent.html":{}}}],["getcolors",{"_index":646,"title":{},"body":{"components/ColorsComponent.html":{},"injectables/ProductService.html":{}}}],["getcolorseffects",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["getcontrol(ngcontrol",{"_index":768,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["getcoupons",{"_index":817,"title":{},"body":{"components/CouponsComponent.html":{}}}],["getenquirieseffects",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["geterrorkey",{"_index":962,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["getorders",{"_index":848,"title":{},"body":{"injectables/CustomerService.html":{},"components/OrdersComponent.html":{}}}],["getorders(query",{"_index":850,"title":{},"body":{"injectables/CustomerService.html":{}}}],["getorderseffects",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["getproduct",{"_index":1312,"title":{},"body":{"components/ProductComponent.html":{}}}],["getproductbrands",{"_index":550,"title":{},"body":{"components/BrandsComponent.html":{}}}],["getproductcategorieseffects",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["getproducts",{"_index":1512,"title":{},"body":{"components/ProductsComponent.html":{}}}],["getsingleblog",{"_index":372,"title":{},"body":{"injectables/BlogService.html":{}}}],["getsingleblog(blogid",{"_index":392,"title":{},"body":{"injectables/BlogService.html":{}}}],["getsingleblogeffects",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["getsingleproduct",{"_index":1445,"title":{},"body":{"injectables/ProductService.html":{}}}],["getsingleproduct(productid",{"_index":1476,"title":{},"body":{"injectables/ProductService.html":{}}}],["getsingleproducteffects",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["getsingleuser",{"_index":1783,"title":{},"body":{"injectables/UserService.html":{}}}],["getsingleuser(userid",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{}}}],["getsingleusereffect",{"_index":1946,"title":{},"body":{"coverage.html":{}}}],["gettags",{"_index":1638,"title":{},"body":{"components/TagsComponent.html":{}}}],["gettagseffects",{"_index":1938,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":1988,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1703,"title":{},"body":{"components/UserComponent.html":{}}}],["getusers",{"_index":1811,"title":{},"body":{"components/UsersComponent.html":{}}}],["getuserseffect",{"_index":1947,"title":{},"body":{"coverage.html":{}}}],["gray",{"_index":1619,"title":{},"body":{"components/SubnavComponent.html":{}}}],["group",{"_index":952,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["group.component.html",{"_index":953,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.scss",{"_index":954,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts",{"_index":951,"title":{},"body":{"components/FormGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:12",{"_index":959,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:14",{"_index":960,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:16",{"_index":961,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group.component.ts:20",{"_index":963,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["group/form",{"_index":950,"title":{},"body":{"components/FormGroupComponent.html":{},"coverage.html":{}}}],["haserror",{"_index":956,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["height",{"_index":291,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["hence",{"_index":1088,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["here",{"_index":1089,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["hide",{"_index":1305,"title":{},"body":{"components/PasswordComponent.html":{}}}],["hideloading",{"_index":1246,"title":{},"body":{"injectables/LoaderService.html":{}}}],["home",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IData.html":{}}}],["home'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["home.component.html",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/blog",{"_index":1161,"title":{},"body":{"interfaces/IData.html":{}}}],["home/blogs",{"_index":1160,"title":{},"body":{"interfaces/IData.html":{}}}],["home/brands",{"_index":1156,"title":{},"body":{"interfaces/IData.html":{}}}],["home/categories",{"_index":1157,"title":{},"body":{"interfaces/IData.html":{}}}],["home/colors",{"_index":1158,"title":{},"body":{"interfaces/IData.html":{}}}],["home/coupons",{"_index":1159,"title":{},"body":{"interfaces/IData.html":{}}}],["home/orders",{"_index":1162,"title":{},"body":{"interfaces/IData.html":{}}}],["home/products",{"_index":1154,"title":{},"body":{"interfaces/IData.html":{}}}],["home/profile",{"_index":1152,"title":{},"body":{"interfaces/IData.html":{}}}],["home/tags",{"_index":1155,"title":{},"body":{"interfaces/IData.html":{}}}],["home/users",{"_index":1153,"title":{},"body":{"interfaces/IData.html":{}}}],["homecomponent",{"_index":121,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["hour",{"_index":1686,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["hover",{"_index":1616,"title":{},"body":{"components/SubnavComponent.html":{}}}],["html",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["htmlinputelement",{"_index":499,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["http",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["httpclient",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["httpparams",{"_index":395,"title":{},"body":{"injectables/BlogService.html":{},"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["iaddress",{"_index":1043,"title":{"interfaces/IAddress.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["iauthstorestate",{"_index":1070,"title":{"interfaces/IAuthStoreState.html":{}},"body":{"interfaces/IAuthStoreState.html":{},"coverage.html":{}}}],["ibackenderror",{"_index":1073,"title":{"interfaces/IBackendError.html":{}},"body":{"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBulkDeleteResponse.html":{},"coverage.html":{}}}],["ibackendsuccess",{"_index":199,"title":{"interfaces/IBackendSuccess.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBulkDeleteResponse.html":{},"coverage.html":{}}}],["iblog",{"_index":396,"title":{"interfaces/IBlog.html":{}},"body":{"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"coverage.html":{}}}],["iblogcategory",{"_index":248,"title":{"interfaces/IBlogCategory.html":{}},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"coverage.html":{}}}],["iblogstorestate",{"_index":1090,"title":{"interfaces/IBlogStoreState.html":{}},"body":{"interfaces/IBlogStoreState.html":{},"coverage.html":{}}}],["ibulkdeleteresponse",{"_index":1077,"title":{"interfaces/IBulkDeleteResponse.html":{}},"body":{"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBulkDeleteResponse.html":{},"coverage.html":{}}}],["icart",{"_index":1054,"title":{"interfaces/ICart.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["icartdata",{"_index":1097,"title":{"interfaces/ICartData.html":{}},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"coverage.html":{}}}],["icolor",{"_index":640,"title":{"interfaces/IColor.html":{}},"body":{"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"interfaces/IColor.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/ITag.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["icommonstorestate",{"_index":1105,"title":{"interfaces/ICommonStoreState.html":{}},"body":{"interfaces/ICommonStoreState.html":{},"coverage.html":{}}}],["icon",{"_index":1133,"title":{},"body":{"interfaces/IData.html":{}}}],["icondefinition",{"_index":1134,"title":{},"body":{"interfaces/IData.html":{}}}],["icons",{"_index":230,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"interfaces/IData.html":{},"components/LayoutComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["icontrolitem",{"_index":483,"title":{"interfaces/IControlItem.html":{}},"body":{"components/BlogsFormComponent.html":{},"interfaces/IControlItem.html":{},"components/ProductFormsComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["icoupon",{"_index":705,"title":{"interfaces/ICoupon.html":{}},"body":{"injectables/CommonService.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"coverage.html":{}}}],["icreateaddress",{"_index":1055,"title":{"interfaces/ICreateAddress.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["icreateblog",{"_index":376,"title":{"interfaces/ICreateBlog.html":{}},"body":{"injectables/BlogService.html":{},"components/BlogsFormComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"coverage.html":{}}}],["icreateblogcategory",{"_index":1082,"title":{"interfaces/ICreateBlogCategory.html":{}},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"coverage.html":{}}}],["icreatecart",{"_index":1096,"title":{"interfaces/ICreateCart.html":{}},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"coverage.html":{}}}],["icreatecommonproductsup",{"_index":379,"title":{"interfaces/ICreateCommonProductSup.html":{}},"body":{"injectables/BlogService.html":{},"interfaces/IColor.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/ITag.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["icreatecoupon",{"_index":692,"title":{"interfaces/ICreateCoupon.html":{}},"body":{"injectables/CommonService.html":{},"components/CouponsComponent.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"coverage.html":{}}}],["icreateenquiry",{"_index":916,"title":{},"body":{"injectables/EnquiryService.html":{}}}],["icreateproduct",{"_index":1114,"title":{"interfaces/ICreateProduct.html":{}},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["icreatereview",{"_index":1126,"title":{"interfaces/ICreateReview.html":{}},"body":{"interfaces/ICreateReview.html":{},"interfaces/IReview.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["icustomerstorestate",{"_index":1129,"title":{"interfaces/ICustomerStoreState.html":{}},"body":{"interfaces/ICustomerStoreState.html":{},"coverage.html":{}}}],["id",{"_index":254,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/InputComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductsComponent.html":{},"components/SelectComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["idata",{"_index":1131,"title":{"interfaces/IData.html":{}},"body":{"interfaces/IData.html":{},"coverage.html":{}}}],["ideletecatproductrequest",{"_index":1099,"title":{"interfaces/IDeleteCatProductRequest.html":{}},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"coverage.html":{}}}],["identifier",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["ienquiry",{"_index":706,"title":{"interfaces/IEnquiry.html":{}},"body":{"injectables/CommonService.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"coverage.html":{}}}],["ienquiryresponse",{"_index":918,"title":{},"body":{"injectables/EnquiryService.html":{}}}],["if(colors",{"_index":626,"title":{},"body":{"components/ColorComponent.html":{}}}],["iforgotpassword",{"_index":177,"title":{"interfaces/IForgotPassword.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"coverage.html":{}}}],["ilogin",{"_index":182,"title":{"interfaces/ILogin.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"coverage.html":{}}}],["image",{"_index":433,"title":{},"body":{"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateReview.html":{},"interfaces/IReview.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/ProductsComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["images",{"_index":512,"title":{},"body":{"components/BlogsFormComponent.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IUpdateCartRequest.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{}}}],["img",{"_index":1343,"title":{},"body":{"components/ProductComponent.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["inamedproductattr",{"_index":1119,"title":{"interfaces/INamedProductAttr.html":{}},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"coverage.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["inherited",{"_index":887,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["initalstate",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["initializeeditproduct",{"_index":1370,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["initialstate",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["inject",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["inject(formbuilder",{"_index":929,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["inject(httpclient",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(mat_dialog_data",{"_index":344,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["inject(store",{"_index":936,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["injectable",{"_index":165,"title":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/LoaderService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/LoaderService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/LoaderService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injector",{"_index":724,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["input",{"_index":497,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ColorComponent.html":{},"components/DateComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/PasswordComponent.html":{},"components/ProductFormsComponent.html":{},"components/RatingComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TextAreaComponent.html":{}}}],["input'},{'name",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["input('text",{"_index":1187,"title":{},"body":{"components/InputComponent.html":{}}}],["input(10",{"_index":641,"title":{},"body":{"components/ColorComponent.html":{}}}],["input(false",{"_index":1588,"title":{},"body":{"components/SelectComponent.html":{}}}],["input.component.html",{"_index":1181,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":1182,"title":{},"body":{"components/InputComponent.html":{}}}],["input.files",{"_index":1402,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["input.files.length",{"_index":1400,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["input.files[0",{"_index":502,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["input.required",{"_index":637,"title":{},"body":{"components/ColorComponent.html":{},"components/DateComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/RatingComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TextAreaComponent.html":{}}}],["input?.files",{"_index":1399,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["input?.files?.length",{"_index":500,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["inputcomponent",{"_index":123,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":631,"title":{},"body":{"components/ColorComponent.html":{},"components/DateComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/PasswordComponent.html":{},"components/RatingComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["inputtype",{"_index":1189,"title":{},"body":{"components/InputComponent.html":{},"miscellaneous/typealiases.html":{}}}],["instanceof",{"_index":1239,"title":{},"body":{"components/LoaderComponent.html":{}}}],["interface",{"_index":1042,"title":{"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"interfaces/User.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":1044,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"interfaces/User.html":{},"overview.html":{}}}],["intervals",{"_index":1692,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["intervals[i",{"_index":1694,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["iorderitemresponse",{"_index":1165,"title":{"interfaces/IOrderItemResponse.html":{}},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"coverage.html":{}}}],["iorderresponse",{"_index":854,"title":{"interfaces/IOrderResponse.html":{}},"body":{"injectables/CustomerService.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/OrdersComponent.html":{},"coverage.html":{}}}],["iproduct",{"_index":1120,"title":{"interfaces/IProduct.html":{}},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IProductStoreState.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["iproductbrand",{"_index":535,"title":{"interfaces/IProductBrand.html":{}},"body":{"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"interfaces/IColor.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/ITag.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["iproductcategory",{"_index":579,"title":{"interfaces/IProductCategory.html":{}},"body":{"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"interfaces/IColor.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/ITag.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["iproductstorestate",{"_index":1173,"title":{"interfaces/IProductStoreState.html":{}},"body":{"interfaces/IProductStoreState.html":{},"coverage.html":{}}}],["iregister",{"_index":1164,"title":{"interfaces/IRegister.html":{}},"body":{"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"coverage.html":{}}}],["iresetpassword",{"_index":187,"title":{"interfaces/IResetPassword.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"coverage.html":{}}}],["ireview",{"_index":1117,"title":{"interfaces/IReview.html":{}},"body":{"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IReview.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["isdisabled",{"_index":716,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["isfailed",{"_index":1107,"title":{},"body":{"interfaces/ICommonStoreState.html":{},"interfaces/IUserStoreState.html":{}}}],["isloading",{"_index":926,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUserStoreState.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["issuccess",{"_index":1108,"title":{},"body":{"interfaces/ICommonStoreState.html":{},"interfaces/IUserStoreState.html":{}}}],["itag",{"_index":1104,"title":{"interfaces/ITag.html":{}},"body":{"interfaces/IColor.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/ITag.html":{},"injectables/ProductService.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"coverage.html":{}}}],["item",{"_index":1555,"title":{},"body":{"components/RatingComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/UserComponent.html":{}}}],["item.color",{"_index":1745,"title":{},"body":{"components/UserComponent.html":{}}}],["item.id",{"_index":1751,"title":{},"body":{"components/UserComponent.html":{}}}],["item.label",{"_index":1589,"title":{},"body":{"components/SelectComponent.html":{}}}],["item.paidat",{"_index":1753,"title":{},"body":{"components/UserComponent.html":{}}}],["item.price",{"_index":1747,"title":{},"body":{"components/UserComponent.html":{}}}],["item.product.price",{"_index":1757,"title":{},"body":{"components/UserComponent.html":{}}}],["item.product.title",{"_index":1756,"title":{},"body":{"components/UserComponent.html":{}}}],["item.productid",{"_index":1744,"title":{},"body":{"components/UserComponent.html":{}}}],["item.quantity",{"_index":1746,"title":{},"body":{"components/UserComponent.html":{}}}],["item.totalprice",{"_index":1752,"title":{},"body":{"components/UserComponent.html":{}}}],["items",{"_index":610,"title":{},"body":{"components/ColorComponent.html":{},"components/SelectComponent.html":{}}}],["iupdatecartrequest",{"_index":1101,"title":{"interfaces/IUpdateCartRequest.html":{}},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"coverage.html":{}}}],["iupdateuser",{"_index":1065,"title":{"interfaces/IUpdateUser.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["iuser",{"_index":200,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/LayoutComponent.html":{},"components/ProductFormsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["iuserstorestate",{"_index":1176,"title":{"interfaces/IUserStoreState.html":{}},"body":{"interfaces/IUserStoreState.html":{},"coverage.html":{}}}],["json.parse(item",{"_index":1605,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(data",{"_index":1602,"title":{},"body":{"injectables/StorageService.html":{}}}],["jsonpipe",{"_index":413,"title":{},"body":{"components/BlogsComponent.html":{},"components/CouponFormsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/UsersComponent.html":{}}}],["justify",{"_index":1610,"title":{},"body":{"components/SubnavComponent.html":{}}}],["jwt",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["jwtinterceptor",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["key",{"_index":1596,"title":{},"body":{"injectables/StorageService.html":{}}}],["label",{"_index":519,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/DateComponent.html":{},"interfaces/IControlItem.html":{},"interfaces/IData.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/ProductFormsComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["labelcolor",{"_index":880,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/TextAreaComponent.html":{}}}],["last",{"_index":1822,"title":{},"body":{"components/UsersComponent.html":{}}}],["lastname",{"_index":1050,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateReview.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/User.html":{}}}],["layout",{"_index":1192,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["layout.component.html",{"_index":1196,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":1197,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layoutcomponent",{"_index":125,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["leftarrow",{"_index":1364,"title":{},"body":{"components/ProductComponent.html":{}}}],["legend",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["limit",{"_index":855,"title":{},"body":{"injectables/CustomerService.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{}}}],["list",{"_index":1327,"title":{},"body":{"components/ProductComponent.html":{}}}],["literal",{"_index":1081,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/ICart.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IUser.html":{},"miscellaneous/typealiases.html":{}}}],["lname",{"_index":1068,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{}}}],["loader",{"_index":1219,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["loader.service",{"_index":1233,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercomponent",{"_index":127,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["loaderinterceptor",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["loaderservice",{"_index":1223,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":1220,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["loggedguard",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["login",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["login(dto",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":129,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["logineffect",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["logo",{"_index":1214,"title":{},"body":{"components/LayoutComponent.html":{}}}],["logout",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutComponent.html":{}}}],["logouteffect",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["map",{"_index":494,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["map((c",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["markformgrouptouched",{"_index":342,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{},"coverage.html":{}}}],["markformgrouptouched(this.addform",{"_index":350,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["markformgrouptouched(this.form",{"_index":943,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mat",{"_index":282,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["mat_dialog_data",{"_index":341,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["matbuttonmodule",{"_index":224,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["matcardmodule",{"_index":223,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["match",{"_index":974,"title":{},"body":{"components/FormGroupComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["match.ts",{"_index":1870,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["matdatepickermodule",{"_index":876,"title":{},"body":{"components/DateComponent.html":{}}}],["matdialog",{"_index":239,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["matdialogmodule",{"_index":318,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{}}}],["matdialogref",{"_index":328,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["matgridlistmodule",{"_index":1307,"title":{},"body":{"components/ProductComponent.html":{}}}],["math.floor((+new",{"_index":1675,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["math.floor(seconds",{"_index":1693,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["matmenumodule",{"_index":1195,"title":{},"body":{"components/LayoutComponent.html":{}}}],["matpaginator",{"_index":270,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["matpaginatormodule",{"_index":220,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["matselectmodule",{"_index":1578,"title":{},"body":{"components/SelectComponent.html":{}}}],["matsidenavmodule",{"_index":1193,"title":{},"body":{"components/LayoutComponent.html":{}}}],["matsort",{"_index":268,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["matsortmodule",{"_index":221,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["mattabledatasource",{"_index":266,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["mattabledatasource(this.blogs",{"_index":450,"title":{},"body":{"components/BlogsComponent.html":{}}}],["mattabledatasource(this.brands",{"_index":572,"title":{},"body":{"components/BrandsComponent.html":{}}}],["mattabledatasource(this.colors",{"_index":670,"title":{},"body":{"components/ColorsComponent.html":{}}}],["mattabledatasource(this.coupons",{"_index":841,"title":{},"body":{"components/CouponsComponent.html":{}}}],["mattabledatasource(this.orders",{"_index":1291,"title":{},"body":{"components/OrdersComponent.html":{}}}],["mattabledatasource(this.products",{"_index":1531,"title":{},"body":{"components/ProductsComponent.html":{}}}],["mattabledatasource(this.tags",{"_index":1658,"title":{},"body":{"components/TagsComponent.html":{}}}],["mattabledatasource(this.users",{"_index":1830,"title":{},"body":{"components/UsersComponent.html":{}}}],["mattablemodule",{"_index":218,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["mattabsmodule",{"_index":1308,"title":{},"body":{"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["mattoolbarmodule",{"_index":1194,"title":{},"body":{"components/LayoutComponent.html":{}}}],["max",{"_index":858,"title":{},"body":{"injectables/CustomerService.html":{},"components/FormGroupComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"injectables/ProductService.html":{}}}],["maximum",{"_index":976,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["maxlength",{"_index":983,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["message",{"_index":1075,"title":{},"body":{"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBulkDeleteResponse.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["min",{"_index":857,"title":{},"body":{"injectables/CustomerService.html":{},"components/FormGroupComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"injectables/ProductService.html":{}}}],["mindate",{"_index":881,"title":{},"body":{"components/DateComponent.html":{}}}],["minimum",{"_index":978,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["minlength",{"_index":980,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["minute",{"_index":1688,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["miscellaneous",{"_index":1984,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mixture",{"_index":1574,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["mm/dd/yyyy",{"_index":906,"title":{},"body":{"components/DateComponent.html":{}}}],["mobile",{"_index":1056,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["modules",{"_index":1996,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["month",{"_index":1680,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["more",{"_index":984,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["multi",{"_index":875,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["multiple",{"_index":1581,"title":{},"body":{"components/SelectComponent.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IColor.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IEnquiry.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/ITag.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["names",{"_index":1405,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["navdata",{"_index":1149,"title":{},"body":{"interfaces/IData.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["new",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["ng_value_accessor",{"_index":873,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["ngcontrol",{"_index":752,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["ngcontrol.constructor",{"_index":763,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["ngondestroy",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["ngrx",{"_index":1086,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["ngrx/effects",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["ngstyle",{"_index":877,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/TextAreaComponent.html":{},"components/UsersComponent.html":{}}}],["ngx",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":492,"title":{},"body":{"components/BlogsFormComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/TextAreaComponent.html":{}}}],["num",{"_index":1547,"title":{},"body":{"components/RatingComponent.html":{}}}],["number",{"_index":1053,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IReview.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/RatingComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["number(data.discount",{"_index":808,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["obj",{"_index":399,"title":{},"body":{"injectables/BlogService.html":{},"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["obj.available",{"_index":1488,"title":{},"body":{"injectables/ProductService.html":{}}}],["obj.brand",{"_index":1492,"title":{},"body":{"injectables/ProductService.html":{}}}],["obj.cat",{"_index":401,"title":{},"body":{"injectables/BlogService.html":{},"injectables/ProductService.html":{}}}],["obj.color",{"_index":1490,"title":{},"body":{"injectables/ProductService.html":{}}}],["obj.email",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["obj.fname",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["obj.limit",{"_index":861,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/UserService.html":{}}}],["obj.lname",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["obj.max",{"_index":863,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{}}}],["obj.min",{"_index":865,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{}}}],["obj.mobile",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["obj.page",{"_index":859,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/UserService.html":{}}}],["obj.tag",{"_index":1494,"title":{},"body":{"injectables/ProductService.html":{}}}],["object",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["object.assign",{"_index":518,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["object.keys(this.control().errors",{"_index":968,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["observable",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["ondeleteblog",{"_index":471,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["ondeleteblogcategory",{"_index":323,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["ondeletecolor",{"_index":673,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["ondeletecoupon",{"_index":787,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["ondeleteproduct",{"_index":1371,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["ondeleteproductbrand",{"_index":529,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["ondeleteproductcategory",{"_index":597,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["ondeletetag",{"_index":1628,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["ondeleteuser",{"_index":1761,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["one",{"_index":1620,"title":{},"body":{"components/SubnavComponent.html":{}}}],["oneditproduct",{"_index":1372,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["onedituser",{"_index":1762,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["onselectcolor",{"_index":630,"title":{},"body":{"components/ColorComponent.html":{}}}],["onselectcolor(e",{"_index":635,"title":{},"body":{"components/ColorComponent.html":{}}}],["onselectcolorchange",{"_index":628,"title":{},"body":{"components/ColorComponent.html":{}}}],["onselectfile",{"_index":472,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["onselectfile(e",{"_index":478,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["onselectfiles",{"_index":1373,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["onselectfiles(e",{"_index":1380,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["opendeletedialog",{"_index":236,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["opendeletedialog(blog",{"_index":425,"title":{},"body":{"components/BlogsComponent.html":{}}}],["opendeletedialog(brand",{"_index":556,"title":{},"body":{"components/BrandsComponent.html":{}}}],["opendeletedialog(category",{"_index":247,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/CategoriesComponent.html":{}}}],["opendeletedialog(color",{"_index":652,"title":{},"body":{"components/ColorsComponent.html":{}}}],["opendeletedialog(coupon",{"_index":823,"title":{},"body":{"components/CouponsComponent.html":{}}}],["opendeletedialog(order",{"_index":1276,"title":{},"body":{"components/OrdersComponent.html":{}}}],["opendeletedialog(product",{"_index":1320,"title":{},"body":{"components/ProductComponent.html":{},"components/ProductsComponent.html":{}}}],["opendeletedialog(tag",{"_index":1644,"title":{},"body":{"components/TagsComponent.html":{}}}],["opendeletedialog(user",{"_index":1708,"title":{},"body":{"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["opendialog",{"_index":237,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{}}}],["openeditdialog",{"_index":419,"title":{},"body":{"components/BlogsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["openeditdialog(blog",{"_index":428,"title":{},"body":{"components/BlogsComponent.html":{}}}],["openeditdialog(order",{"_index":1279,"title":{},"body":{"components/OrdersComponent.html":{}}}],["openeditdialog(product",{"_index":1520,"title":{},"body":{"components/ProductsComponent.html":{}}}],["openeditdialog(user",{"_index":1710,"title":{},"body":{"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["openupdateform",{"_index":1313,"title":{},"body":{"components/ProductComponent.html":{}}}],["openupdateform(product",{"_index":1322,"title":{},"body":{"components/ProductComponent.html":{}}}],["optional",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/HomeComponent.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/IProduct.html":{},"interfaces/IRegister.html":{},"interfaces/IReview.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["order",{"_index":1278,"title":{},"body":{"components/OrdersComponent.html":{}}}],["orderid",{"_index":1167,"title":{},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{}}}],["orderitems",{"_index":1171,"title":{},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{}}}],["orderquerytype",{"_index":851,"title":{},"body":{"injectables/CustomerService.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"miscellaneous/typealiases.html":{}}}],["orders",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/OrdersComponent.html":{}}}],["orders'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["orders.component.html",{"_index":1269,"title":{},"body":{"components/OrdersComponent.html":{}}}],["orders.component.scss",{"_index":1270,"title":{},"body":{"components/OrdersComponent.html":{}}}],["orders.ordersplaced",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["orders.revenue",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["orderscomponent",{"_index":131,"title":{"components/OrdersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["ordersplaced",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":1535,"title":{},"body":{"components/ProductsComponent.html":{}}}],["output",{"_index":639,"title":{},"body":{"components/ColorComponent.html":{}}}],["outputs",{"_index":632,"title":{},"body":{"components/ColorComponent.html":{}}}],["overview",{"_index":1997,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1417,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["p.brand.id",{"_index":1419,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["p.category.id",{"_index":1420,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["p.desc",{"_index":1421,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["p.price",{"_index":1422,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["p.quantity",{"_index":1423,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["p.title",{"_index":1424,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["package",{"_index":1954,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":620,"title":{},"body":{"components/ColorComponent.html":{},"components/SubnavComponent.html":{}}}],["page",{"_index":856,"title":{},"body":{"injectables/CustomerService.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{}}}],["paginator",{"_index":231,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["paid",{"_index":1749,"title":{},"body":{"components/UserComponent.html":{}}}],["paidat",{"_index":1168,"title":{},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{}}}],["paramenters",{"_index":1084,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["parameters",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["params",{"_index":403,"title":{},"body":{"injectables/BlogService.html":{},"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["partial",{"_index":1479,"title":{},"body":{"injectables/ProductService.html":{}}}],["password",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/PasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/typealiases.html":{}}}],["password'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["password.component.html",{"_index":922,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":923,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":921,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:29",{"_index":930,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1559,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":937,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":935,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":928,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1567,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":934,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1568,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:43",{"_index":925,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1563,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":1566,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1561,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:67",{"_index":1562,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:83",{"_index":1560,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/${token",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/forgot",{"_index":920,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":1557,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordcomponent",{"_index":133,"title":{"components/PasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["passwordmatchvalidator",{"_index":1565,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwords",{"_index":972,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["passwordtype",{"_index":1300,"title":{},"body":{"components/PasswordComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pattern",{"_index":985,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["patternerror",{"_index":955,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["pipe",{"_index":775,"title":{"pipes/TimesincePipe.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"components/LoaderComponent.html":{},"components/ProductComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(map((data",{"_index":486,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["pipes",{"_index":1667,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["pipetransform",{"_index":1673,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["placed",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["placeholder",{"_index":882,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["please",{"_index":947,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["plural",{"_index":1697,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["pointer",{"_index":625,"title":{},"body":{"components/ColorComponent.html":{}}}],["price",{"_index":1063,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/OrdersComponent.html":{},"components/ProductFormsComponent.html":{},"components/UserComponent.html":{}}}],["private",{"_index":234,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["product",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["product'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["product.brand.name",{"_index":1349,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.category.name",{"_index":1350,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.component.html",{"_index":1310,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.component.scss",{"_index":1311,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.images",{"_index":1344,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.price",{"_index":1346,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.quantity",{"_index":1353,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.reviews",{"_index":1357,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.reviews?.length",{"_index":1348,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.sold",{"_index":1354,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.tags",{"_index":1351,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.title",{"_index":1345,"title":{},"body":{"components/ProductComponent.html":{}}}],["product.totalrating",{"_index":1347,"title":{},"body":{"components/ProductComponent.html":{}}}],["productactions",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/HomeComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"coverage.html":{}}}],["productactions.createbrand",{"_index":541,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["productactions.createcolor",{"_index":676,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["productactions.createproductcategory",{"_index":600,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["productactions.createtag",{"_index":1631,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["productactions.deletebrand",{"_index":542,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["productactions.deletecolor",{"_index":677,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["productactions.deleteproduct",{"_index":1415,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["productactions.deleteproductcategory",{"_index":601,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["productactions.deletetag",{"_index":1632,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["productactions.getsingleproduct",{"_index":1336,"title":{},"body":{"components/ProductComponent.html":{}}}],["productcategory",{"_index":1175,"title":{},"body":{"interfaces/IProductStoreState.html":{}}}],["productcomponent",{"_index":134,"title":{"components/ProductComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["productfeature",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["productformscomponent",{"_index":136,"title":{"components/ProductFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["productid",{"_index":1062,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateReview.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IReview.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["productquerytype",{"_index":1125,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"injectables/ProductService.html":{},"miscellaneous/typealiases.html":{}}}],["products",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IData.html":{},"interfaces/IProductStoreState.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{}}}],["products'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["products.component.html",{"_index":1510,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.component.scss",{"_index":1511,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.total",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["products.unavailable",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["products/components/product",{"_index":1330,"title":{},"body":{"components/ProductComponent.html":{}}}],["productscomponent",{"_index":138,"title":{"components/ProductsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["productservice",{"_index":1430,"title":{"injectables/ProductService.html":{}},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["profile",{"_index":1151,"title":{},"body":{"interfaces/IData.html":{},"components/LayoutComponent.html":{}}}],["project",{"_index":1991,"title":{},"body":{"index.html":{}}}],["propagatetouched",{"_index":717,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"properties.html":{}}}],["provide",{"_index":872,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["providedin",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/LoaderService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["providenativedateadapter",{"_index":871,"title":{},"body":{"components/DateComponent.html":{}}}],["providers",{"_index":870,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["pwmatch",{"_index":971,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["quantity",{"_index":1094,"title":{},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IUpdateCartRequest.html":{},"components/ProductFormsComponent.html":{},"components/UserComponent.html":{}}}],["query",{"_index":391,"title":{},"body":{"injectables/BlogService.html":{},"injectables/CustomerService.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["query.cat",{"_index":402,"title":{},"body":{"injectables/BlogService.html":{}}}],["radio",{"_index":2018,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["radius",{"_index":623,"title":{},"body":{"components/ColorComponent.html":{}}}],["rating",{"_index":1537,"title":{},"body":{"components/RatingComponent.html":{}}}],["rating'},{'name",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["rating.component.html",{"_index":1538,"title":{},"body":{"components/RatingComponent.html":{}}}],["rating.component.scss",{"_index":1539,"title":{},"body":{"components/RatingComponent.html":{}}}],["ratingcomponent",{"_index":140,"title":{"components/RatingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["reactiveformsmodule",{"_index":317,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/DateComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"components/PasswordComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagFormsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserFormsComponent.html":{}}}],["reason",{"_index":1085,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["redirectafterloginsuccess",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["redirectafterlogoutsuccess",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["redirectafterrefreshsuccess",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["redirectafterresetsuccess",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["reduce((a",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["refresh",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutComponent.html":{}}}],["refreshaccesstoken",{"_index":1198,"title":{},"body":{"components/LayoutComponent.html":{}}}],["refreshtokeneffect",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["refused",{"_index":1087,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["regex",{"_index":801,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["regexerrors",{"_index":785,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["registerd",{"_index":948,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["registeronchange",{"_index":718,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["registeronchange(fn",{"_index":728,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["registerontouched",{"_index":719,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["registerontouched(fn",{"_index":733,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["regular",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":1592,"title":{},"body":{"injectables/StorageService.html":{}}}],["remove(key",{"_index":1597,"title":{},"body":{"injectables/StorageService.html":{}}}],["request",{"_index":353,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{}}}],["required",{"_index":513,"title":{},"body":{"components/BlogsFormComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/FormGroupComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/RatingComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["requiredtrue",{"_index":975,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["requires",{"_index":1404,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["res",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.filter((u",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.length",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{}}}],["reset",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["resetpassword",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(dto",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":142,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["resetpasswordeffect",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["resettoken",{"_index":1558,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["results",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"components/CouponFormsComponent.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{},"components/TagFormsComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["rev",{"_index":1356,"title":{},"body":{"components/ProductComponent.html":{}}}],["rev.comment",{"_index":1362,"title":{},"body":{"components/ProductComponent.html":{}}}],["rev.updatedat",{"_index":1360,"title":{},"body":{"components/ProductComponent.html":{}}}],["rev.user.firstname",{"_index":1358,"title":{},"body":{"components/ProductComponent.html":{}}}],["rev.user.lastname",{"_index":1359,"title":{},"body":{"components/ProductComponent.html":{}}}],["revenue",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["reviews",{"_index":1118,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/ProductComponent.html":{}}}],["rgba(255",{"_index":616,"title":{},"body":{"components/ColorComponent.html":{}}}],["role",{"_index":1059,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/UserComponent.html":{}}}],["roleguard",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CommonService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/LoaderService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":1083,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"components/ResetPasswordComponent.html":{}}}],["routeconfigloadend",{"_index":1231,"title":{},"body":{"components/LoaderComponent.html":{}}}],["routeconfigloadstart",{"_index":1232,"title":{},"body":{"components/LoaderComponent.html":{}}}],["router",{"_index":1224,"title":{},"body":{"components/LoaderComponent.html":{}}}],["routerlink",{"_index":217,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"interfaces/IData.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubnavComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["routeroutlet",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{}}}],["rxjs",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/subject",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["s",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{},"pipes/TimesincePipe.html":{}}}],["second",{"_index":1689,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["seconds",{"_index":1674,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["select",{"_index":523,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/SelectComponent.html":{}}}],["select'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["select(selectauthuser",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectblogcategories",{"_index":300,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsFormComponent.html":{}}}],["select(selectblogs",{"_index":448,"title":{},"body":{"components/BlogsComponent.html":{}}}],["select(selectbrands",{"_index":570,"title":{},"body":{"components/BrandsComponent.html":{},"components/ProductFormsComponent.html":{}}}],["select(selectcolors",{"_index":668,"title":{},"body":{"components/ColorsComponent.html":{},"components/ProductFormsComponent.html":{}}}],["select(selectcoupons",{"_index":838,"title":{},"body":{"components/CouponsComponent.html":{}}}],["select(selectdbusers",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["select(selectorders",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{}}}],["select(selectproductcategory",{"_index":594,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductFormsComponent.html":{}}}],["select(selectproducts",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["select(selecttags",{"_index":1386,"title":{},"body":{"components/ProductFormsComponent.html":{},"components/TagsComponent.html":{}}}],["select.component.html",{"_index":1579,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":1580,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectauthuser",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{}}}],["selectblogcategories",{"_index":276,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsFormComponent.html":{}}}],["selectblogs",{"_index":445,"title":{},"body":{"components/BlogsComponent.html":{}}}],["selectbrands",{"_index":566,"title":{},"body":{"components/BrandsComponent.html":{},"components/ProductFormsComponent.html":{}}}],["selectcolors",{"_index":662,"title":{},"body":{"components/ColorsComponent.html":{},"components/ProductFormsComponent.html":{}}}],["selectcomponent",{"_index":144,"title":{"components/SelectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["selectcoupons",{"_index":833,"title":{},"body":{"components/CouponsComponent.html":{}}}],["selectdbuser",{"_index":1714,"title":{},"body":{"components/UserComponent.html":{}}}],["selectdbusers",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["selectedfile",{"_index":469,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["selectedfiles",{"_index":1368,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["selectisloading",{"_index":940,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["selectorders",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{}}}],["selectproduct",{"_index":1328,"title":{},"body":{"components/ProductComponent.html":{}}}],["selectproductcategory",{"_index":589,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductFormsComponent.html":{}}}],["selectproducts",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["selecttags",{"_index":1393,"title":{},"body":{"components/ProductFormsComponent.html":{},"components/TagsComponent.html":{}}}],["service",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["sessionstorage.getitem(key",{"_index":1604,"title":{},"body":{"injectables/StorageService.html":{}}}],["sessionstorage.removeitem(key",{"_index":1606,"title":{},"body":{"injectables/StorageService.html":{}}}],["sessionstorage.setitem(key",{"_index":1601,"title":{},"body":{"injectables/StorageService.html":{}}}],["set",{"_index":1593,"title":{},"body":{"injectables/StorageService.html":{}}}],["set(key",{"_index":1599,"title":{},"body":{"injectables/StorageService.html":{}}}],["setdisabledstate",{"_index":720,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":735,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["setformcontrol",{"_index":721,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["shared/index",{"_index":938,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["show",{"_index":1304,"title":{},"body":{"components/PasswordComponent.html":{}}}],["showloading",{"_index":1247,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showstarrate",{"_index":1541,"title":{},"body":{"components/RatingComponent.html":{}}}],["showstarrate(num",{"_index":1545,"title":{},"body":{"components/RatingComponent.html":{}}}],["signal",{"_index":1206,"title":{},"body":{"components/LayoutComponent.html":{}}}],["singular",{"_index":1696,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["size",{"_index":629,"title":{},"body":{"components/ColorComponent.html":{},"components/RatingComponent.html":{}}}],["sizeprop",{"_index":1551,"title":{},"body":{"components/RatingComponent.html":{}}}],["skiploading",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["slice",{"_index":310,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["slicepipe",{"_index":222,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["sold",{"_index":1121,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/ProductComponent.html":{}}}],["solid",{"_index":1148,"title":{},"body":{"interfaces/IData.html":{},"components/RatingComponent.html":{},"dependencies.html":{}}}],["sort",{"_index":232,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["space",{"_index":1611,"title":{},"body":{"components/SubnavComponent.html":{}}}],["special",{"_index":1576,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/.../blog",{"_index":2005,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../blogs",{"_index":2006,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../brand",{"_index":2007,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../categories",{"_index":2008,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../colors",{"_index":2009,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../controls.type.ts",{"_index":2014,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../coupon",{"_index":2013,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../index.ts",{"_index":2004,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../password.component.ts",{"_index":2015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../passwords",{"_index":1986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product",{"_index":2010,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tag",{"_index":2011,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user",{"_index":2012,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["src/app/core/guards/logged.guard.ts",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["src/app/core/guards/role.guard.ts",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["src/app/core/interceptors/jwt.interceptor.ts",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:15",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:17",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:23",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:27",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:32",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/blog.service.ts",{"_index":365,"title":{},"body":{"injectables/BlogService.html":{},"coverage.html":{}}}],["src/app/core/services/blog.service.ts:17",{"_index":394,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:19",{"_index":374,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:24",{"_index":390,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:38",{"_index":393,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:42",{"_index":382,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:46",{"_index":377,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:51",{"_index":387,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:55",{"_index":385,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/blog.service.ts:59",{"_index":380,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/core/services/common.service.ts",{"_index":682,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/core/services/common.service.ts:10",{"_index":690,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:15",{"_index":700,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:19",{"_index":693,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:23",{"_index":695,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:28",{"_index":701,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:32",{"_index":698,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:9",{"_index":704,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/customer.service.ts",{"_index":847,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/app/core/services/customer.service.ts:11",{"_index":849,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/core/services/customer.service.ts:15",{"_index":852,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/core/services/enquiry.service.ts",{"_index":912,"title":{},"body":{"injectables/EnquiryService.html":{},"coverage.html":{}}}],["src/app/core/services/enquiry.service.ts:11",{"_index":914,"title":{},"body":{"injectables/EnquiryService.html":{}}}],["src/app/core/services/enquiry.service.ts:15",{"_index":917,"title":{},"body":{"injectables/EnquiryService.html":{}}}],["src/app/core/services/product.service.ts",{"_index":1431,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/core/services/product.service.ts:104",{"_index":1471,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:107",{"_index":1456,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:112",{"_index":1466,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:117",{"_index":1470,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:120",{"_index":1454,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:123",{"_index":1464,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:20",{"_index":1486,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:22",{"_index":1483,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:24",{"_index":1484,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:26",{"_index":1485,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:28",{"_index":1448,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:32",{"_index":1473,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:57",{"_index":1477,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:61",{"_index":1482,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:65",{"_index":1452,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:69",{"_index":1480,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:76",{"_index":1462,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:81",{"_index":1474,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:84",{"_index":1458,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:87",{"_index":1468,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:93",{"_index":1475,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:96",{"_index":1450,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/product.service.ts:99",{"_index":1460,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1780,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:10",{"_index":1785,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:14",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:38",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:42",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:46",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:50",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/layout/layout/data.ts",{"_index":1132,"title":{},"body":{"interfaces/IData.html":{},"coverage.html":{}}}],["src/app/layout/layout/layout.component.ts",{"_index":1191,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout/layout.component.ts:32",{"_index":1199,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout/layout.component.ts:35",{"_index":1203,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout/layout.component.ts:37",{"_index":1202,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout/layout.component.ts:39",{"_index":1205,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout/layout.component.ts:42",{"_index":1200,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout/layout.component.ts:46",{"_index":1201,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/subnav/subnav.component.ts",{"_index":1607,"title":{},"body":{"components/SubnavComponent.html":{},"coverage.html":{}}}],["src/app/layout/subnav/subnav.component.ts:27",{"_index":1622,"title":{},"body":{"components/SubnavComponent.html":{}}}],["src/app/layout/subnav/subnav.component.ts:30",{"_index":1624,"title":{},"body":{"components/SubnavComponent.html":{}}}],["src/app/layout/subnav/subnav.component.ts:32",{"_index":1623,"title":{},"body":{"components/SubnavComponent.html":{}}}],["src/app/models/api/index.ts",{"_index":1074,"title":{},"body":{"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBulkDeleteResponse.html":{},"coverage.html":{}}}],["src/app/models/auth/index.ts",{"_index":1163,"title":{},"body":{"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"coverage.html":{}}}],["src/app/models/blogs/index.ts",{"_index":1079,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/common/index.ts",{"_index":1111,"title":{},"body":{"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{},"coverage.html":{}}}],["src/app/models/controls/index.ts",{"_index":1109,"title":{},"body":{"interfaces/IControlItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/customer/cart/index.ts",{"_index":1093,"title":{},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"coverage.html":{}}}],["src/app/models/customer/order/index.ts",{"_index":1166,"title":{},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/products/product",{"_index":1102,"title":{},"body":{"interfaces/IColor.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/ITag.html":{},"coverage.html":{}}}],["src/app/models/products/product/index.ts",{"_index":1115,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/products/reviews/index.ts",{"_index":1127,"title":{},"body":{"interfaces/ICreateReview.html":{},"interfaces/IReview.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/models/user/index.ts",{"_index":1045,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/auth/auth.routes.ts",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/auth/forgot",{"_index":919,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/auth/login/login.component.ts",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/auth/login/login.component.ts:36",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:38",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:40",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:42",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:46",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:51",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/reset",{"_index":1556,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/auth/validations/passwords",{"_index":1869,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/pages/blog",{"_index":214,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/blogs/blogs.component.ts",{"_index":412,"title":{},"body":{"components/BlogsComponent.html":{},"coverage.html":{}}}],["src/app/pages/blogs/blogs.component.ts:111",{"_index":426,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:123",{"_index":423,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:39",{"_index":420,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:42",{"_index":432,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:44",{"_index":440,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:46",{"_index":441,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:49",{"_index":438,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:59",{"_index":431,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:61",{"_index":430,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:63",{"_index":439,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:65",{"_index":424,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:69",{"_index":421,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:73",{"_index":422,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:88",{"_index":427,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/blogs.component.ts:99",{"_index":429,"title":{},"body":{"components/BlogsComponent.html":{}}}],["src/app/pages/blogs/components/blogs",{"_index":464,"title":{},"body":{"components/BlogsFormComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/brands/brands.component.ts",{"_index":546,"title":{},"body":{"components/BrandsComponent.html":{},"coverage.html":{}}}],["src/app/pages/brands/brands.component.ts:101",{"_index":554,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:37",{"_index":551,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:40",{"_index":563,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:42",{"_index":561,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:44",{"_index":564,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:46",{"_index":565,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:48",{"_index":559,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:51",{"_index":562,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:53",{"_index":560,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:55",{"_index":555,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:59",{"_index":552,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:63",{"_index":558,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:74",{"_index":557,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:86",{"_index":553,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/components/brand",{"_index":525,"title":{},"body":{"components/BrandFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/categories/categories.component.ts",{"_index":573,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/pages/categories/categories.component.ts:104",{"_index":577,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:38",{"_index":574,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:41",{"_index":586,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:43",{"_index":584,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:45",{"_index":587,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:47",{"_index":588,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:49",{"_index":582,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:52",{"_index":585,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:54",{"_index":583,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:56",{"_index":578,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:60",{"_index":575,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:64",{"_index":581,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:75",{"_index":580,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:87",{"_index":576,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/components/categories",{"_index":595,"title":{},"body":{"components/CategoriesFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/colors/colors.component.ts",{"_index":643,"title":{},"body":{"components/ColorsComponent.html":{},"coverage.html":{}}}],["src/app/pages/colors/colors.component.ts:102",{"_index":650,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:38",{"_index":647,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:41",{"_index":659,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:43",{"_index":657,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:45",{"_index":660,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:47",{"_index":661,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:49",{"_index":655,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:52",{"_index":658,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:54",{"_index":656,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:56",{"_index":651,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:60",{"_index":648,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:64",{"_index":654,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:75",{"_index":653,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/colors.component.ts:87",{"_index":649,"title":{},"body":{"components/ColorsComponent.html":{}}}],["src/app/pages/colors/components/colors",{"_index":671,"title":{},"body":{"components/ColorsFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/common/coupons/components/coupon",{"_index":783,"title":{},"body":{"components/CouponFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts",{"_index":814,"title":{},"body":{"components/CouponsComponent.html":{},"coverage.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:110",{"_index":821,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:39",{"_index":818,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:42",{"_index":830,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:44",{"_index":828,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:46",{"_index":831,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:48",{"_index":832,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:50",{"_index":826,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:53",{"_index":829,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:62",{"_index":827,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:64",{"_index":822,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:68",{"_index":819,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:72",{"_index":825,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:83",{"_index":824,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/coupons/coupons.component.ts:95",{"_index":820,"title":{},"body":{"components/CouponsComponent.html":{}}}],["src/app/pages/common/enquiries/enquiries.component.ts",{"_index":907,"title":{},"body":{"components/EnquiriesComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:18",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:21",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:23",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:28",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:33",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:38",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:81",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/orders/orders.component.ts",{"_index":1268,"title":{},"body":{"components/OrdersComponent.html":{},"coverage.html":{}}}],["src/app/pages/orders/orders.component.ts:36",{"_index":1271,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:39",{"_index":1282,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:41",{"_index":1287,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:43",{"_index":1288,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:46",{"_index":1284,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:48",{"_index":1281,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:52",{"_index":1286,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:54",{"_index":1285,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:56",{"_index":1275,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:60",{"_index":1272,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:64",{"_index":1273,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:79",{"_index":1280,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:81",{"_index":1277,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:83",{"_index":1274,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/product/product.component.ts",{"_index":1306,"title":{},"body":{"components/ProductComponent.html":{},"coverage.html":{}}}],["src/app/pages/product/product.component.ts:35",{"_index":1316,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:42",{"_index":1324,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:44",{"_index":1325,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:46",{"_index":1319,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:50",{"_index":1317,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:70",{"_index":1323,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:82",{"_index":1321,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:94",{"_index":1318,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/products/components/product",{"_index":1366,"title":{},"body":{"components/ProductFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/products/products.component.ts",{"_index":1509,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{}}}],["src/app/pages/products/products.component.ts:102",{"_index":1521,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:114",{"_index":1518,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:126",{"_index":1516,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:40",{"_index":1513,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:43",{"_index":1523,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:45",{"_index":1526,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:47",{"_index":1528,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:50",{"_index":1524,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:60",{"_index":1522,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:64",{"_index":1527,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:66",{"_index":1525,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:68",{"_index":1517,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:72",{"_index":1514,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:76",{"_index":1515,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:91",{"_index":1519,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/tags/components/tag",{"_index":1625,"title":{},"body":{"components/TagFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/tags/tags.component.ts",{"_index":1635,"title":{},"body":{"components/TagsComponent.html":{},"coverage.html":{}}}],["src/app/pages/tags/tags.component.ts:101",{"_index":1642,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:37",{"_index":1639,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:40",{"_index":1650,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:42",{"_index":1648,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:44",{"_index":1651,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:46",{"_index":1652,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:48",{"_index":1653,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:51",{"_index":1649,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:53",{"_index":1647,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:55",{"_index":1643,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:59",{"_index":1640,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:63",{"_index":1646,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:74",{"_index":1645,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tags/tags.component.ts:86",{"_index":1641,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/user/user.component.ts",{"_index":1700,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/pages/user/user.component.ts:33",{"_index":1704,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:40",{"_index":1712,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:42",{"_index":1713,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:44",{"_index":1707,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:48",{"_index":1705,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:69",{"_index":1711,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:81",{"_index":1709,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:92",{"_index":1706,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/users/components/user",{"_index":1760,"title":{},"body":{"components/UserFormsComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/users/users.component.ts",{"_index":1808,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/pages/users/users.component.ts:103",{"_index":1817,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:115",{"_index":1815,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:41",{"_index":1812,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:44",{"_index":1820,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:46",{"_index":1825,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:48",{"_index":1826,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:51",{"_index":1823,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:62",{"_index":1819,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:64",{"_index":1827,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:66",{"_index":1824,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:68",{"_index":1816,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:72",{"_index":1813,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:76",{"_index":1814,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:91",{"_index":1818,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/shared/controls/date/date.component.ts",{"_index":868,"title":{},"body":{"components/DateComponent.html":{},"coverage.html":{}}}],["src/app/shared/controls/date/date.component.ts:21",{"_index":895,"title":{},"body":{"components/DateComponent.html":{}}}],["src/app/shared/controls/date/date.component.ts:23",{"_index":886,"title":{},"body":{"components/DateComponent.html":{}}}],["src/app/shared/controls/date/date.component.ts:25",{"_index":884,"title":{},"body":{"components/DateComponent.html":{}}}],["src/app/shared/controls/date/date.component.ts:27",{"_index":883,"title":{},"body":{"components/DateComponent.html":{}}}],["src/app/shared/controls/date/date.component.ts:29",{"_index":885,"title":{},"body":{"components/DateComponent.html":{}}}],["src/app/shared/controls/directives/control",{"_index":712,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"coverage.html":{}}}],["src/app/shared/controls/form",{"_index":949,"title":{},"body":{"components/FormGroupComponent.html":{},"coverage.html":{}}}],["src/app/shared/controls/input/input.component.ts",{"_index":1180,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/shared/controls/input/input.component.ts:18",{"_index":1186,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/controls/input/input.component.ts:20",{"_index":1184,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/controls/input/input.component.ts:22",{"_index":1183,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/controls/input/input.component.ts:24",{"_index":1188,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/controls/input/input.component.ts:26",{"_index":1185,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/controls/password/password.component.ts",{"_index":1294,"title":{},"body":{"components/PasswordComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/controls/password/password.component.ts:19",{"_index":1298,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/shared/controls/password/password.component.ts:21",{"_index":1297,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/shared/controls/password/password.component.ts:23",{"_index":1296,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/shared/controls/password/password.component.ts:25",{"_index":1301,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/shared/controls/password/password.component.ts:27",{"_index":1299,"title":{},"body":{"components/PasswordComponent.html":{}}}],["src/app/shared/controls/select/select.component.ts",{"_index":1577,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["src/app/shared/controls/select/select.component.ts:19",{"_index":1585,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/shared/controls/select/select.component.ts:21",{"_index":1584,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/shared/controls/select/select.component.ts:23",{"_index":1583,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/shared/controls/select/select.component.ts:25",{"_index":1582,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/shared/controls/select/select.component.ts:27",{"_index":1586,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/shared/controls/textarea/textarea.component.ts",{"_index":1659,"title":{},"body":{"components/TextAreaComponent.html":{},"coverage.html":{}}}],["src/app/shared/controls/textarea/textarea.component.ts:18",{"_index":1666,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["src/app/shared/controls/textarea/textarea.component.ts:20",{"_index":1664,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["src/app/shared/controls/textarea/textarea.component.ts:22",{"_index":1663,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["src/app/shared/controls/textarea/textarea.component.ts:24",{"_index":1665,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["src/app/shared/controls/types/controls.type.ts",{"_index":2016,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/shared/icons/index.ts",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/indicators/loader/loader.component.ts",{"_index":1218,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/indicators/loader/loader.component.ts:25",{"_index":1229,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/indicators/loader/loader.component.ts:27",{"_index":1228,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/indicators/loader/loader.component.ts:30",{"_index":1225,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/indicators/loader/loader.component.ts:36",{"_index":1227,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/indicators/loader/loader.component.ts:54",{"_index":1226,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/indicators/loader/loader.interceptor.ts",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/indicators/loader/loader.service.ts",{"_index":1244,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/shared/indicators/loader/loader.service.ts:10",{"_index":1253,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/shared/indicators/loader/loader.service.ts:12",{"_index":1249,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/shared/indicators/loader/loader.service.ts:16",{"_index":1248,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/shared/indicators/loader/loader.service.ts:8",{"_index":1251,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/shared/pipes/timesince.pipe.ts",{"_index":1668,"title":{},"body":{"pipes/TimesincePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/timesince.pipe.ts:8",{"_index":1672,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["src/app/shared/services/storage.service.ts",{"_index":1591,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/shared/services/storage.service.ts:15",{"_index":1595,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:25",{"_index":1598,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:7",{"_index":1600,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/ui/color/color.component.ts",{"_index":605,"title":{},"body":{"components/ColorComponent.html":{},"coverage.html":{}}}],["src/app/shared/ui/color/color.component.ts:43",{"_index":638,"title":{},"body":{"components/ColorComponent.html":{}}}],["src/app/shared/ui/color/color.component.ts:45",{"_index":633,"title":{},"body":{"components/ColorComponent.html":{}}}],["src/app/shared/ui/color/color.component.ts:47",{"_index":634,"title":{},"body":{"components/ColorComponent.html":{}}}],["src/app/shared/ui/color/color.component.ts:49",{"_index":636,"title":{},"body":{"components/ColorComponent.html":{}}}],["src/app/shared/ui/color/rating/rating.component.ts",{"_index":1536,"title":{},"body":{"components/RatingComponent.html":{},"coverage.html":{}}}],["src/app/shared/ui/color/rating/rating.component.ts:15",{"_index":1549,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/shared/ui/color/rating/rating.component.ts:17",{"_index":1544,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/shared/ui/color/rating/rating.component.ts:19",{"_index":1543,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/shared/ui/color/rating/rating.component.ts:21",{"_index":1548,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/shared/ui/color/rating/rating.component.ts:25",{"_index":1546,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/shared/utils/form.ts",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/utils/regex.ts",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["src/app/store/auth/auth.actions.ts",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["src/app/store/auth/auth.effects.ts",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["src/app/store/auth/auth.models.ts",{"_index":1071,"title":{},"body":{"interfaces/IAuthStoreState.html":{},"coverage.html":{}}}],["src/app/store/auth/auth.reducers.ts",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["src/app/store/blogs/blogs.actions.ts",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["src/app/store/blogs/blogs.effects.ts",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["src/app/store/blogs/blogs.models.ts",{"_index":1091,"title":{},"body":{"interfaces/IBlogStoreState.html":{},"coverage.html":{}}}],["src/app/store/blogs/blogs.reducers.ts",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["src/app/store/common/common.actions.ts",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["src/app/store/common/common.effects.ts",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["src/app/store/common/common.models.ts",{"_index":1106,"title":{},"body":{"interfaces/ICommonStoreState.html":{},"coverage.html":{}}}],["src/app/store/common/common.reducers.ts",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["src/app/store/customer/customer.actions.ts",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["src/app/store/customer/customer.effects.ts",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["src/app/store/customer/customer.models.ts",{"_index":1130,"title":{},"body":{"interfaces/ICustomerStoreState.html":{},"coverage.html":{}}}],["src/app/store/customer/customer.reducers.ts",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["src/app/store/products/products.actions.ts",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["src/app/store/products/products.effects.ts",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["src/app/store/products/products.model.ts",{"_index":1174,"title":{},"body":{"interfaces/IProductStoreState.html":{},"coverage.html":{}}}],["src/app/store/products/products.reducers.ts",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["src/app/store/user/user.actions.ts",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["src/app/store/user/user.effects.ts",{"_index":1943,"title":{},"body":{"coverage.html":{}}}],["src/app/store/user/user.model.ts",{"_index":1177,"title":{},"body":{"interfaces/IUserStoreState.html":{},"coverage.html":{}}}],["src/app/store/user/user.reducers.ts",{"_index":1949,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.development.ts",{"_index":1951,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.ts",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["star",{"_index":1128,"title":{},"body":{"interfaces/ICreateReview.html":{},"interfaces/IReview.html":{},"interfaces/User.html":{}}}],["stararray",{"_index":1542,"title":{},"body":{"components/RatingComponent.html":{}}}],["stars",{"_index":1540,"title":{},"body":{"components/RatingComponent.html":{}}}],["started",{"_index":1989,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":754,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["startwith(this.control.value",{"_index":777,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["state",{"_index":1051,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/UserComponent.html":{}}}],["statements",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":1076,"title":{},"body":{"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBulkDeleteResponse.html":{}}}],["stock",{"_index":1534,"title":{},"body":{"components/ProductsComponent.html":{}}}],["storageservice",{"_index":1590,"title":{"injectables/StorageService.html":{}},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["store",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["store/auth",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["store/blogs",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["store/products",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"injectables/CommonService.html":{},"components/CouponsComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/OrdersComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{},"components/TagsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/typealiases.html":{}}}],["string(d.get('token",{"_index":1571,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["string(data.categoryid",{"_index":510,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["string(data.code",{"_index":807,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["string(data.desc",{"_index":508,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["string(data.get('id",{"_index":1337,"title":{},"body":{"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["string(data.title",{"_index":506,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["string(query.available",{"_index":1489,"title":{},"body":{"injectables/ProductService.html":{}}}],["string(query.brand",{"_index":1493,"title":{},"body":{"injectables/ProductService.html":{}}}],["string(query.cat",{"_index":1487,"title":{},"body":{"injectables/ProductService.html":{}}}],["string(query.color",{"_index":1491,"title":{},"body":{"injectables/ProductService.html":{}}}],["string(query.email",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["string(query.fname",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["string(query.limit",{"_index":862,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/UserService.html":{}}}],["string(query.lname",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["string(query.max",{"_index":864,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{}}}],["string(query.min",{"_index":866,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{}}}],["string(query.mobile",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["string(query.page",{"_index":860,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/UserService.html":{}}}],["string(query.tag",{"_index":1495,"title":{},"body":{"injectables/ProductService.html":{}}}],["string(this.addform.getrawvalue().name",{"_index":354,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["styles",{"_index":604,"title":{},"body":{"components/ColorComponent.html":{},"components/SubnavComponent.html":{}}}],["styleurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["subdata",{"_index":1621,"title":{},"body":{"components/SubnavComponent.html":{}}}],["subject",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["submit",{"_index":924,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subnav",{"_index":1608,"title":{},"body":{"components/SubnavComponent.html":{}}}],["subnav'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["subnavcomponent",{"_index":146,"title":{"components/SubnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["subscribe",{"_index":780,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/LoaderComponent.html":{}}}],["subscribe((d",{"_index":301,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe((data",{"_index":839,"title":{},"body":{"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["subscribe((res",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe((user",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["supp/index.ts",{"_index":1103,"title":{},"body":{"interfaces/IColor.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/ITag.html":{},"coverage.html":{}}}],["sure",{"_index":359,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["svg",{"_index":1136,"title":{},"body":{"interfaces/IData.html":{},"components/RatingComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":762,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/FormGroupComponent.html":{}}}],["switchmap",{"_index":1329,"title":{},"body":{"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["switchmap((data",{"_index":1335,"title":{},"body":{"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["t",{"_index":729,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["table",{"_index":283,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1953,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["tag.name",{"_index":1352,"title":{},"body":{"components/ProductComponent.html":{}}}],["tagformscomponent",{"_index":148,"title":{"components/TagFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tagid",{"_index":1469,"title":{},"body":{"injectables/ProductService.html":{},"components/TagFormsComponent.html":{}}}],["tags",{"_index":1116,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/IData.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IProductStoreState.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/TagsComponent.html":{}}}],["tags'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["tags.component.html",{"_index":1636,"title":{},"body":{"components/TagsComponent.html":{}}}],["tags.component.scss",{"_index":1637,"title":{},"body":{"components/TagsComponent.html":{}}}],["tags.push(d",{"_index":1414,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["tags_url",{"_index":1434,"title":{},"body":{"injectables/ProductService.html":{}}}],["tagscomponent",{"_index":150,"title":{"components/TagsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["takeuntil",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["takeuntil(this.destroy",{"_index":776,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/LoaderComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["tap",{"_index":755,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/LoaderComponent.html":{}}}],["tap((event",{"_index":1238,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tap((val",{"_index":778,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["text",{"_index":1302,"title":{},"body":{"components/PasswordComponent.html":{},"components/SubnavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["textarea",{"_index":1660,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textarea'},{'name",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["textarea.component.html",{"_index":1661,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textarea.component.scss",{"_index":1662,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textareacomponent",{"_index":152,"title":{"components/TextAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["this._loading.asobservable",{"_index":1252,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(false",{"_index":1256,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._loading.next(true",{"_index":1255,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.activatedroute.parammap",{"_index":1334,"title":{},"body":{"components/ProductComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserComponent.html":{}}}],["this.addform.getrawvalue",{"_index":503,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{}}}],["this.addform.invalid",{"_index":349,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["this.blogs",{"_index":449,"title":{},"body":{"components/BlogsComponent.html":{}}}],["this.brands",{"_index":571,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.categories",{"_index":303,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/CategoriesComponent.html":{}}}],["this.colors",{"_index":669,"title":{},"body":{"components/ColorsComponent.html":{}}}],["this.control",{"_index":765,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/FormGroupComponent.html":{}}}],["this.control().errors",{"_index":967,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.control().invalid",{"_index":965,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.control().touched",{"_index":966,"title":{},"body":{"components/FormGroupComponent.html":{}}}],["this.control?.hasvalidator(validators.required",{"_index":759,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.control?.setvalue(value",{"_index":772,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.control?.valuechanges",{"_index":774,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.coupons",{"_index":840,"title":{},"body":{"components/CouponsComponent.html":{}}}],["this.datasource",{"_index":304,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.filter",{"_index":286,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.paginator",{"_index":305,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.sort",{"_index":307,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["this.deleteblog",{"_index":496,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["this.deleteblog.id",{"_index":517,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["this.deleteblogcategory",{"_index":348,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["this.deleteblogcategory.id",{"_index":358,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["this.deletecolor",{"_index":675,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["this.deletecolor.id",{"_index":679,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["this.deletecoupon",{"_index":805,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["this.deletecoupon.id",{"_index":812,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["this.deleteproduct",{"_index":1397,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.deleteproduct.id",{"_index":1416,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.deleteproductbrand",{"_index":540,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["this.deleteproductbrand.id",{"_index":544,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["this.deleteproductcategory",{"_index":599,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["this.deleteproductcategory.id",{"_index":602,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["this.deletetag",{"_index":1630,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["this.deletetag.id",{"_index":1633,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["this.deleteuser",{"_index":1767,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["this.deleteuser.id",{"_index":1771,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["this.destroy$.complete",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["this.destroy$.next",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["this.destroy$.next(false",{"_index":1243,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.detectroutetransitions",{"_index":1236,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.dialog.open(blogcategoryformscomponent",{"_index":288,"title":{},"body":{"components/BlogCategoriesComponent.html":{}}}],["this.dialog.open(blogsformcomponent",{"_index":451,"title":{},"body":{"components/BlogsComponent.html":{}}}],["this.dialog.open(brandformscomponent",{"_index":569,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.dialog.open(categoriesformscomponent",{"_index":592,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.dialog.open(colorsformscomponent",{"_index":666,"title":{},"body":{"components/ColorsComponent.html":{}}}],["this.dialog.open(couponformscomponent",{"_index":836,"title":{},"body":{"components/CouponsComponent.html":{}}}],["this.dialog.open(productformscomponent",{"_index":1340,"title":{},"body":{"components/ProductComponent.html":{},"components/ProductsComponent.html":{}}}],["this.dialog.open(tagformscomponent",{"_index":1656,"title":{},"body":{"components/TagsComponent.html":{}}}],["this.dialog.open(userformscomponent",{"_index":1722,"title":{},"body":{"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["this.dialogdata.deleteblog",{"_index":495,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["this.dialogdata.deleteblogcategory",{"_index":347,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{}}}],["this.dialogdata.deletecolor",{"_index":674,"title":{},"body":{"components/ColorsFormsComponent.html":{}}}],["this.dialogdata.deletecoupon",{"_index":804,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["this.dialogdata.deleteproduct",{"_index":1396,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.dialogdata.deleteproductbrand",{"_index":539,"title":{},"body":{"components/BrandFormsComponent.html":{}}}],["this.dialogdata.deleteproductcategory",{"_index":598,"title":{},"body":{"components/CategoriesFormsComponent.html":{}}}],["this.dialogdata.deletetag",{"_index":1629,"title":{},"body":{"components/TagFormsComponent.html":{}}}],["this.dialogdata.deleteuser",{"_index":1766,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["this.dialogdata.editproduct",{"_index":1394,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.dialogdata.edituser",{"_index":1768,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["this.dialogdata.formtype",{"_index":346,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["this.dialogref.close",{"_index":355,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["this.editform.setvalue",{"_index":1418,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.editproduct",{"_index":1395,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.edituser",{"_index":1769,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["this.edituser.blocked",{"_index":1772,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["this.edituser.id",{"_index":1774,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["this.fb.group",{"_index":334,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{}}}],["this.fb.nonnullable.group",{"_index":931,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.form.getrawvalue",{"_index":945,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.form.getrawvalue().password",{"_index":1573,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.form.invalid",{"_index":942,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formtype",{"_index":345,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["this.getblogs",{"_index":446,"title":{},"body":{"components/BlogsComponent.html":{}}}],["this.getcategories",{"_index":285,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/CategoriesComponent.html":{}}}],["this.getcolors",{"_index":665,"title":{},"body":{"components/ColorsComponent.html":{}}}],["this.getcoupons",{"_index":835,"title":{},"body":{"components/CouponsComponent.html":{}}}],["this.getorders",{"_index":1290,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.getproduct",{"_index":1333,"title":{},"body":{"components/ProductComponent.html":{}}}],["this.getproductbrands",{"_index":568,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.getproducts",{"_index":1530,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.gettags",{"_index":1655,"title":{},"body":{"components/TagsComponent.html":{}}}],["this.getuser",{"_index":1717,"title":{},"body":{"components/UserComponent.html":{}}}],["this.getusers",{"_index":1829,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.http.delete(`${this.brands_url}/${catid",{"_index":1508,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(`${this.cat_url}/${catid",{"_index":410,"title":{},"body":{"injectables/BlogService.html":{},"injectables/ProductService.html":{}}}],["this.http.delete(`${this.color_url}/${colorid",{"_index":1505,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(`${this.coup_url}/${couponid",{"_index":709,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.http.delete(`${this.enq_url}/${enquiryid",{"_index":711,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.http.delete(`${this.tags_url}/${tagid",{"_index":1502,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(`${this.url}/${blogid",{"_index":407,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.http.delete(`${this.url}/${productid",{"_index":1499,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(`${this.url}/${userid",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.coup_url}/all",{"_index":707,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.http.get(`${this.enq_url",{"_index":710,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.http.get(`${this.url}/${blogid",{"_index":406,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.http.get(`${this.url}/${productid",{"_index":1496,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(`${this.url}/admin/${userid",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.url}/orders",{"_index":867,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.http.get(this.brands_url",{"_index":1506,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(this.cat_url",{"_index":409,"title":{},"body":{"injectables/BlogService.html":{},"injectables/ProductService.html":{}}}],["this.http.get(this.color_url",{"_index":1503,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(this.tags_url",{"_index":1500,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(this.url",{"_index":405,"title":{},"body":{"injectables/BlogService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["this.http.post",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.coup_url}/create",{"_index":708,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.http.post(`${this.url}/block/${userid",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/forgot",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url}/refresh",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url}/signin/admin",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url}/signout",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url}/unblock/${userid",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/upload/${productid",{"_index":1497,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.post(this.brands_url",{"_index":1507,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.post(this.cat_url",{"_index":411,"title":{},"body":{"injectables/BlogService.html":{},"injectables/ProductService.html":{}}}],["this.http.post(this.color_url",{"_index":1504,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.post(this.tags_url",{"_index":1501,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.post(this.url",{"_index":408,"title":{},"body":{"injectables/BlogService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{}}}],["this.http.put(`${this.url}/${productid",{"_index":1498,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.initializeeditproduct",{"_index":1398,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.injector",{"_index":766,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.injector.get(ngcontrol",{"_index":760,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.isdisabled",{"_index":782,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.loaderservice.hideloading",{"_index":1241,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.loading",{"_index":1235,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.showloading",{"_index":1240,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loading",{"_index":1234,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.onselectcolorchange.emit(e",{"_index":642,"title":{},"body":{"components/ColorComponent.html":{}}}],["this.orders",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{}}}],["this.paginator",{"_index":306,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["this.product",{"_index":1339,"title":{},"body":{"components/ProductComponent.html":{}}}],["this.products",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.propagatetouched",{"_index":781,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.required",{"_index":758,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.resettoken",{"_index":1570,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.events",{"_index":1237,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.selectedfile",{"_index":501,"title":{},"body":{"components/BlogsFormComponent.html":{}}}],["this.selectedfiles",{"_index":1401,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.setformcontrol",{"_index":757,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.sort",{"_index":308,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["this.store",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["this.store.dispatch",{"_index":351,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{}}}],["this.store.dispatch(authactions.logout",{"_index":1211,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.store.dispatch(authactions.refreshtoken",{"_index":1212,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.store.dispatch(blogactions.getallblogcategories",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{}}}],["this.store.dispatch(blogactions.getallblogs",{"_index":447,"title":{},"body":{"components/BlogsComponent.html":{}}}],["this.store.dispatch(commonactions.getallcoupons",{"_index":837,"title":{},"body":{"components/CouponsComponent.html":{}}}],["this.store.dispatch(customeractions.getorders",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{}}}],["this.store.dispatch(productactions.getallproducts",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.store.dispatch(productactions.getbrands",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(productactions.getcolors",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ColorsComponent.html":{}}}],["this.store.dispatch(productactions.getproductcategories",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/TagsComponent.html":{}}}],["this.store.dispatch(productactions.gettags",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(useractions.getallusers",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.store.select(selectauthuser",{"_index":1204,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.store.select(selectdbuser",{"_index":1719,"title":{},"body":{"components/UserComponent.html":{}}}],["this.store.select(selectisloading",{"_index":927,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(selectproduct",{"_index":1338,"title":{},"body":{"components/ProductComponent.html":{}}}],["this.tags",{"_index":1657,"title":{},"body":{"components/TagsComponent.html":{}}}],["this.transformfromcontrol(p.colors",{"_index":1425,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.transformfromcontrol(p.tags",{"_index":1426,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["this.transformtocontrol(x",{"_index":488,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["this.type",{"_index":1303,"title":{},"body":{"components/PasswordComponent.html":{}}}],["this.url}/reset",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":1720,"title":{},"body":{"components/UserComponent.html":{}}}],["this.users",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["timesince",{"_index":1361,"title":{},"body":{"components/ProductComponent.html":{},"pipes/TimesincePipe.html":{}}}],["timesincepipe",{"_index":1309,"title":{"pipes/TimesincePipe.html":{}},"body":{"components/ProductComponent.html":{},"pipes/TimesincePipe.html":{},"coverage.html":{}}}],["title",{"_index":434,"title":{},"body":{"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateProduct.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/UserComponent.html":{}}}],["toastr",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["togglepassword",{"_index":1295,"title":{},"body":{"components/PasswordComponent.html":{}}}],["token",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"components/LayoutComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["total",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/UserComponent.html":{}}}],["totalprice",{"_index":1098,"title":{},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IUpdateCartRequest.html":{}}}],["totalpriceafterdiscount",{"_index":1169,"title":{},"body":{"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{}}}],["totalrating",{"_index":1122,"title":{},"body":{"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{}}}],["track",{"_index":627,"title":{},"body":{"components/ColorComponent.html":{},"components/LayoutComponent.html":{},"components/ProductComponent.html":{},"components/RatingComponent.html":{},"components/SelectComponent.html":{},"components/UserComponent.html":{}}}],["transform",{"_index":1669,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["transform(value",{"_index":1670,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["transformfromcontrol",{"_index":1374,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["transformfromcontrol(data",{"_index":1382,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["transformtocontrol",{"_index":473,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["transformtocontrol(data",{"_index":481,"title":{},"body":{"components/BlogsFormComponent.html":{},"components/ProductFormsComponent.html":{}}}],["transition",{"_index":1615,"title":{},"body":{"components/SubnavComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICreateProduct.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IProduct.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/typealiases.html":{}}}],["try",{"_index":761,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/StorageService.html":{}}}],["tslib",{"_index":1980,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/HomeComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBackendError.html":{},"interfaces/IBackendSuccess.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/IBulkDeleteResponse.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/IColor.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/IControlItem.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICreateCommonProductSup.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateProduct.html":{},"interfaces/ICreateReview.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IData.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IEnquiry.html":{},"interfaces/IForgotPassword.html":{},"interfaces/ILogin.html":{},"interfaces/INamedProductAttr.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IProduct.html":{},"interfaces/IProductBrand.html":{},"interfaces/IProductCategory.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IRegister.html":{},"interfaces/IResetPassword.html":{},"interfaces/IReview.html":{},"interfaces/ITag.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2002,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/controls.type",{"_index":1190,"title":{},"body":{"components/InputComponent.html":{}}}],["u.available).length",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["u.blocked).length",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["unavailable",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblock",{"_index":1740,"title":{},"body":{"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["unblockuser",{"_index":1784,"title":{},"body":{"injectables/UserService.html":{}}}],["unblockuser(userid",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["unblockusereffect",{"_index":1948,"title":{},"body":{"coverage.html":{}}}],["undefined",{"_index":742,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"interfaces/IAuthStoreState.html":{},"interfaces/IBlogStoreState.html":{},"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICommonStoreState.html":{},"interfaces/ICreateCart.html":{},"interfaces/ICustomerStoreState.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IProductStoreState.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUserStoreState.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["underline",{"_index":1618,"title":{},"body":{"components/SubnavComponent.html":{}}}],["unknown",{"_index":515,"title":{},"body":{"components/BlogsFormComponent.html":{},"injectables/StorageService.html":{}}}],["update",{"_index":1355,"title":{},"body":{"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{}}}],["updated",{"_index":1283,"title":{},"body":{"components/OrdersComponent.html":{},"components/UserComponent.html":{}}}],["updatedat",{"_index":437,"title":{},"body":{"components/BlogsComponent.html":{},"interfaces/IAddress.html":{},"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICoupon.html":{},"interfaces/ICreateAddress.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/ICreateReview.html":{},"interfaces/IEnquiry.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IReview.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"interfaces/User.html":{}}}],["updateproduct",{"_index":1446,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct(dto",{"_index":1478,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproducteffects",{"_index":1939,"title":{},"body":{"coverage.html":{}}}],["uploadproductimages",{"_index":1447,"title":{},"body":{"injectables/ProductService.html":{}}}],["uploadproductimages(productid",{"_index":1481,"title":{},"body":{"injectables/ProductService.html":{}}}],["url",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"injectables/CustomerService.html":{},"injectables/EnquiryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["used",{"_index":1112,"title":{},"body":{"interfaces/ICoupon.html":{},"interfaces/ICreateCoupon.html":{},"interfaces/IEnquiry.html":{}}}],["useexisting",{"_index":874,"title":{},"body":{"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["user",{"_index":68,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICreateReview.html":{},"interfaces/IReview.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user$|async",{"_index":1213,"title":{},"body":{"components/LayoutComponent.html":{}}}],["user'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["user.address",{"_index":1732,"title":{},"body":{"components/UserComponent.html":{}}}],["user.address.address1",{"_index":1733,"title":{},"body":{"components/UserComponent.html":{}}}],["user.address.address2",{"_index":1734,"title":{},"body":{"components/UserComponent.html":{}}}],["user.address.city",{"_index":1736,"title":{},"body":{"components/UserComponent.html":{}}}],["user.address.other",{"_index":1739,"title":{},"body":{"components/UserComponent.html":{}}}],["user.address.state",{"_index":1735,"title":{},"body":{"components/UserComponent.html":{}}}],["user.address.zipcode",{"_index":1738,"title":{},"body":{"components/UserComponent.html":{}}}],["user.blocked",{"_index":1729,"title":{},"body":{"components/UserComponent.html":{}}}],["user.cart",{"_index":1743,"title":{},"body":{"components/UserComponent.html":{}}}],["user.cart.length",{"_index":1742,"title":{},"body":{"components/UserComponent.html":{}}}],["user.compare",{"_index":1755,"title":{},"body":{"components/UserComponent.html":{}}}],["user.compare.length",{"_index":1754,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":1701,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.scss",{"_index":1702,"title":{},"body":{"components/UserComponent.html":{}}}],["user.createdat",{"_index":1727,"title":{},"body":{"components/UserComponent.html":{}}}],["user.email",{"_index":1725,"title":{},"body":{"components/UserComponent.html":{}}}],["user.firstname",{"_index":1216,"title":{},"body":{"components/LayoutComponent.html":{},"components/UserComponent.html":{}}}],["user.lastname",{"_index":1217,"title":{},"body":{"components/LayoutComponent.html":{},"components/UserComponent.html":{}}}],["user.mobile",{"_index":1730,"title":{},"body":{"components/UserComponent.html":{}}}],["user.orders",{"_index":1750,"title":{},"body":{"components/UserComponent.html":{}}}],["user.orders.length",{"_index":1748,"title":{},"body":{"components/UserComponent.html":{}}}],["user.role",{"_index":1728,"title":{},"body":{"components/UserComponent.html":{}}}],["user.updatedat",{"_index":1731,"title":{},"body":{"components/UserComponent.html":{}}}],["user.wishlist",{"_index":1759,"title":{},"body":{"components/UserComponent.html":{}}}],["user.wishlist.length",{"_index":1758,"title":{},"body":{"components/UserComponent.html":{}}}],["useractions",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["useractions.blockuser",{"_index":1775,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["useractions.deleteuser",{"_index":1770,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["useractions.getsingleuser",{"_index":1718,"title":{},"body":{"components/UserComponent.html":{}}}],["useractions.unblockblockuser",{"_index":1773,"title":{},"body":{"components/UserFormsComponent.html":{}}}],["usercomponent",{"_index":154,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userfeature",{"_index":1950,"title":{},"body":{"coverage.html":{}}}],["userformscomponent",{"_index":156,"title":{"components/UserFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userid",{"_index":1095,"title":{},"body":{"interfaces/ICart.html":{},"interfaces/ICartData.html":{},"interfaces/ICreateCart.html":{},"interfaces/IDeleteCatProductRequest.html":{},"interfaces/IOrderItemResponse.html":{},"interfaces/IOrderResponse.html":{},"interfaces/IUpdateCartRequest.html":{},"components/OrdersComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"interfaces/IData.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["users.blocked",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["users.component.html",{"_index":1809,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":1810,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.total",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["users/components/user",{"_index":1715,"title":{},"body":{"components/UserComponent.html":{}}}],["userscomponent",{"_index":157,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userservice",{"_index":1779,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usersquerytype",{"_index":1066,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["validations/passwords",{"_index":1569,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validatorfn",{"_index":1987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":339,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{}}}],["validators.max(99",{"_index":796,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["validators.min(1",{"_index":795,"title":{},"body":{"components/CouponFormsComponent.html":{}}}],["validators.pattern(regex.email",{"_index":933,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validators.pattern(regex.numbers",{"_index":794,"title":{},"body":{"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{}}}],["validators.pattern(regex.password",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":335,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductFormsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagFormsComponent.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"injectables/CommonService.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"injectables/CustomerService.html":{},"components/DateComponent.html":{},"injectables/EnquiryService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IControlItem.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["var",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/EnquiriesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/FormGroupComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["version",{"_index":1995,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewchild",{"_index":263,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["viewchild(matpaginator",{"_index":258,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["viewchild(matsort",{"_index":260,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UsersComponent.html":{}}}],["views",{"_index":1080,"title":{},"body":{"interfaces/IBlog.html":{},"interfaces/IBlogCategory.html":{},"interfaces/ICreateBlog.html":{},"interfaces/ICreateBlogCategory.html":{}}}],["void",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/BlogCategoriesComponent.html":{},"components/BlogCategoryFormsComponent.html":{},"components/BlogsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/ColorsFormsComponent.html":{},"directives/ControlValueAccessorDirective.html":{},"components/CouponFormsComponent.html":{},"components/CouponsComponent.html":{},"components/DateComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/LayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PasswordComponent.html":{},"components/ProductComponent.html":{},"components/ProductFormsComponent.html":{},"components/ProductsComponent.html":{},"components/RatingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SelectComponent.html":{},"injectables/StorageService.html":{},"components/SubnavComponent.html":{},"components/TagFormsComponent.html":{},"components/TagsComponent.html":{},"components/TextAreaComponent.html":{},"components/UserComponent.html":{},"components/UserFormsComponent.html":{},"components/UsersComponent.html":{}}}],["want",{"_index":360,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"components/ProductFormsComponent.html":{},"components/TagFormsComponent.html":{},"components/UserFormsComponent.html":{}}}],["week",{"_index":1682,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["white",{"_index":1614,"title":{},"body":{"components/SubnavComponent.html":{}}}],["width",{"_index":289,"title":{},"body":{"components/BlogCategoriesComponent.html":{},"components/BlogsComponent.html":{},"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ColorComponent.html":{},"components/ColorsComponent.html":{},"components/CouponsComponent.html":{},"components/ProductComponent.html":{},"components/ProductsComponent.html":{},"components/TagsComponent.html":{},"components/UserComponent.html":{},"components/UsersComponent.html":{}}}],["wishlist",{"_index":1064,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["works",{"_index":910,"title":{},"body":{"components/EnquiriesComponent.html":{}}}],["wrap",{"_index":614,"title":{},"body":{"components/ColorComponent.html":{}}}],["writevalue",{"_index":722,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["writevalue(value",{"_index":739,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"components/DateComponent.html":{},"components/InputComponent.html":{},"components/PasswordComponent.html":{},"components/SelectComponent.html":{},"components/TextAreaComponent.html":{}}}],["x.name",{"_index":1428,"title":{},"body":{"components/ProductFormsComponent.html":{}}}],["year",{"_index":1678,"title":{},"body":{"pipes/TimesincePipe.html":{}}}],["yes",{"_index":362,"title":{},"body":{"components/BlogCategoryFormsComponent.html":{},"injectables/BlogService.html":{},"components/BlogsFormComponent.html":{},"components/BrandFormsComponent.html":{},"components/CategoriesFormsComponent.html":{},"components/ColorsFormsComponent.html":{},"components/CouponFormsComponent.html":{},"injectables/CustomerService.html":{},"components/ProductFormsComponent.html":{},"injectables/ProductService.html":{},"components/TagFormsComponent.html":{},"pipes/TimesincePipe.html":{},"components/UserFormsComponent.html":{},"injectables/UserService.html":{}}}],["zip",{"_index":1737,"title":{},"body":{"components/UserComponent.html":{}}}],["zipcode",{"_index":1052,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICreateAddress.html":{},"interfaces/IUpdateUser.html":{},"interfaces/IUser.html":{}}}],["zone.js",{"_index":1982,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { productActions } from './store/products';\nimport { Subject, takeUntil } from 'rxjs';\nimport { selectAuthUser } from './store/auth';\nimport { blogActions } from './store/blogs';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  destroy$ = new Subject();\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.store\n      .select(selectAuthUser)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((user) => {\n        if (user) {\n          this.store.dispatch(productActions.getTags());\n          this.store.dispatch(productActions.getColors());\n          this.store.dispatch(productActions.getProductCategories());\n          this.store.dispatch(productActions.getBrands());\n          this.store.dispatch(blogActions.getAllBlogCategories());\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(dto: IForgotPassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            IForgotPassword\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(dto: ILogin)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ILogin\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: IResetPassword, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            IResetPassword\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport {\n  IBackendSuccess,\n  IForgotPassword,\n  ILogin,\n  IResetPassword,\n  IUser,\n} from '@app/models';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  http = inject(HttpClient);\n\n  url = environment.server_url + '/auth';\n\n  login(dto: ILogin): Observable {\n    return this.http.post(`${this.url}/signin/admin`, dto);\n  }\n\n  logout(): Observable {\n    return this.http.post(`${this.url}/signout`, {});\n  }\n\n  refresh(): Observable {\n    return this.http.post(`${this.url}/refresh`, {});\n  }\n\n  // forgot password\n  forgotPassword(dto: IForgotPassword): Observable {\n    return this.http.post(`${this.url}/forgot-password`, dto);\n  }\n\n  resetPassword(\n    dto: IResetPassword,\n    token: string\n  ): Observable {\n    return this.http.post(\n      `${this.url}/reset-password/${token}`,\n      dto\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogCategoriesComponent.html":{"url":"components/BlogCategoriesComponent.html","title":"component - BlogCategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlogCategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blog-categories/blog-categories.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blog-categories\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            MatButtonModule\n                            RouterLink\n                            ClipboardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blog-categories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blog-categories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getCategories\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/blog-categories.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/blog-categories.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/blog-categories.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/blog-categories.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(category: IBlogCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/blog-categories.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            IBlogCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/blog-categories.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IBlogCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Id', 'Name', 'Actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/blog-categories.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nimport { IBlogCategory } from '@app/models';\nimport { blogActions, selectBlogCategories } from '@app/store/blogs';\nimport { BlogCategoryFormsComponent } from './components/blog-category-forms/blog-category-forms.component';\nimport { Icons } from '@app/shared';\n\n@Component({\n  selector: 'app-blog-categories',\n  standalone: true,\n  templateUrl: './blog-categories.component.html',\n  styleUrl: './blog-categories.component.scss',\n  imports: [\n    RouterLink,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    MatButtonModule,\n    RouterLink,\n    ClipboardModule,\n  ],\n})\nexport class BlogCategoriesComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  icons = Icons;\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  categories: IBlogCategory[] = [];\n\n  // Mat table config\n  displayColumms: string[] = ['Id', 'Name', 'Actions'];\n\n  dataSource: any;\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  openDialog() {\n    this.dialog.open(BlogCategoryFormsComponent, {\n      width: '50%',\n      height: '50%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openDeleteDialog(category: IBlogCategory) {\n    this.dialog.open(BlogCategoryFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteBlogCategory: category,\n      },\n    });\n  }\n\n  private getCategories() {\n    this.store.dispatch(blogActions.getAllBlogCategories());\n    this.store\n      .select(selectBlogCategories)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.categories = d;\n          this.dataSource = new MatTableDataSource(\n            this.categories\n          );\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Category (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 10 }}\n          \n        \n\n        \n          Name\n          {{ el.name }}\n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Category (+)                                              ID                      {{ el.id | slice : 0 : 10 }}                                    Name          {{ el.name }}                          Actions                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlogCategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogCategoryFormsComponent.html":{"url":"components/BlogCategoryFormsComponent.html","title":"component - BlogCategoryFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlogCategoryFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blog-category-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                InputComponent\n                                FormGroupComponent\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blog-category-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blog-category-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                deleteBlogCategory\n                            \n                            \n                                formType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewBlogCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteBlogCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewBlogCategory\n                        \n                    \n                \n            \n            \n                \naddNewBlogCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteBlogCategory\n                        \n                    \n                \n            \n            \n                \nonDeleteBlogCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBlogCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IBlogCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\n\nimport {\n  InputComponent,\n  FormGroupComponent,\n  markFormGroupTouched,\n} from '@app/shared';\nimport { blogActions } from '@app/store/blogs';\nimport { IBlogCategory } from '@app/models';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n@Component({\n  selector: 'app-blog-category-forms',\n  standalone: true,\n  templateUrl: './blog-category-forms.component.html',\n  styleUrl: './blog-category-forms.component.scss',\n  imports: [\n    ReactiveFormsModule,\n    InputComponent,\n    FormGroupComponent,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n})\nexport class BlogCategoryFormsComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  formType: formType = 'Add';\n\n  deleteBlogCategory!: IBlogCategory;\n\n  addForm = this.fb.group({\n    name: ['', [Validators.required]],\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n\n    if (this.dialogData.deleteBlogCategory) {\n      this.deleteBlogCategory = this.dialogData.deleteBlogCategory;\n    }\n  }\n\n  addNewBlogCategory() {\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    this.store.dispatch(\n      blogActions.createBlogCategory({\n        request: {\n          name: String(this.addForm.getRawValue().name),\n        },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  onDeleteBlogCategory() {\n    this.store.dispatch(\n      blogActions.deleteBlogCategory({\n        request: { categoryId: this.deleteBlogCategory.id },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        @if (formType === 'Add') {\n\n  \n    \n      \n        \n      \n    \n\n    Add\n  \n\n} @else {\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteBlogCategory.name }}\n    \n\n    \n      \n        Yes\n      \n      Cancel\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (formType === \\'Add\\') {                                  Add  } @else {            Are you sure you want to delete?      {{ deleteBlogCategory.name }}                      Yes            Cancel      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlogCategoryFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlogService.html":{"url":"injectables/BlogService.html","title":"injectable - BlogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/blog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cat_url\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBlog\n                            \n                            \n                                createBlogCategory\n                            \n                            \n                                deleteBlog\n                            \n                            \n                                deleteBlogCategory\n                            \n                            \n                                getAllBlogCategories\n                            \n                            \n                                getAllBlogs\n                            \n                            \n                                getSingleBlog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/blog.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBlog\n                        \n                    \n                \n            \n            \n                \ncreateBlog(dto: ICreateBlog)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/blog.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateBlog\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBlogCategory\n                        \n                    \n                \n            \n            \n                \ncreateBlogCategory(dto: ICreateCommonProductSup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/blog.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateCommonProductSup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBlog\n                        \n                    \n                \n            \n            \n                \ndeleteBlog(blogId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/blog.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blogId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBlogCategory\n                        \n                    \n                \n            \n            \n                \ndeleteBlogCategory(catId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/blog.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                catId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBlogCategories\n                        \n                    \n                \n            \n            \n                \ngetAllBlogCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/blog.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBlogs\n                        \n                    \n                \n            \n            \n                \ngetAllBlogs(query?: BlogQueryType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/blog.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            BlogQueryType\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleBlog\n                        \n                    \n                \n            \n            \n                \ngetSingleBlog(blogId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/blog.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blogId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cat_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/blog-categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/blog.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/blogs'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/blog.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  BlogQueryType,\n  IBlog,\n  IBlogCategory,\n  ICreateBlog,\n  ICreateCommonProductSup,\n} from '@app/models';\nimport { environment } from '@environments/environment.development';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogService {\n  url = environment.server_url + '/blogs';\n\n  cat_url = environment.server_url + '/blog-categories';\n\n  constructor(private http: HttpClient) {}\n\n  // BLOGS\n  getAllBlogs(query?: BlogQueryType): Observable {\n    const obj = {\n      cat: '',\n    };\n\n    if (query) {\n      obj.cat = query.cat;\n    }\n\n    let params = new HttpParams({ fromObject: obj });\n\n    return this.http.get(this.url, { params });\n  }\n\n  getSingleBlog(blogId: string): Observable {\n    return this.http.get(`${this.url}/${blogId}`);\n  }\n\n  deleteBlog(blogId: string): Observable {\n    return this.http.delete(`${this.url}/${blogId}`);\n  }\n\n  createBlog(dto: ICreateBlog): Observable {\n    return this.http.post(this.url, dto);\n  }\n\n  // BLOG CATEGORIES\n  getAllBlogCategories(): Observable {\n    return this.http.get(this.cat_url);\n  }\n\n  deleteBlogCategory(catId: string): Observable {\n    return this.http.delete(`${this.cat_url}/${catId}`);\n  }\n\n  createBlogCategory(dto: ICreateCommonProductSup): Observable {\n    return this.http.post(this.cat_url, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogsComponent.html":{"url":"components/BlogsComponent.html","title":"component - BlogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blogs/blogs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blogs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            JsonPipe\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            DatePipe\n                            MatCardModule\n                            RouterLink\n                            MatButtonModule\n                            CdkCopyToClipboard\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blogs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blogs.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blogs\n                            \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getBlogs\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/blogs/blogs.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/blogs.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getBlogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBlogs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/blogs.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/blogs.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/blogs.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(blog: IBlog)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/blogs.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blog\n                                            \n                                                            IBlog\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/blogs.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(blog: IBlog)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/blogs.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blog\n                                            \n                                                            IBlog\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IBlog[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/blogs.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/blogs.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/blogs.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Id',\n    'Image',\n    'Title',\n    'Desc',\n    'Author',\n    'UpdatedAt',\n    'Actions',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/blogs.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/blogs.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/blogs.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/blogs.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe, JsonPipe, SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { BlogsFormComponent } from './components/blogs-form/blogs-form.component';\nimport { IBlog } from '@app/models';\nimport { Icons } from '@app/shared';\nimport { blogActions, selectBlogs } from '@app/store/blogs';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkCopyToClipboard } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-blogs',\n  standalone: true,\n  templateUrl: './blogs.component.html',\n  styleUrl: './blogs.component.scss',\n  imports: [\n    RouterLink,\n    JsonPipe,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    DatePipe,\n    MatCardModule,\n    RouterLink,\n    MatButtonModule,\n    CdkCopyToClipboard,\n  ],\n})\nexport class BlogsComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  // Mat table config\n  displayColumms: string[] = [\n    'Id',\n    'Image',\n    'Title',\n    'Desc',\n    'Author',\n    'UpdatedAt',\n    'Actions',\n  ];\n\n  dataSource: any;\n\n  blogs: IBlog[] = [];\n\n  icons = Icons;\n\n  ngOnInit(): void {\n    this.getBlogs();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  private getBlogs() {\n    this.store.dispatch(blogActions.getAllBlogs({}));\n    this.store\n      .select(selectBlogs)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.blogs = d;\n          this.dataSource = new MatTableDataSource(this.blogs);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  openDialog() {\n    this.dialog.open(BlogsFormComponent, {\n      width: '60%',\n      height: '90%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openEditDialog(blog: IBlog) {\n    this.dialog.open(BlogsFormComponent, {\n      width: '60%',\n      height: '90%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Edit',\n        editBlog: blog,\n      },\n    });\n  }\n\n  openDeleteDialog(blog: IBlog) {\n    this.dialog.open(BlogsFormComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteBlog: blog,\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Blog (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 6 }}\n          \n        \n\n        \n          Image\n          \n            \n          \n        \n\n        \n          Title\n          {{ el.title | slice : 0 : 15 }}\n        \n\n        \n          Desc\n          {{ el.desc | slice : 0 : 35 }}\n        \n\n        \n          Author\n          \n            {{ el.Author.firstname }} {{ el.Author.lastname }}\n          \n        \n\n        \n          UpdatedAt\n          \n            {{ el.updatedAt | date }}\n          \n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Blog (+)                                              ID                      {{ el.id | slice : 0 : 6 }}                                    Image                                                          Title          {{ el.title | slice : 0 : 15 }}                          Desc          {{ el.desc | slice : 0 : 35 }}                          Author                      {{ el.Author.firstname }} {{ el.Author.lastname }}                                    UpdatedAt                      {{ el.updatedAt | date }}                                    Actions                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogsFormComponent.html":{"url":"components/BlogsFormComponent.html","title":"component - BlogsFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlogsFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blogs/components/blogs-form/blogs-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blogs-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            MatDialogModule\n                            MatButtonModule\n                                TextAreaComponent\n                                InputComponent\n                                SelectComponent\n                            ReactiveFormsModule\n                            AsyncPipe\n                                FormGroupComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blogs-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blogs-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                data$\n                            \n                            \n                                deleteBlog\n                            \n                            \n                                formType\n                            \n                            \n                                selectedFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewBlog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteBlog\n                            \n                            \n                                onSelectFile\n                            \n                            \n                                    Private\n                                transFormToControl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, fb: FormBuilder, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewBlog\n                        \n                    \n                \n            \n            \n                \naddNewBlog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteBlog\n                        \n                    \n                \n            \n            \n                \nonDeleteBlog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectFile\n                        \n                    \n                \n            \n            \n                \nonSelectFile(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transFormToControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    transFormToControl(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IControlItem\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    title: ['', [Validators.required]],\n    desc: ['', [Validators.required]],\n    categoryId: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest({\n    categories: this.store\n      .select(selectBlogCategories)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBlog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IBlog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/blogs/components/blogs-form/blogs-form.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { MatCardModule } from '@angular/material/card';\nimport { map, combineLatest } from 'rxjs';\n\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { IBlog, IControlItem, ICreateBlog } from '@app/models';\nimport { blogActions, selectBlogCategories } from '@app/store/blogs';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  FormGroupComponent,\n  InputComponent,\n  SelectComponent,\n  TextAreaComponent,\n  markFormGroupTouched,\n} from '@app/shared';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AsyncPipe } from '@angular/common';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n\n@Component({\n  selector: 'app-blogs-form',\n  standalone: true,\n  templateUrl: './blogs-form.component.html',\n  styleUrl: './blogs-form.component.scss',\n  imports: [\n    MatCardModule,\n    MatDialogModule,\n    MatButtonModule,\n    TextAreaComponent,\n    InputComponent,\n    SelectComponent,\n    ReactiveFormsModule,\n    AsyncPipe,\n    FormGroupComponent,\n  ],\n})\nexport class BlogsFormComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  data$ = combineLatest({\n    categories: this.store\n      .select(selectBlogCategories)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n  });\n\n  formType: formType = 'Add';\n\n  deleteBlog!: IBlog;\n\n  selectedFile!: File | null;\n\n  addForm = this.fb.group({\n    title: ['', [Validators.required]],\n    desc: ['', [Validators.required]],\n    categoryId: ['', [Validators.required]],\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n    if (this.dialogData.deleteBlog) {\n      this.deleteBlog = this.dialogData.deleteBlog;\n    }\n  }\n\n  onSelectFile(e: Event) {\n    const input = e.target as HTMLInputElement;\n\n    if (input?.files?.length) {\n      this.selectedFile = input.files[0];\n    }\n  }\n\n  addNewBlog() {\n    const data = this.addForm.getRawValue();\n\n    const formData = new FormData();\n    formData.append('title', String(data.title));\n    formData.append('desc', String(data.desc));\n    formData.append('categoryId', String(data.categoryId));\n    formData.append('image', this.selectedFile as File);\n\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    // since images is not required for a blog.\n    if (this.selectedFile) {\n      this.store.dispatch(\n        blogActions.createBlog({ request: formData as unknown as ICreateBlog })\n      );\n      this.dialogRef.close();\n    } else {\n      this.store.dispatch(\n        blogActions.createBlog({\n          request: {\n            categoryId: String(data.categoryId),\n            title: String(data.title),\n            desc: String(data.desc),\n          },\n        })\n      );\n      this.dialogRef.close();\n    }\n  }\n\n  onDeleteBlog() {\n    this.store.dispatch(\n      blogActions.deleteBlog({\n        request: { blogId: this.deleteBlog.id },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  private transFormToControl(data: any): IControlItem {\n    return Object.assign({}, { label: data.name, value: data.id });\n  }\n}\n\n    \n\n    \n        @if (data$|async; as data) {\n\n\n  @if (formType === 'Add') {\n  \n    \n      \n        \n          \n        \n\n        \n          \n        \n\n        \n          Select Image\n          \n        \n\n        \n          \n        \n      \n\n      Add\n    \n  \n  } @else if (formType === 'Delete') {\n\n  \n    \n      \n        Are you sure you want to delete?\n        {{ deleteBlog.title }}\n      \n\n      \n        Yes\n        Cancel\n      \n    \n  \n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (data$|async; as data) {  @if (formType === \\'Add\\') {                                                                                  Select Image                                                        Add        } @else if (formType === \\'Delete\\') {                    Are you sure you want to delete?        {{ deleteBlog.title }}                    Yes        Cancel              }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlogsFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BrandFormsComponent.html":{"url":"components/BrandFormsComponent.html","title":"component - BrandFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BrandFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/brands/components/brand-forms/brand-forms.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-brand-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                InputComponent\n                                FormGroupComponent\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./brand-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./brand-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                deleteProductBrand\n                            \n                            \n                                formType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewProductBrand\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteProductBrand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/brands/components/brand-forms/brand-forms.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewProductBrand\n                        \n                    \n                \n            \n            \n                \naddNewProductBrand()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/components/brand-forms/brand-forms.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/components/brand-forms/brand-forms.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteProductBrand\n                        \n                    \n                \n            \n            \n                \nonDeleteProductBrand()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/components/brand-forms/brand-forms.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/components/brand-forms/brand-forms.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProductBrand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProductBrand\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/components/brand-forms/brand-forms.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/components/brand-forms/brand-forms.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\n\nimport {\n  InputComponent,\n  FormGroupComponent,\n  markFormGroupTouched,\n} from '@app/shared';\nimport { productActions } from '@app/store/products';\nimport { IProductBrand } from '@app/models';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n\n@Component({\n  selector: 'app-brand-forms',\n  standalone: true,\n  templateUrl: './brand-forms.component.html',\n  styleUrl: './brand-forms.component.scss',\n  imports: [\n    ReactiveFormsModule,\n    InputComponent,\n    FormGroupComponent,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n})\nexport class BrandFormsComponent {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  formType: formType = 'Add';\n\n  deleteProductBrand!: IProductBrand;\n\n  addForm = this.fb.group({\n    name: ['', [Validators.required]],\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n\n    if (this.dialogData.deleteProductBrand) {\n      this.deleteProductBrand = this.dialogData.deleteProductBrand;\n    }\n  }\n\n  addNewProductBrand() {\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    this.store.dispatch(\n      productActions.createBrand({\n        request: {\n          name: String(this.addForm.getRawValue().name),\n        },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  onDeleteProductBrand() {\n    this.store.dispatch(\n      productActions.deleteBrand({\n        request: { brandId: this.deleteProductBrand.id },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        @if (formType === 'Add') {\n\n  \n    \n      \n        \n      \n    \n\n    Add\n  \n\n} @else {\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteProductBrand.name }}\n    \n\n    \n      \n        Yes\n      \n      Cancel\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (formType === \\'Add\\') {                                  Add  } @else {            Are you sure you want to delete?      {{ deleteProductBrand.name }}                      Yes            Cancel      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BrandFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BrandsComponent.html":{"url":"components/BrandsComponent.html","title":"component - BrandsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BrandsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/brands/brands.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-brands\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ClipboardModule\n                            RouterLink\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            RouterLink\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./brands.component.html\n            \n\n\n\n            \n                styleUrl\n                ./brands.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brands\n                            \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getProductBrands\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/brands/brands.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getProductBrands\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(brand: IProductBrand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                brand\n                                            \n                                                            IProductBrand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brands\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IProductBrand[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Id', 'Name', 'Actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { IProductBrand } from '@app/models';\nimport { productActions, selectBrands } from '@app/store/products';\nimport { BrandFormsComponent } from './components/brand-forms/brand-forms.component';\nimport { Icons } from '@app/shared';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-brands',\n  standalone: true,\n  templateUrl: './brands.component.html',\n  styleUrl: './brands.component.scss',\n  imports: [\n    ClipboardModule,\n    RouterLink,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    RouterLink,\n    MatButtonModule,\n  ],\n})\nexport class BrandsComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  icons = Icons;\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  brands: IProductBrand[] = [];\n\n  // Mat table config\n  displayColumms: string[] = ['Id', 'Name', 'Actions'];\n\n  dataSource: any;\n\n  ngOnInit(): void {\n    this.getProductBrands();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  openDialog() {\n    this.dialog.open(BrandFormsComponent, {\n      width: '50%',\n      height: '50%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openDeleteDialog(brand: IProductBrand) {\n    this.dialog.open(BrandFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteProductBrand: brand,\n      },\n    });\n  }\n\n  private getProductBrands() {\n    this.store.dispatch(productActions.getProductCategories());\n    this.store\n      .select(selectBrands)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.brands = d;\n          this.dataSource = new MatTableDataSource(this.brands);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Product Brand (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 10 }}\n          \n        \n\n        \n          Name\n          {{ el.name }}\n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Product Brand (+)                                              ID                      {{ el.id | slice : 0 : 10 }}                                    Name          {{ el.name }}                          Actions                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BrandsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/categories/categories.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            MatButtonModule\n                            RouterLink\n                            ClipboardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./categories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getCategories\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/categories/categories.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(category: IProductCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            IProductCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IProductCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Id', 'Name', 'Actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nimport { IProductCategory } from '@app/models';\nimport { productActions, selectProductCategory } from '@app/store/products';\nimport { CategoriesFormsComponent } from './components/categories-forms/categories-forms.component';\nimport { Icons } from '@app/shared';\n\n@Component({\n  selector: 'app-categories',\n  standalone: true,\n  templateUrl: './categories.component.html',\n  styleUrl: './categories.component.scss',\n  imports: [\n    RouterLink,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    MatButtonModule,\n    RouterLink,\n    ClipboardModule,\n  ],\n})\nexport class CategoriesComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  icons = Icons;\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  categories: IProductCategory[] = [];\n\n  // Mat table config\n  displayColumms: string[] = ['Id', 'Name', 'Actions'];\n\n  dataSource: any;\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  openDialog() {\n    this.dialog.open(CategoriesFormsComponent, {\n      width: '50%',\n      height: '50%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openDeleteDialog(category: IProductCategory) {\n    this.dialog.open(CategoriesFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteProductCategory: category,\n      },\n    });\n  }\n\n  private getCategories() {\n    this.store.dispatch(productActions.getProductCategories());\n    this.store\n      .select(selectProductCategory)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.categories = d;\n          this.dataSource = new MatTableDataSource(\n            this.categories\n          );\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Category (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 10 }}\n          \n        \n\n        \n          Name\n          {{ el.name }}\n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Category (+)                                              ID                      {{ el.id | slice : 0 : 10 }}                                    Name          {{ el.name }}                          Actions                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesFormsComponent.html":{"url":"components/CategoriesFormsComponent.html","title":"component - CategoriesFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/categories/components/categories-forms/categories-forms.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                InputComponent\n                                FormGroupComponent\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./categories-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./categories-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                deleteProductCategory\n                            \n                            \n                                formType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewProductCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteProductCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/categories/components/categories-forms/categories-forms.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewProductCategory\n                        \n                    \n                \n            \n            \n                \naddNewProductCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/components/categories-forms/categories-forms.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/components/categories-forms/categories-forms.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteProductCategory\n                        \n                    \n                \n            \n            \n                \nonDeleteProductCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/components/categories-forms/categories-forms.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/components/categories-forms/categories-forms.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProductCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProductCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/components/categories-forms/categories-forms.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/components/categories-forms/categories-forms.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\n\nimport {\n  InputComponent,\n  FormGroupComponent,\n  markFormGroupTouched,\n} from '@app/shared';\nimport { productActions } from '@app/store/products';\nimport { IProductCategory } from '@app/models';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n\n@Component({\n  selector: 'app-categories-forms',\n  standalone: true,\n  templateUrl: './categories-forms.component.html',\n  styleUrl: './categories-forms.component.scss',\n  imports: [\n    ReactiveFormsModule,\n    InputComponent,\n    FormGroupComponent,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n})\nexport class CategoriesFormsComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  formType: formType = 'Add';\n\n  deleteProductCategory!: IProductCategory;\n\n  addForm = this.fb.group({\n    name: ['', [Validators.required]],\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n\n    if (this.dialogData.deleteProductCategory) {\n      this.deleteProductCategory = this.dialogData.deleteProductCategory;\n    }\n  }\n\n  addNewProductCategory() {\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    this.store.dispatch(\n      productActions.createProductCategory({\n        request: {\n          name: String(this.addForm.getRawValue().name),\n        },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  onDeleteProductCategory() {\n    this.store.dispatch(\n      productActions.deleteProductCategory({\n        request: { categoryId: this.deleteProductCategory.id },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        @if (formType === 'Add') {\n\n  \n    \n      \n        \n      \n    \n\n    Add\n  \n\n} @else {\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteProductCategory.name }}\n    \n\n    \n      \n        Yes\n      \n      Cancel\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (formType === \\'Add\\') {                                  Add  } @else {            Are you sure you want to delete?      {{ deleteProductCategory.name }}                      Yes            Cancel      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorComponent.html":{"url":"components/ColorComponent.html","title":"component - ColorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ColorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/ui/color/color.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-color\n            \n\n            \n                standalone\n                true\n            \n\n\n\n            \n                styles\n                \n      .app-color {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        flex-wrap: wrap;\n        background-color: rgba(255, 255, 255, 0.4);\n        width: 100%;\n        padding: 3px;\n      }\n\n      .color {\n        border-radius: 50%;\n        cursor: pointer;\n      }\n    \n            \n\n            \n                template\n                \n  @if(colors()){\n  \n    @for (color of colors(); track $index) {\n    \n    }\n  \n  }\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                onSelectColorChange\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectColorChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/ui/color/color.component.ts:45\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSelectColorChange\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/ui/color/color.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectColor\n                        \n                    \n                \n            \n            \n                \nonSelectColor(e: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ui/color/color.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/ui/color/color.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectColorChange\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/ui/color/color.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/ui/color/color.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { IColor } from '@app/models';\n\n@Component({\n  selector: 'app-color',\n  standalone: true,\n  imports: [],\n  template: `\n    \n      @if(colors()){\n      \n        @for (color of colors(); track $index) {\n        \n        }\n      \n      }\n    \n  `,\n  styles: [\n    `\n      .app-color {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        flex-wrap: wrap;\n        background-color: rgba(255, 255, 255, 0.4);\n        width: 100%;\n        padding: 3px;\n      }\n\n      .color {\n        border-radius: 50%;\n        cursor: pointer;\n      }\n    `,\n  ],\n})\nexport class ColorComponent {\n  colors = input.required();\n\n  size = input(10);\n\n  onSelectColorChange = output();\n\n  onSelectColor(e: string) {\n    this.onSelectColorChange.emit(e);\n  }\n}\n\n    \n\n\n    \n            \n      .app-color {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        flex-wrap: wrap;\n        background-color: rgba(255, 255, 255, 0.4);\n        width: 100%;\n        padding: 3px;\n      }\n\n      .color {\n        border-radius: 50%;\n        cursor: pointer;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(colors()){      @for (color of colors(); track $index) {        }    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorsComponent.html":{"url":"components/ColorsComponent.html","title":"component - ColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/colors/colors.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-colors\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            MatButtonModule\n                            RouterLink\n                            ClipboardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./colors.component.html\n            \n\n\n\n            \n                styleUrl\n                ./colors.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getColors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/colors/colors.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/colors.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getColors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getColors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/colors.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/colors.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/colors.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(color: IColor)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/colors.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            IColor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/colors.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IColor[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/colors.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/colors.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/colors.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Id', 'Name', 'Actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/colors.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/colors.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/colors.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/colors.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { IColor } from '@app/models';\nimport { productActions, selectColors } from '@app/store/products';\nimport { ColorsFormsComponent } from './components/colors-forms/colors-forms.component';\nimport { Icons } from '@app/shared';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-colors',\n  standalone: true,\n  templateUrl: './colors.component.html',\n  styleUrl: './colors.component.scss',\n  imports: [\n    RouterLink,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    MatButtonModule,\n    RouterLink,\n    ClipboardModule,\n  ],\n})\nexport class ColorsComponent {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  icons = Icons;\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  colors: IColor[] = [];\n\n  // Mat table config\n  displayColumms: string[] = ['Id', 'Name', 'Actions'];\n\n  dataSource: any;\n\n  ngOnInit(): void {\n    this.getColors();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  openDialog() {\n    this.dialog.open(ColorsFormsComponent, {\n      width: '50%',\n      height: '50%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openDeleteDialog(color: IColor) {\n    this.dialog.open(ColorsFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteColor: color,\n      },\n    });\n  }\n\n  private getColors() {\n    this.store.dispatch(productActions.getColors());\n    this.store\n      .select(selectColors)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.colors = d;\n          this.dataSource = new MatTableDataSource(this.colors);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Color (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 10 }}\n          \n        \n\n        \n          Name\n          {{ el.name }}\n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Color (+)                                              ID                      {{ el.id | slice : 0 : 10 }}                                    Name          {{ el.name }}                          Actions                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorsFormsComponent.html":{"url":"components/ColorsFormsComponent.html","title":"component - ColorsFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ColorsFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/colors/components/colors-forms/colors-forms.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-colors-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                InputComponent\n                                FormGroupComponent\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./colors-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./colors-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                deleteColor\n                            \n                            \n                                formType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewColor\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/colors/components/colors-forms/colors-forms.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewColor\n                        \n                    \n                \n            \n            \n                \naddNewColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/components/colors-forms/colors-forms.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/components/colors-forms/colors-forms.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteColor\n                        \n                    \n                \n            \n            \n                \nonDeleteColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/colors/components/colors-forms/colors-forms.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/components/colors-forms/colors-forms.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IColor\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/components/colors-forms/colors-forms.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/colors/components/colors-forms/colors-forms.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\n\nimport {\n  InputComponent,\n  FormGroupComponent,\n  markFormGroupTouched,\n} from '@app/shared';\nimport { productActions } from '@app/store/products';\nimport { IColor } from '@app/models';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n@Component({\n  selector: 'app-colors-forms',\n  standalone: true,\n  templateUrl: './colors-forms.component.html',\n  styleUrl: './colors-forms.component.scss',\n  imports: [\n    ReactiveFormsModule,\n    InputComponent,\n    FormGroupComponent,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n})\nexport class ColorsFormsComponent {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  formType: formType = 'Add';\n\n  deleteColor!: IColor;\n\n  addForm = this.fb.group({\n    name: ['', [Validators.required]],\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n\n    if (this.dialogData.deleteColor) {\n      this.deleteColor = this.dialogData.deleteColor;\n    }\n  }\n\n  addNewColor() {\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    this.store.dispatch(\n      productActions.createColor({\n        request: {\n          name: String(this.addForm.getRawValue().name),\n        },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  onDeleteColor() {\n    this.store.dispatch(\n      productActions.deleteColor({\n        request: { colorId: this.deleteColor.id },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        @if (formType === 'Add') {\n\n  \n    \n      \n        \n      \n    \n\n    Add\n  \n\n} @else {\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteColor.name }}\n    \n\n    \n      Yes\n      Cancel\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (formType === \\'Add\\') {                                  Add  } @else {            Are you sure you want to delete?      {{ deleteColor.name }}              Yes      Cancel      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColorsFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coup_url\n                            \n                            \n                                enq_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCoupon\n                            \n                            \n                                deleteCoupon\n                            \n                            \n                                deleteEnquiry\n                            \n                            \n                                getAllCoupons\n                            \n                            \n                                getAllEnquiries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/common.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCoupon\n                        \n                    \n                \n            \n            \n                \ncreateCoupon(dto: ICreateCoupon)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/common.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateCoupon\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCoupon\n                        \n                    \n                \n            \n            \n                \ndeleteCoupon(couponId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/common.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                couponId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEnquiry\n                        \n                    \n                \n            \n            \n                \ndeleteEnquiry(enquiryId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/common.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                enquiryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCoupons\n                        \n                    \n                \n            \n            \n                \ngetAllCoupons()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/common.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllEnquiries\n                        \n                    \n                \n            \n            \n                \ngetAllEnquiries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/common.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        coup_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/coupons'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/common.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enq_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/enquiries'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/common.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ICoupon, ICreateCoupon, IEnquiry } from '@app/models';\nimport { environment } from '@environments/environment.development';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class CommonService {\n  enq_url = environment.server_url + '/enquiries';\n  coup_url = environment.server_url + '/coupons';\n\n  constructor(private http: HttpClient) {}\n\n  // COUPONS\n  getAllCoupons(): Observable {\n    return this.http.get(`${this.coup_url}/all`);\n  }\n\n  createCoupon(dto: ICreateCoupon): Observable {\n    return this.http.post(`${this.coup_url}/create`, dto);\n  }\n\n  deleteCoupon(couponId: string): Observable {\n    return this.http.delete(`${this.coup_url}/${couponId}`);\n  }\n\n  // ENQUIRIES\n  getAllEnquiries(): Observable {\n    return this.http.get(`${this.enq_url}`);\n  }\n\n  deleteEnquiry(enquiryId: string): Observable {\n    return this.http.delete(`${this.enq_url}/${enquiryId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/controls/directives/control-value-accessor.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appControlValueAccessor]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                destroy$\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Private\n                                propagateTouched\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setFormControl\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: T | null) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFormControl\n                        \n                    \n                \n            \n            \n                \nsetFormControl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateTouched\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/directives/control-value-accessor.directive.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Inject, Injector, OnDestroy, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  FormControlDirective,\n  FormControlName,\n  FormGroupDirective,\n  NgControl,\n  Validators,\n} from '@angular/forms';\nimport { Subject, distinctUntilChanged, startWith, takeUntil, tap } from 'rxjs';\n\n@Directive({\n  selector: '[appControlValueAccessor]',\n  standalone: true,\n})\nexport class ControlValueAccessorDirective\n  implements OnInit, OnDestroy, ControlValueAccessor\n{\n  constructor(@Inject(Injector) private injector: Injector) {}\n\n  control: FormControl | undefined;\n\n  required = false;\n\n  isDisabled = false;\n\n  destroy$ = new Subject();\n\n  private propagateTouched!: () => T;\n\n  ngOnInit(): void {\n    this.setFormControl();\n    this.required = this.control?.hasValidator(Validators.required) ?? false;\n  }\n\n  setFormControl(): void {\n    const ngControl = this.injector.get(NgControl);\n\n    try {\n      switch (ngControl.constructor) {\n        case FormControlName:\n          this.control = this.injector\n            .get(FormGroupDirective)\n            .getControl(ngControl as FormControlName);\n\n          break;\n\n        default:\n          this.control = (ngControl as FormControlDirective)\n            .form as FormControl;\n          break;\n      }\n    } catch (error) {\n      this.control = new FormControl();\n    }\n  }\n\n  writeValue(value: T): void {\n    this.control\n      ? this.control?.setValue(value)\n      : (this.control = new FormControl(value));\n  }\n\n  registerOnChange(fn: (value: T | null) => T): void {\n    this.control?.valueChanges\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.control.value),\n        distinctUntilChanged(),\n        tap((val) => fn(val))\n      )\n      .subscribe();\n  }\n\n  registerOnTouched(fn: () => T): void {\n    this.propagateTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CouponFormsComponent.html":{"url":"components/CouponFormsComponent.html","title":"component - CouponFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CouponFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-coupon-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                DateComponent\n                                InputComponent\n                                FormGroupComponent\n                            MatDialogModule\n                            JsonPipe\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./coupon-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./coupon-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                deleteCoupon\n                            \n                            \n                                formType\n                            \n                            \n                                regexErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewCoupon\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                ondeleteCoupon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewCoupon\n                        \n                    \n                \n            \n            \n                \naddNewCoupon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ondeleteCoupon\n                        \n                    \n                \n            \n            \n                \nondeleteCoupon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    code: ['', [Validators.required]],\n    discount: [\n      '',\n      [\n        Validators.required,\n        Validators.pattern(regex.numbers),\n        Validators.min(1),\n        Validators.max(99),\n      ],\n    ],\n    expiresAt: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCoupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICoupon\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regexErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : regexErrors\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\n\nimport {\n  DateComponent,\n  FormGroupComponent,\n  InputComponent,\n  markFormGroupTouched,\n  regex,\n  regexErrors,\n} from '@app/shared';\nimport { commonActions } from '@app/store/common';\nimport { ICoupon } from '@app/models';\nimport { JsonPipe } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n\n@Component({\n  selector: 'app-coupon-forms',\n  standalone: true,\n  templateUrl: './coupon-forms.component.html',\n  styleUrl: './coupon-forms.component.scss',\n  imports: [\n    ReactiveFormsModule,\n    DateComponent,\n    InputComponent,\n    FormGroupComponent,\n    MatDialogModule,\n    JsonPipe,\n    MatButtonModule,\n  ],\n})\nexport class CouponFormsComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  formType: formType = 'Add';\n\n  deleteCoupon!: ICoupon;\n\n  regexErrors = regexErrors;\n\n  addForm = this.fb.group({\n    code: ['', [Validators.required]],\n    discount: [\n      '',\n      [\n        Validators.required,\n        Validators.pattern(regex.numbers),\n        Validators.min(1),\n        Validators.max(99),\n      ],\n    ],\n    expiresAt: ['', [Validators.required]],\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n\n    if (this.dialogData.deleteCoupon) {\n      this.deleteCoupon = this.dialogData.deleteCoupon;\n    }\n  }\n\n  addNewCoupon() {\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    const data = this.addForm.getRawValue();\n\n    this.store.dispatch(\n      commonActions.createCoupon({\n        request: {\n          code: String(data.code),\n          discount: Number(data.discount),\n          expiresAt: data.expiresAt ? new Date(data.expiresAt) : new Date(),\n        },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  ondeleteCoupon() {\n    this.store.dispatch(\n      commonActions.deleteCoupon({\n        couponId: this.deleteCoupon.id,\n      })\n    );\n\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        @if (formType === 'Add') {\n\n  \n    \n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n\n    Add\n  \n\n} @else {\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteCoupon.code }}\n    \n\n    \n      Yes\n      Cancel\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (formType === \\'Add\\') {                                                                          Add  } @else {            Are you sure you want to delete?      {{ deleteCoupon.code }}              Yes      Cancel      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'CouponFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CouponsComponent.html":{"url":"components/CouponsComponent.html","title":"component - CouponsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CouponsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/common/coupons/coupons.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-coupons\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            RouterLink\n                            DatePipe\n                            MatButtonModule\n                            ClipboardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./coupons.component.html\n            \n\n\n\n            \n                styleUrl\n                ./coupons.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coupons\n                            \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getCoupons\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/coupons.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCoupons\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoupons()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/coupons.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/coupons.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/coupons.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(coupon: ICreateCoupon)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/coupons.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coupon\n                                            \n                                                            ICreateCoupon\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/common/coupons/coupons.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        coupons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICoupon[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Id',\n    'Code',\n    'Discount',\n    'From',\n    'To',\n    'Actions',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/common/coupons/coupons.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe, SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ICoupon, ICreateCoupon } from '@app/models';\nimport { commonActions, selectCoupons } from '@app/store/common';\nimport { CouponFormsComponent } from './components/coupon-forms/coupon-forms.component';\nimport { Icons } from '@app/shared';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-coupons',\n  standalone: true,\n  templateUrl: './coupons.component.html',\n  styleUrl: './coupons.component.scss',\n  imports: [\n    RouterLink,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    RouterLink,\n    DatePipe,\n    MatButtonModule,\n    ClipboardModule,\n  ],\n})\nexport class CouponsComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  icons = Icons;\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  coupons: ICoupon[] = [];\n\n  // Mat table config\n  displayColumms: string[] = [\n    'Id',\n    'Code',\n    'Discount',\n    'From',\n    'To',\n    'Actions',\n  ];\n\n  dataSource: any;\n\n  ngOnInit(): void {\n    this.getCoupons();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  openDialog() {\n    this.dialog.open(CouponFormsComponent, {\n      width: '60%',\n      height: '60%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openDeleteDialog(coupon: ICreateCoupon) {\n    this.dialog.open(CouponFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteCoupon: coupon,\n      },\n    });\n  }\n\n  private getCoupons() {\n    this.store.dispatch(commonActions.getAllCoupons());\n    this.store\n      .select(selectCoupons)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        if (data) {\n          this.coupons = data;\n          this.dataSource = new MatTableDataSource(this.coupons);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Coupon (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 10 }}\n          \n        \n\n        \n          Code\n          {{ el.code }}\n        \n\n        \n          Discount\n          {{ el.discount * 100 }}\n        \n\n        \n          From\n          {{ el.createdAt | date }}\n        \n\n        \n          To\n          {{ el.expiresAt | date }}\n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Coupon (+)                                              ID                      {{ el.id | slice : 0 : 10 }}                                    Code          {{ el.code }}                          Discount          {{ el.discount * 100 }}                          From          {{ el.createdAt | date }}                          To          {{ el.expiresAt | date }}                          Actions                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'CouponsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/customer.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrders\n                        \n                    \n                \n            \n            \n                \ngetOrders(query?: OrderQueryType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/customer.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            OrderQueryType\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/customer'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/customer.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IOrderResponse, OrderQueryType } from '@app/models';\nimport { environment } from '@environments/environment.development';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerService {\n  url = environment.server_url + '/customer';\n\n  constructor(private http: HttpClient) {}\n\n  getOrders(query?: OrderQueryType): Observable {\n    const obj = {\n      limit: '',\n      page: '',\n      min: '',\n      max: '',\n    };\n\n    if (query) {\n      obj.page = String(query.page);\n      obj.limit = String(query.limit);\n      obj.max = String(query.max);\n      obj.min = String(query.min);\n    }\n\n    let params = new HttpParams({ fromObject: obj });\n\n    return this.http.get(`${this.url}/orders`, { params });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateComponent.html":{"url":"components/DateComponent.html","title":"component - DateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/controls/date/date.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ControlValueAccessorDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNativeDateAdapter()\n                                { provide: NG_VALUE_ACCESSOR, useExisting: DateComponent, multi: true }\n                \n            \n\n\n            \n                selector\n                app-date\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDatepickerModule\n                            NgStyle\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./date.component.html\n            \n\n\n\n            \n                styleUrl\n                ./date.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                labelColor\n                            \n                            \n                                minDate\n                            \n                            \n                                placeholder\n                            \n                            \n                                control\n                            \n                            \n                                destroy$\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Private\n                                propagateTouched\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setFormControl\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                labelColor\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/date/date.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/date/date.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelColor\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/date/date.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/date/date.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:84\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: T | null) => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:65\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:76\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:80\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFormControl\n                        \n                    \n                \n            \n            \n                \nsetFormControl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/date/date.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/date/date.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelColor\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/date/date.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/date/date.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/date/date.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateTouched\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { NgStyle } from '@angular/common';\nimport { ReactiveFormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { provideNativeDateAdapter } from '@angular/material/core';\n\nimport { ControlValueAccessorDirective } from '../directives/control-value-accessor.directive';\n\n@Component({\n  selector: 'app-date',\n  standalone: true,\n  imports: [MatDatepickerModule, NgStyle, ReactiveFormsModule],\n  templateUrl: './date.component.html',\n  styleUrl: './date.component.scss',\n  providers: [\n    provideNativeDateAdapter(),\n    { provide: NG_VALUE_ACCESSOR, useExisting: DateComponent, multi: true },\n  ],\n})\nexport class DateComponent extends ControlValueAccessorDirective {\n  minDate = new Date();\n\n  placeholder = input();\n\n  label = input.required();\n\n  id = input.required();\n\n  labelColor = input();\n}\n\n    \n\n    \n        @if (control) {\n{{ label() }}\n\n  \n  \n\n  \n\n}\n\n\n  Choose a date\n  \n  MM/DD/YYYY\n  \n  \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (control) {{{ label() }}      }  Choose a date    MM/DD/YYYY     -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EnquiriesComponent.html":{"url":"components/EnquiriesComponent.html","title":"component - EnquiriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EnquiriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/common/enquiries/enquiries.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-enquiries\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./enquiries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./enquiries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-enquiries',\n  standalone: true,\n  imports: [],\n  templateUrl: './enquiries.component.html',\n  styleUrl: './enquiries.component.scss'\n})\nexport class EnquiriesComponent {\n\n}\n\n    \n\n    \n        enquiries works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'enquiries works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'EnquiriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnquiryService.html":{"url":"injectables/EnquiryService.html","title":"injectable - EnquiryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EnquiryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/enquiry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEnquiry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/enquiry.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEnquiry\n                        \n                    \n                \n            \n            \n                \ncreateEnquiry(dto: ICreateEnquiry)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/enquiry.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        ICreateEnquiry\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/enquiries'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/enquiry.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ICreateEnquiry, IEnquiryResponse } from '@app/models';\nimport { environment } from '@environments/environment.development';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnquiryService {\n  url = environment.server_url + '/enquiries';\n\n  constructor(private http: HttpClient) {}\n\n  createEnquiry(dto: ICreateEnquiry): Observable {\n    return this.http.post(this.url, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            MatCardModule\n                            MatButtonModule\n                            ReactiveFormsModule\n                                FormGroupComponent\n                                InputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data$\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                regexErrors\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/forgot-password/forgot-password.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest({\n    isLoading: this.store.select(selectIsLoading),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/forgot-password/forgot-password.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/forgot-password/forgot-password.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern(regex.email)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/forgot-password/forgot-password.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regexErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : regexErrors\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/forgot-password/forgot-password.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AsyncPipe } from '@angular/common';\nimport { combineLatest } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { FormGroupComponent, InputComponent } from '@shared/index';\n\nimport { markFormGroupTouched, regex, regexErrors } from '@app/shared';\nimport { authActions, selectIsLoading } from '@app/store/auth';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n  imports: [\n    AsyncPipe,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    FormGroupComponent,\n    InputComponent,\n  ],\n})\nexport class ForgotPasswordComponent {\n  fb = inject(FormBuilder);\n\n  store = inject(Store);\n\n  regexErrors = regexErrors;\n\n  data$ = combineLatest({\n    isLoading: this.store.select(selectIsLoading),\n  });\n\n  form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern(regex.email)]],\n  });\n\n  submit() {\n    if (this.form.invalid) {\n      markFormGroupTouched(this.form);\n      return;\n    }\n\n    this.store.dispatch(\n      authActions.forgotPassword({ request: this.form.getRawValue() })\n    );\n  }\n}\n\n    \n\n    \n        @if (data$ | async; as data) {\n\n  \n    \n      Forgot Password\n      \n        Please input the email you registerd with\n      \n\n      \n        \n          \n            \n              \n            \n\n            \n              \n                Submit\n              \n            \n          \n        \n      \n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (data$ | async; as data) {            Forgot Password              Please input the email you registerd with                                                                                                              Submit                                                        }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormGroupComponent.html":{"url":"components/FormGroupComponent.html","title":"component - FormGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/controls/form-group/form-group.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-group\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./form-group.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-group.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                patternError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                patternError\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorKey\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/form-group/form-group.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        patternError\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/form-group/form-group.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/form-group/form-group.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/form-group/form-group.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patternError\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/form-group/form-group.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorKey\n                    \n                \n\n                \n                    \n                        geterrorKey()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/controls/form-group/form-group.component.ts:20\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-group',\n  standalone: true,\n  imports: [],\n  templateUrl: './form-group.component.html',\n  styleUrl: './form-group.component.scss',\n})\nexport class FormGroupComponent {\n  control = input.required();\n\n  patternError = input();\n\n  hasError() {\n    return this.control() && this.control().invalid && this.control().touched;\n  }\n\n  get errorKey() {\n    return (\n      this.control() &&\n      this.control().errors &&\n      Object.keys(this.control().errors as any)[0]\n    );\n  }\n}\n\n    \n\n    \n        \n  \n\n  @if (control() && errorKey) {\n  \n    @switch (errorKey) { @case ('required') {This field is required} @case ('pwMatch') {Passwords dont match} @case\n    ('requiredTrue') {This field is required} @case ('max') {Maximum {{control().errors?.[errorKey].max}}} @case ('min') {Minimum {{control().errors?.[errorKey].min}}} @case ('minlength') {At least {{control().errors?.[errorKey].requiredLength}} characters} @case ('maxlength') {No more than {{control().errors?.[errorKey].requiredLength}}} @case ('pattern') {\n    \n      @if (patternError()) {\n      {{ patternError() }}\n      } @else {\n      Pattern does not match\n\n      }\n    \n    } }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (control() && errorKey) {      @switch (errorKey) { @case (\\'required\\') {This field is required} @case (\\'pwMatch\\') {Passwords dont match} @case    (\\'requiredTrue\\') {This field is required} @case (\\'max\\') {Maximum {{control().errors?.[errorKey].max}}} @case (\\'min\\') {Minimum {{control().errors?.[errorKey].min}}} @case (\\'minlength\\') {At least {{control().errors?.[errorKey].requiredLength}} characters} @case (\\'maxlength\\') {No more than {{control().errors?.[errorKey].requiredLength}}} @case (\\'pattern\\') {          @if (patternError()) {      {{ patternError() }}      } @else {      Pattern does not match      }        } }    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            CurrencyPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                orders\n                            \n                            \n                                products\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    ordersPlaced: 0,\n    revenue: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    total: 0,\n    unavailable: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    total: 0,\n    blocked: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { customerActions, selectOrders } from '@app/store/customer';\nimport { productActions, selectProducts } from '@app/store/products';\nimport { selectDbUsers, userActions } from '@app/store/user';\nimport { Store } from '@ngrx/store';\nimport { takeUntil } from 'rxjs';\nimport { Subject } from 'rxjs/internal/Subject';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [MatCardModule, CurrencyPipe],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  constructor(private store: Store) {}\n\n  destroy$ = new Subject();\n\n  products = {\n    total: 0,\n    unavailable: 0,\n  };\n\n  orders = {\n    ordersPlaced: 0,\n    revenue: 0,\n  };\n\n  users = {\n    total: 0,\n    blocked: 0,\n  };\n\n  ngOnInit(): void {\n    this.store.dispatch(userActions.getAllUsers({}));\n    this.store\n      .select(selectDbUsers)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((res) => {\n        if (res) {\n          this.users = {\n            blocked: res.filter((u) => u.blocked).length,\n            total: res.length,\n          };\n        }\n      });\n\n    this.store.dispatch(productActions.getAllProducts({}));\n    this.store\n      .select(selectProducts)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((res) => {\n        if (res) {\n          this.products = {\n            unavailable: res.filter((u) => !u.available).length,\n            total: res.length,\n          };\n        }\n      });\n\n    this.store.dispatch(customerActions.getOrders({}));\n    this.store\n      .select(selectOrders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((res) => {\n        if (res) {\n          this.orders = {\n            ordersPlaced: res.length,\n            revenue: res\n              .map((c) => c.totalPriceAfterDiscount)\n              .reduce((a, b) => a + b, 0),\n          };\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Users\n    \n    \n      \n        Total Users\n        {{ users.total }}\n      \n      \n        Blocked User (s)\n        {{ users.blocked }}\n      \n    \n  \n\n  \n    \n      Products\n    \n    \n      \n        Total Products\n        {{ products.total }}\n      \n      \n        Unavailable Products\n        {{ products.unavailable }}\n      \n    \n  \n\n  \n    \n      Orders\n    \n    \n      \n        Orders Placed\n        {{ orders.ordersPlaced }}\n      \n    \n  \n\n  \n    \n      Revenue\n    \n    \n      \n        Total\n        {{ orders.revenue | currency }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Users                      Total Users        {{ users.total }}                    Blocked User (s)        {{ users.blocked }}                        Products                      Total Products        {{ products.total }}                    Unavailable Products        {{ products.unavailable }}                        Orders                      Orders Placed        {{ orders.ordersPlaced }}                        Revenue                      Total        {{ orders.revenue | currency }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAddress.html":{"url":"interfaces/IAddress.html","title":"interface - IAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address1\n                                        \n                                \n                                \n                                        \n                                            address2\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            other\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            zipCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        other\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        other:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ICart, IOrderResponse } from '../customer';\n\nexport interface IAddress {\n  id: string;\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  state: string;\n  city: string;\n  address1: string;\n  address2: string;\n  other: string;\n}\n\nexport interface ICreateAddress {\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  address1: string;\n  city: string;\n  state: string;\n  other?: string;\n  address2?: string;\n}\n\nexport interface IUser {\n  id: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile: string;\n  image: string | null;\n  Address: IAddress;\n  blocked: boolean;\n  updatedAt: string;\n  createdAt: string;\n  role: string;\n  token?: string;\n  Cart: ICart[];\n  Orders: IOrderResponse[];\n  Compare: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n  Wishlist: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n}\n\nexport interface IUpdateUser {\n  firstname?: string;\n  lastname?: string;\n  mobile?: string;\n  Address?: IAddress;\n}\n\nexport type UsersQueryType = {\n  fname?: string;\n  lname?: string;\n  email?: string;\n  mobile?: string;\n  page?: number;\n  limit?: number;\n};\n\n// class CustomAddressUpdateDto {\n//   firstname?: string;\n//   lastname?: string;\n//   zipCode?: number;\n//   address1?: string;\n//   city?: string;\n//   state?: string;\n//   address2?: string;\n//   other?: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthStoreState.html":{"url":"interfaces/IAuthStoreState.html","title":"interface - IAuthStoreState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthStoreState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/auth/auth.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authUser\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authUser:     IUser | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IUser | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from '@app/models';\n\nexport interface IAuthStoreState {\n  isLoading: boolean;\n  error: any;\n  authUser: IUser | null | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBackendError.html":{"url":"interfaces/IBackendError.html","title":"interface - IBackendError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBackendError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBackendSuccess {\n  message: string;\n  statusCode: number;\n}\n\nexport interface IBackendError {\n  message: string;\n  error: string;\n  statusCode: number;\n}\n\nexport interface IBulkDeleteResponse {\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBackendSuccess.html":{"url":"interfaces/IBackendSuccess.html","title":"interface - IBackendSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBackendSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBackendSuccess {\n  message: string;\n  statusCode: number;\n}\n\nexport interface IBackendError {\n  message: string;\n  error: string;\n  statusCode: number;\n}\n\nexport interface IBulkDeleteResponse {\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBlog.html":{"url":"interfaces/IBlog.html","title":"interface - IBlog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBlog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/blogs/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Author\n                                        \n                                \n                                \n                                        \n                                            Category\n                                        \n                                \n                                \n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Author:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Category:         IBlogCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IBlogCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBlogCategory {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateBlogCategory {\n  name: string;\n}\n\nexport interface ICreateBlog {\n  title: string;\n  desc: string;\n  categoryId: string;\n  image?: any;\n}\n\nexport interface IBlog {\n  id: string;\n  title: string;\n  desc: string;\n  views: number;\n  categoryId: string;\n  Category: IBlogCategory;\n  Author: { firstname: string; lastname: string; id: string; image?: string };\n  updatedAt: string;\n  image?: string;\n}\n\n// for optional query route paramenters,\n// for some reason ngrx refused optional interfaces hence type here.\nexport type BlogQueryType = {\n  cat: string;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBlogCategory.html":{"url":"interfaces/IBlogCategory.html","title":"interface - IBlogCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBlogCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/blogs/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBlogCategory {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateBlogCategory {\n  name: string;\n}\n\nexport interface ICreateBlog {\n  title: string;\n  desc: string;\n  categoryId: string;\n  image?: any;\n}\n\nexport interface IBlog {\n  id: string;\n  title: string;\n  desc: string;\n  views: number;\n  categoryId: string;\n  Category: IBlogCategory;\n  Author: { firstname: string; lastname: string; id: string; image?: string };\n  updatedAt: string;\n  image?: string;\n}\n\n// for optional query route paramenters,\n// for some reason ngrx refused optional interfaces hence type here.\nexport type BlogQueryType = {\n  cat: string;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBlogStoreState.html":{"url":"interfaces/IBlogStoreState.html","title":"interface - IBlogStoreState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBlogStoreState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/blogs/blogs.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blog\n                                        \n                                \n                                \n                                        \n                                            blogCategories\n                                        \n                                \n                                \n                                        \n                                            blogs\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blog:         IBlog | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IBlog | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blogCategories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blogCategories:     IBlogCategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IBlogCategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blogs:         IBlog[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IBlog[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IBlog, IBlogCategory } from '@app/models';\n\nexport interface IBlogStoreState {\n  isLoading: boolean;\n  error: any;\n  blogs: IBlog[];\n  blog: IBlog | null | undefined;\n  blogCategories: IBlogCategory[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBulkDeleteResponse.html":{"url":"interfaces/IBulkDeleteResponse.html","title":"interface - IBulkDeleteResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBulkDeleteResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBackendSuccess {\n  message: string;\n  statusCode: number;\n}\n\nexport interface IBackendError {\n  message: string;\n  error: string;\n  statusCode: number;\n}\n\nexport interface IBulkDeleteResponse {\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICart.html":{"url":"interfaces/ICart.html","title":"interface - ICart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customer/cart/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            Product\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Product:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  id: string;\n  color: string;\n  price: number;\n  quantity: number;\n  productId: string;\n  userId: string;\n  Product: {\n    title: string;\n    images: string[];\n  };\n}\n\nexport interface ICreateCart {\n  productId: string;\n  quantity: number;\n  color?: string;\n}\n\nexport interface ICartData {\n  quantity: number;\n  totalPrice: number;\n  cart: ICart[] | null | undefined;\n}\n\nexport interface IDeleteCatProductRequest {\n  cartId: string;\n  productId: string;\n}\n\nexport interface IUpdateCartRequest {\n  cartId: string;\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICartData.html":{"url":"interfaces/ICartData.html","title":"interface - ICartData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICartData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customer/cart/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cart\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cart:         ICart[] | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICart[] | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  id: string;\n  color: string;\n  price: number;\n  quantity: number;\n  productId: string;\n  userId: string;\n  Product: {\n    title: string;\n    images: string[];\n  };\n}\n\nexport interface ICreateCart {\n  productId: string;\n  quantity: number;\n  color?: string;\n}\n\nexport interface ICartData {\n  quantity: number;\n  totalPrice: number;\n  cart: ICart[] | null | undefined;\n}\n\nexport interface IDeleteCatProductRequest {\n  cartId: string;\n  productId: string;\n}\n\nexport interface IUpdateCartRequest {\n  cartId: string;\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IColor.html":{"url":"interfaces/IColor.html","title":"interface - IColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product-supp/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProductCategory {\n  id: string;\n  name: string;\n}\n\nexport interface IProductBrand {\n  id: string;\n  name: string;\n}\n\nexport interface IColor {\n  id: string;\n  name: string;\n}\n\nexport interface ITag {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateCommonProductSup {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommonStoreState.html":{"url":"interfaces/ICommonStoreState.html","title":"interface - ICommonStoreState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommonStoreState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/common/common.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coupons\n                                        \n                                \n                                \n                                        \n                                            enquiries\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            isFailed\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                                \n                                        \n                                            isSuccess\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coupons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coupons:         ICoupon[] | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICoupon[] | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enquiries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enquiries:         IEnquiry[] | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IEnquiry[] | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFailed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFailed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccess\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ICoupon, IEnquiry } from '@app/models';\n\nexport interface ICommonStoreState {\n  isLoading: boolean;\n  isSuccess: boolean;\n  isFailed: boolean;\n  error: any;\n  enquiries: IEnquiry[] | undefined | null;\n  coupons: ICoupon[] | undefined | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IControlItem.html":{"url":"interfaces/IControlItem.html","title":"interface - IControlItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IControlItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/controls/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         ControlItemValueType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ControlItemValueType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ControlItemValueType = number | boolean | string;\n\nexport interface IControlItem {\n  label: string;\n  value: ControlItemValueType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoupon.html":{"url":"interfaces/ICoupon.html","title":"interface - ICoupon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICoupon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/common/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            discount\n                                        \n                                \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            used\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        used\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        used:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateCoupon {\n  code: string;\n  expiresAt: Date;\n  discount: number;\n}\n\nexport interface ICoupon {\n  id: string;\n  code: string;\n  createdAt: Date;\n  expiresAt: Date;\n  discount: number;\n  used: boolean;\n}\n\nexport interface IEnquiry {\n  id: string;\n  name: string;\n  email: string;\n  mobile: string;\n  comment: string;\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateAddress.html":{"url":"interfaces/ICreateAddress.html","title":"interface - ICreateAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            address2\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            other\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            zipCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        other\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        other:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ICart, IOrderResponse } from '../customer';\n\nexport interface IAddress {\n  id: string;\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  state: string;\n  city: string;\n  address1: string;\n  address2: string;\n  other: string;\n}\n\nexport interface ICreateAddress {\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  address1: string;\n  city: string;\n  state: string;\n  other?: string;\n  address2?: string;\n}\n\nexport interface IUser {\n  id: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile: string;\n  image: string | null;\n  Address: IAddress;\n  blocked: boolean;\n  updatedAt: string;\n  createdAt: string;\n  role: string;\n  token?: string;\n  Cart: ICart[];\n  Orders: IOrderResponse[];\n  Compare: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n  Wishlist: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n}\n\nexport interface IUpdateUser {\n  firstname?: string;\n  lastname?: string;\n  mobile?: string;\n  Address?: IAddress;\n}\n\nexport type UsersQueryType = {\n  fname?: string;\n  lname?: string;\n  email?: string;\n  mobile?: string;\n  page?: number;\n  limit?: number;\n};\n\n// class CustomAddressUpdateDto {\n//   firstname?: string;\n//   lastname?: string;\n//   zipCode?: number;\n//   address1?: string;\n//   city?: string;\n//   state?: string;\n//   address2?: string;\n//   other?: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateBlog.html":{"url":"interfaces/ICreateBlog.html","title":"interface - ICreateBlog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateBlog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/blogs/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBlogCategory {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateBlogCategory {\n  name: string;\n}\n\nexport interface ICreateBlog {\n  title: string;\n  desc: string;\n  categoryId: string;\n  image?: any;\n}\n\nexport interface IBlog {\n  id: string;\n  title: string;\n  desc: string;\n  views: number;\n  categoryId: string;\n  Category: IBlogCategory;\n  Author: { firstname: string; lastname: string; id: string; image?: string };\n  updatedAt: string;\n  image?: string;\n}\n\n// for optional query route paramenters,\n// for some reason ngrx refused optional interfaces hence type here.\nexport type BlogQueryType = {\n  cat: string;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateBlogCategory.html":{"url":"interfaces/ICreateBlogCategory.html","title":"interface - ICreateBlogCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateBlogCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/blogs/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBlogCategory {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateBlogCategory {\n  name: string;\n}\n\nexport interface ICreateBlog {\n  title: string;\n  desc: string;\n  categoryId: string;\n  image?: any;\n}\n\nexport interface IBlog {\n  id: string;\n  title: string;\n  desc: string;\n  views: number;\n  categoryId: string;\n  Category: IBlogCategory;\n  Author: { firstname: string; lastname: string; id: string; image?: string };\n  updatedAt: string;\n  image?: string;\n}\n\n// for optional query route paramenters,\n// for some reason ngrx refused optional interfaces hence type here.\nexport type BlogQueryType = {\n  cat: string;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateCart.html":{"url":"interfaces/ICreateCart.html","title":"interface - ICreateCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customer/cart/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  id: string;\n  color: string;\n  price: number;\n  quantity: number;\n  productId: string;\n  userId: string;\n  Product: {\n    title: string;\n    images: string[];\n  };\n}\n\nexport interface ICreateCart {\n  productId: string;\n  quantity: number;\n  color?: string;\n}\n\nexport interface ICartData {\n  quantity: number;\n  totalPrice: number;\n  cart: ICart[] | null | undefined;\n}\n\nexport interface IDeleteCatProductRequest {\n  cartId: string;\n  productId: string;\n}\n\nexport interface IUpdateCartRequest {\n  cartId: string;\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateCommonProductSup.html":{"url":"interfaces/ICreateCommonProductSup.html","title":"interface - ICreateCommonProductSup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateCommonProductSup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product-supp/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProductCategory {\n  id: string;\n  name: string;\n}\n\nexport interface IProductBrand {\n  id: string;\n  name: string;\n}\n\nexport interface IColor {\n  id: string;\n  name: string;\n}\n\nexport interface ITag {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateCommonProductSup {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateCoupon.html":{"url":"interfaces/ICreateCoupon.html","title":"interface - ICreateCoupon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateCoupon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/common/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            discount\n                                        \n                                \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateCoupon {\n  code: string;\n  expiresAt: Date;\n  discount: number;\n}\n\nexport interface ICoupon {\n  id: string;\n  code: string;\n  createdAt: Date;\n  expiresAt: Date;\n  discount: number;\n  used: boolean;\n}\n\nexport interface IEnquiry {\n  id: string;\n  name: string;\n  email: string;\n  mobile: string;\n  comment: string;\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateProduct.html":{"url":"interfaces/ICreateProduct.html","title":"interface - ICreateProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brandId\n                                        \n                                \n                                \n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                        \n                                            colors\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colors:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IReview } from '../reviews';\n\ninterface INamedProductAttr {\n  id: string;\n  name: string;\n}\n\nexport interface IProduct {\n  id: string;\n  title: string;\n  desc: string;\n  price: number;\n  quantity: number;\n  sold: number;\n  totalRating: number;\n  available: boolean;\n  images: string[];\n  Brand: INamedProductAttr;\n  Category: INamedProductAttr;\n  Colors: INamedProductAttr[];\n  Tags: INamedProductAttr[];\n  Reviews?: IReview[];\n}\n\nexport interface ICreateProduct {\n  title: string;\n  desc: string;\n  price: number;\n  quantity: number;\n  categoryId: string;\n  brandId: string;\n  colors: { name: string }[];\n  tags: { name: string }[];\n  // images?: any;\n}\n\nexport type availableType = 'true' | 'false';\n\nexport type ProductQueryType = {\n  cat?: string;\n  color?: string;\n  brand?: string;\n  tag?: string;\n  min?: number;\n  max?: number;\n  available?: availableType;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateReview.html":{"url":"interfaces/ICreateReview.html","title":"interface - ICreateReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/reviews/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            star\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        star:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface User {\n  id: string;\n  firstname: string;\n  lastname: string;\n  image: string;\n}\n\nexport interface IReview {\n  id: string;\n  comment: string;\n  productId: string;\n  star: number;\n  User: User;\n  updatedAt?: string;\n}\n\nexport interface ICreateReview {\n  star: number;\n  comment: string;\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomerStoreState.html":{"url":"interfaces/ICustomerStoreState.html","title":"interface - ICustomerStoreState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICustomerStoreState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/customer/customer.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                                \n                                        \n                                            orders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orders:         IOrderResponse[] | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IOrderResponse[] | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IOrderResponse } from '@app/models';\n\nexport interface ICustomerStoreState {\n  isLoading: boolean;\n  error: any;\n  orders: IOrderResponse[] | null | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IData.html":{"url":"interfaces/IData.html","title":"interface - IData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/layout/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            routerLink\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBlog,\n  faBookSkull,\n  faCartPlus,\n  faHomeAlt,\n  faLayerGroup,\n  faPalette,\n  faTags,\n  faUserAlt,\n  faUsers,\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface IData {\n  icon: IconDefinition;\n  label: string;\n  routerLink: string;\n}\n\nexport const NavData: IData[] = [\n  { label: 'Dashboard', icon: faHomeAlt, routerLink: '/home' },\n  // { label: 'Profile', icon: faUserAlt, routerLink: '/home/profile' },\n  { label: 'Users', icon: faUsers, routerLink: '/home/users' },\n  { label: 'Products', icon: faCartPlus, routerLink: '/home/products' },\n  { label: 'Tags', icon: faTags, routerLink: '/home/tags' },\n  { label: 'Brands', icon: faLayerGroup, routerLink: '/home/brands' },\n  { label: 'Categories', icon: faLayerGroup, routerLink: '/home/categories' },\n  { label: 'Colors', icon: faPalette, routerLink: '/home/colors' },\n  { label: 'Coupons', icon: faHomeAlt, routerLink: '/home/coupons' },\n  { label: 'Blogs', icon: faBlog, routerLink: '/home/blogs' },\n  {\n    label: 'BlogCategories',\n    icon: faBlog,\n    routerLink: '/home/blog-categories',\n  },\n  { label: 'Orders', icon: faBookSkull, routerLink: '/home/orders' },\n  //   { label: 'Orders', icon: faHomeAlt, routerLink: '/' },\n  //   { label: 'Orders', icon: faHomeAlt, routerLink: '/' },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDeleteCatProductRequest.html":{"url":"interfaces/IDeleteCatProductRequest.html","title":"interface - IDeleteCatProductRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDeleteCatProductRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customer/cart/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cartId\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cartId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  id: string;\n  color: string;\n  price: number;\n  quantity: number;\n  productId: string;\n  userId: string;\n  Product: {\n    title: string;\n    images: string[];\n  };\n}\n\nexport interface ICreateCart {\n  productId: string;\n  quantity: number;\n  color?: string;\n}\n\nexport interface ICartData {\n  quantity: number;\n  totalPrice: number;\n  cart: ICart[] | null | undefined;\n}\n\nexport interface IDeleteCatProductRequest {\n  cartId: string;\n  productId: string;\n}\n\nexport interface IUpdateCartRequest {\n  cartId: string;\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnquiry.html":{"url":"interfaces/IEnquiry.html","title":"interface - IEnquiry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEnquiry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/common/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mobile\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateCoupon {\n  code: string;\n  expiresAt: Date;\n  discount: number;\n}\n\nexport interface ICoupon {\n  id: string;\n  code: string;\n  createdAt: Date;\n  expiresAt: Date;\n  discount: number;\n  used: boolean;\n}\n\nexport interface IEnquiry {\n  id: string;\n  name: string;\n  email: string;\n  mobile: string;\n  comment: string;\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForgotPassword.html":{"url":"interfaces/IForgotPassword.html","title":"interface - IForgotPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IForgotPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IRegister {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile?: string;\n}\n\nexport interface IForgotPassword {\n  email: string;\n}\n\nexport interface IResetPassword {\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogin.html":{"url":"interfaces/ILogin.html","title":"interface - ILogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IRegister {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile?: string;\n}\n\nexport interface IForgotPassword {\n  email: string;\n}\n\nexport interface IResetPassword {\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INamedProductAttr.html":{"url":"interfaces/INamedProductAttr.html","title":"interface - INamedProductAttr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INamedProductAttr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IReview } from '../reviews';\n\ninterface INamedProductAttr {\n  id: string;\n  name: string;\n}\n\nexport interface IProduct {\n  id: string;\n  title: string;\n  desc: string;\n  price: number;\n  quantity: number;\n  sold: number;\n  totalRating: number;\n  available: boolean;\n  images: string[];\n  Brand: INamedProductAttr;\n  Category: INamedProductAttr;\n  Colors: INamedProductAttr[];\n  Tags: INamedProductAttr[];\n  Reviews?: IReview[];\n}\n\nexport interface ICreateProduct {\n  title: string;\n  desc: string;\n  price: number;\n  quantity: number;\n  categoryId: string;\n  brandId: string;\n  colors: { name: string }[];\n  tags: { name: string }[];\n  // images?: any;\n}\n\nexport type availableType = 'true' | 'false';\n\nexport type ProductQueryType = {\n  cat?: string;\n  color?: string;\n  brand?: string;\n  tag?: string;\n  min?: number;\n  max?: number;\n  available?: availableType;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOrderItemResponse.html":{"url":"interfaces/IOrderItemResponse.html","title":"interface - IOrderItemResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOrderItemResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customer/order/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            orderId\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IOrderItemResponse {\n  id: string;\n  quantity: number;\n  price: number;\n  color: string;\n  productId: string;\n  orderId: string;\n}\n\nexport interface IOrderResponse {\n  id: string;\n  paidAt: string;\n  totalPrice: number;\n  totalPriceAfterDiscount: number;\n  addressId: string;\n  userId: string;\n  createdAt: string;\n  updatedAt: string;\n  OrderItems: Array;\n}\n\nexport type OrderQueryType = {\n  min?: string;\n  limit?: string;\n  page?: string;\n  max?: string;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOrderResponse.html":{"url":"interfaces/IOrderResponse.html","title":"interface - IOrderResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOrderResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customer/order/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addressId\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            OrderItems\n                                        \n                                \n                                \n                                        \n                                            paidAt\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                                \n                                        \n                                            totalPriceAfterDiscount\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addressId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        OrderItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        OrderItems:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paidAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paidAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPriceAfterDiscount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPriceAfterDiscount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IOrderItemResponse {\n  id: string;\n  quantity: number;\n  price: number;\n  color: string;\n  productId: string;\n  orderId: string;\n}\n\nexport interface IOrderResponse {\n  id: string;\n  paidAt: string;\n  totalPrice: number;\n  totalPriceAfterDiscount: number;\n  addressId: string;\n  userId: string;\n  createdAt: string;\n  updatedAt: string;\n  OrderItems: Array;\n}\n\nexport type OrderQueryType = {\n  min?: string;\n  limit?: string;\n  page?: string;\n  max?: string;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProduct.html":{"url":"interfaces/IProduct.html","title":"interface - IProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            available\n                                        \n                                \n                                \n                                        \n                                            Brand\n                                        \n                                \n                                \n                                        \n                                            Category\n                                        \n                                \n                                \n                                        \n                                            Colors\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Reviews\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            Tags\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            totalRating\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Brand:         INamedProductAttr\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         INamedProductAttr\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Category:         INamedProductAttr\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         INamedProductAttr\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Colors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Colors:         INamedProductAttr[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         INamedProductAttr[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Reviews\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Reviews:         IReview[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IReview[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Tags:         INamedProductAttr[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         INamedProductAttr[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IReview } from '../reviews';\n\ninterface INamedProductAttr {\n  id: string;\n  name: string;\n}\n\nexport interface IProduct {\n  id: string;\n  title: string;\n  desc: string;\n  price: number;\n  quantity: number;\n  sold: number;\n  totalRating: number;\n  available: boolean;\n  images: string[];\n  Brand: INamedProductAttr;\n  Category: INamedProductAttr;\n  Colors: INamedProductAttr[];\n  Tags: INamedProductAttr[];\n  Reviews?: IReview[];\n}\n\nexport interface ICreateProduct {\n  title: string;\n  desc: string;\n  price: number;\n  quantity: number;\n  categoryId: string;\n  brandId: string;\n  colors: { name: string }[];\n  tags: { name: string }[];\n  // images?: any;\n}\n\nexport type availableType = 'true' | 'false';\n\nexport type ProductQueryType = {\n  cat?: string;\n  color?: string;\n  brand?: string;\n  tag?: string;\n  min?: number;\n  max?: number;\n  available?: availableType;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProductBrand.html":{"url":"interfaces/IProductBrand.html","title":"interface - IProductBrand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProductBrand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product-supp/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProductCategory {\n  id: string;\n  name: string;\n}\n\nexport interface IProductBrand {\n  id: string;\n  name: string;\n}\n\nexport interface IColor {\n  id: string;\n  name: string;\n}\n\nexport interface ITag {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateCommonProductSup {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProductCategory.html":{"url":"interfaces/IProductCategory.html","title":"interface - IProductCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProductCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product-supp/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProductCategory {\n  id: string;\n  name: string;\n}\n\nexport interface IProductBrand {\n  id: string;\n  name: string;\n}\n\nexport interface IColor {\n  id: string;\n  name: string;\n}\n\nexport interface ITag {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateCommonProductSup {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProductStoreState.html":{"url":"interfaces/IProductStoreState.html","title":"interface - IProductStoreState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProductStoreState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/products/products.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brands\n                                        \n                                \n                                \n                                        \n                                            colors\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                                \n                                        \n                                            productCategory\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brands\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brands:     IProductBrand[] | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IProductBrand[] | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colors:         IColor[] | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IColor[] | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         IProduct | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProduct | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productCategory:     IProductCategory[] | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IProductCategory[] | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         IProduct[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProduct[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         ITag[] | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITag[] | null | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IColor,\n  IProduct,\n  IProductBrand,\n  IProductCategory,\n  ITag,\n} from '@app/models';\n\nexport interface IProductStoreState {\n  isLoading: boolean;\n  error: any;\n  products: IProduct[];\n  product: IProduct | null | undefined;\n  productCategory: IProductCategory[] | null | undefined;\n  tags: ITag[] | null | undefined;\n  colors: IColor[] | null | undefined;\n  brands: IProductBrand[] | null | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRegister.html":{"url":"interfaces/IRegister.html","title":"interface - IRegister","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRegister\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mobile\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IRegister {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile?: string;\n}\n\nexport interface IForgotPassword {\n  email: string;\n}\n\nexport interface IResetPassword {\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResetPassword.html":{"url":"interfaces/IResetPassword.html","title":"interface - IResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IRegister {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile?: string;\n}\n\nexport interface IForgotPassword {\n  email: string;\n}\n\nexport interface IResetPassword {\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IReview.html":{"url":"interfaces/IReview.html","title":"interface - IReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/reviews/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            star\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            User\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        star:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        User:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface User {\n  id: string;\n  firstname: string;\n  lastname: string;\n  image: string;\n}\n\nexport interface IReview {\n  id: string;\n  comment: string;\n  productId: string;\n  star: number;\n  User: User;\n  updatedAt?: string;\n}\n\nexport interface ICreateReview {\n  star: number;\n  comment: string;\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITag.html":{"url":"interfaces/ITag.html","title":"interface - ITag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/product-supp/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProductCategory {\n  id: string;\n  name: string;\n}\n\nexport interface IProductBrand {\n  id: string;\n  name: string;\n}\n\nexport interface IColor {\n  id: string;\n  name: string;\n}\n\nexport interface ITag {\n  id: string;\n  name: string;\n}\n\nexport interface ICreateCommonProductSup {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateCartRequest.html":{"url":"interfaces/IUpdateCartRequest.html","title":"interface - IUpdateCartRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateCartRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customer/cart/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cartId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cartId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  id: string;\n  color: string;\n  price: number;\n  quantity: number;\n  productId: string;\n  userId: string;\n  Product: {\n    title: string;\n    images: string[];\n  };\n}\n\nexport interface ICreateCart {\n  productId: string;\n  quantity: number;\n  color?: string;\n}\n\nexport interface ICartData {\n  quantity: number;\n  totalPrice: number;\n  cart: ICart[] | null | undefined;\n}\n\nexport interface IDeleteCatProductRequest {\n  cartId: string;\n  productId: string;\n}\n\nexport interface IUpdateCartRequest {\n  cartId: string;\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateUser.html":{"url":"interfaces/IUpdateUser.html","title":"interface - IUpdateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mobile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Address:         IAddress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAddress\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ICart, IOrderResponse } from '../customer';\n\nexport interface IAddress {\n  id: string;\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  state: string;\n  city: string;\n  address1: string;\n  address2: string;\n  other: string;\n}\n\nexport interface ICreateAddress {\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  address1: string;\n  city: string;\n  state: string;\n  other?: string;\n  address2?: string;\n}\n\nexport interface IUser {\n  id: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile: string;\n  image: string | null;\n  Address: IAddress;\n  blocked: boolean;\n  updatedAt: string;\n  createdAt: string;\n  role: string;\n  token?: string;\n  Cart: ICart[];\n  Orders: IOrderResponse[];\n  Compare: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n  Wishlist: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n}\n\nexport interface IUpdateUser {\n  firstname?: string;\n  lastname?: string;\n  mobile?: string;\n  Address?: IAddress;\n}\n\nexport type UsersQueryType = {\n  fname?: string;\n  lname?: string;\n  email?: string;\n  mobile?: string;\n  page?: number;\n  limit?: number;\n};\n\n// class CustomAddressUpdateDto {\n//   firstname?: string;\n//   lastname?: string;\n//   zipCode?: number;\n//   address1?: string;\n//   city?: string;\n//   state?: string;\n//   address2?: string;\n//   other?: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Address\n                                        \n                                \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            Cart\n                                        \n                                \n                                \n                                        \n                                            Compare\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            mobile\n                                        \n                                \n                                \n                                        \n                                            Orders\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            Wishlist\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Address:         IAddress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAddress\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Cart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Cart:         ICart[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICart[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Compare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Compare:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Orders:         IOrderResponse[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IOrderResponse[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Wishlist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Wishlist:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ICart, IOrderResponse } from '../customer';\n\nexport interface IAddress {\n  id: string;\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  state: string;\n  city: string;\n  address1: string;\n  address2: string;\n  other: string;\n}\n\nexport interface ICreateAddress {\n  firstname: string;\n  lastname: string;\n  zipCode: number;\n  address1: string;\n  city: string;\n  state: string;\n  other?: string;\n  address2?: string;\n}\n\nexport interface IUser {\n  id: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  mobile: string;\n  image: string | null;\n  Address: IAddress;\n  blocked: boolean;\n  updatedAt: string;\n  createdAt: string;\n  role: string;\n  token?: string;\n  Cart: ICart[];\n  Orders: IOrderResponse[];\n  Compare: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n  Wishlist: {\n    id: string;\n    productId: string;\n    Product: {\n      title: string;\n      price: string;\n    };\n  }[];\n}\n\nexport interface IUpdateUser {\n  firstname?: string;\n  lastname?: string;\n  mobile?: string;\n  Address?: IAddress;\n}\n\nexport type UsersQueryType = {\n  fname?: string;\n  lname?: string;\n  email?: string;\n  mobile?: string;\n  page?: number;\n  limit?: number;\n};\n\n// class CustomAddressUpdateDto {\n//   firstname?: string;\n//   lastname?: string;\n//   zipCode?: number;\n//   address1?: string;\n//   city?: string;\n//   state?: string;\n//   address2?: string;\n//   other?: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserStoreState.html":{"url":"interfaces/IUserStoreState.html","title":"interface - IUserStoreState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserStoreState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/user/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dbUser\n                                        \n                                \n                                \n                                        \n                                            dbUsers\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            isFailed\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                                \n                                        \n                                            isSuccess\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dbUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dbUser:     IUser | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IUser | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbUsers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dbUsers:     IUser[] | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IUser[] | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFailed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFailed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccess\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSuccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from '@app/models';\n\nexport interface IUserStoreState {\n  isLoading: boolean;\n  isSuccess: boolean;\n  isFailed: boolean;\n  error: any;\n  dbUsers: IUser[] | undefined | null;\n  dbUser: IUser | undefined | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/controls/input/input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ControlValueAccessorDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, useExisting: InputComponent, multi: true }\n                \n            \n\n\n            \n                selector\n                app-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgStyle\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                labelColor\n                            \n                            \n                                placeholder\n                            \n                            \n                                type\n                            \n                            \n                                control\n                            \n                            \n                                destroy$\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Private\n                                propagateTouched\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setFormControl\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                labelColor\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/input/input.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/input/input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelColor\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/input/input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/input/input.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:84\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: T | null) => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:65\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:76\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:80\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFormControl\n                        \n                    \n                \n            \n            \n                \nsetFormControl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/input/input.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/input/input.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelColor\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/input/input.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/input/input.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('text')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/input/input.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateTouched\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { InputType } from '../types/controls.type';\nimport { ControlValueAccessorDirective } from '../directives/control-value-accessor.directive';\nimport { NgStyle } from '@angular/common';\n\n@Component({\n  selector: 'app-input',\n  standalone: true,\n  templateUrl: './input.component.html',\n  styleUrl: './input.component.scss',\n  imports: [ReactiveFormsModule, NgStyle],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: InputComponent, multi: true },\n  ],\n})\nexport class InputComponent extends ControlValueAccessorDirective {\n  placeholder = input();\n\n  label = input.required();\n\n  id = input.required();\n\n  type = input('text');\n\n  labelColor = input();\n}\n\n    \n\n    \n        @if (control) {\n{{ label() }}\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (control) {{{ label() }}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout/layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            MatSidenavModule\n                            MatToolbarModule\n                            FontAwesomeModule\n                            RouterLink\n                            AsyncPipe\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                navData\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                refreshAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout/layout.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layout/layout/layout.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshAccessToken\n                        \n                    \n                \n            \n            \n                \nrefreshAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layout/layout/layout.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout/layout.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : NavData\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout/layout.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(selectAuthUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/layout/layout.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { NavData } from './data';\nimport { Icons } from '@app/shared';\nimport { AsyncPipe } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { IUser } from '@app/models';\nimport { Store } from '@ngrx/store';\nimport { authActions, selectAuthUser } from '@app/store/auth';\n// import {} from \"@angular/material\"\n\n@Component({\n  selector: 'app-layout',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    MatSidenavModule,\n    MatToolbarModule,\n    FontAwesomeModule,\n    RouterLink,\n    AsyncPipe,\n    MatMenuModule,\n  ],\n  templateUrl: './layout.component.html',\n  styleUrl: './layout.component.scss',\n})\nexport class LayoutComponent {\n  constructor(private store: Store) {}\n\n  navData = NavData;\n\n  icons = Icons;\n\n  user$: Observable =\n    this.store.select(selectAuthUser);\n\n  logout() {\n    this.store.dispatch(authActions.logout());\n  }\n\n  refreshAccessToken() {\n    this.store.dispatch(authActions.refreshToken());\n  }\n}\n\n    \n\n    \n        @if (user$|async; as user) {\n\n  \n    logo\n\n    \n      @for (data of navData; track $index) {\n      \n         \n        {{ data.label }}\n      \n      }\n    \n  \n  \n    \n      \n        \n      \n      \n        \n          \n          {{ user.firstname }} {{ user.lastname }} \n        \n        \n          \n            Profile\n            \n              Refresh Token\n            \n            Logout\n          \n      \n    \n    \n      \n    \n  \n\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (user$|async; as user) {      logo          @for (data of navData; track $index) {                       {{ data.label }}            }                                                                  {{ user.firstname }} {{ user.lastname }}                                       Profile                          Refresh Token                        Logout                                    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/indicators/loader/loader.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                \n            \n\n\n\n            \n                template\n                @if (loading$ | async) {\n\n  \n\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                detectRouteTransitions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/indicators/loader/loader.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        detectRouteTransitions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/indicators/loader/loader.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/indicators/loader/loader.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/indicators/loader/loader.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/indicators/loader/loader.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/indicators/loader/loader.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subject, delay, takeUntil, tap } from 'rxjs';\nimport {\n  RouteConfigLoadEnd,\n  RouteConfigLoadStart,\n  Router,\n} from '@angular/router';\n\nimport { LoaderService } from './loader.service';\n\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [AsyncPipe],\n  template: `\n    @if (loading$ | async) {\n    \n      \n    \n    }\n  `,\n})\nexport class LoaderComponent implements OnInit, OnDestroy {\n  loading$!: Observable;\n\n  destroy$ = new Subject();\n\n  @Input()\n  detectRouteTransitions = false;\n\n  constructor(private loaderService: LoaderService, private router: Router) {\n    this.loading$ = this.loaderService.loading$;\n  }\n\n  ngOnInit(): void {\n    if (this.detectRouteTransitions) {\n      this.router.events\n        .pipe(\n          tap((event) => {\n            if (event instanceof RouteConfigLoadStart) {\n              this.loaderService.showLoading();\n            } else if (event instanceof RouteConfigLoadEnd) {\n              this.loaderService.hideLoading();\n            }\n          }),\n          takeUntil(this.destroy$),\n          delay(2000)\n        )\n        .subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(false);\n    this.destroy$.complete();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loading$ | async) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/indicators/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loading\n                            \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideLoading\n                            \n                            \n                                showLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hideLoading\n                        \n                    \n                \n            \n            \n                \nhideLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/indicators/loader/loader.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLoading\n                        \n                    \n                \n            \n            \n                \nshowLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/indicators/loader/loader.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/indicators/loader/loader.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._loading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/indicators/loader/loader.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoaderService {\n  private _loading = new BehaviorSubject(false);\n\n  loading$ = this._loading.asObservable();\n\n  showLoading() {\n    this._loading.next(true);\n  }\n\n  hideLoading() {\n    this._loading.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            MatCardModule\n                            MatButtonModule\n                            ReactiveFormsModule\n                            RouterLink\n                                FormGroupComponent\n                                InputComponent\n                                PasswordComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data$\n                            \n                            \n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                regexErrors\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/login/login.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest({\n    isLoading: this.store.select(selectIsLoading),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern(regex.email)]],\n    password: ['', [Validators.required, Validators.pattern(regex.password)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regexErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : regexErrors\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AsyncPipe } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { combineLatest } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {\n  FormGroupComponent,\n  InputComponent,\n  PasswordComponent,\n} from '@shared/index';\n\nimport { markFormGroupTouched, regex, regexErrors } from '@app/shared';\nimport { authActions, selectIsLoading } from '@app/store/auth';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n  imports: [\n    AsyncPipe,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    RouterLink,\n    FormGroupComponent,\n    InputComponent,\n    PasswordComponent,\n  ],\n})\nexport class LoginComponent {\n  fb = inject(FormBuilder);\n\n  store = inject(Store);\n\n  regexErrors = regexErrors;\n\n  data$ = combineLatest({\n    isLoading: this.store.select(selectIsLoading),\n  });\n\n  form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.pattern(regex.email)]],\n    password: ['', [Validators.required, Validators.pattern(regex.password)]],\n  });\n\n  submit() {\n    if (this.form.invalid) {\n      markFormGroupTouched(this.form);\n      return;\n    }\n\n    this.store.dispatch(\n      authActions.login({ request: this.form.getRawValue() })\n    );\n  }\n}\n\n    \n\n    \n        @if (data$ | async; as data) {\n\n  \n    \n      Login\n\n      \n        \n          \n            \n              \n            \n\n            \n              \n            \n\n            \n              Forgot Password?\n            \n\n            \n              \n                Login\n              \n            \n          \n        \n      \n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (data$ | async; as data) {            Login                                                                                                                              Forgot Password?                                                      Login                                                        }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrdersComponent.html":{"url":"components/OrdersComponent.html","title":"component - OrdersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrdersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/orders/orders.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-orders\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            JsonPipe\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            RouterLink\n                            DatePipe\n                            CurrencyPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./orders.component.html\n            \n\n\n\n            \n                styleUrl\n                ./orders.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                orders\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getOrders\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/orders/orders.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(order: IOrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            IOrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(order: IOrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            IOrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Id', 'UserId', 'Total Price', 'Updated At']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOrderResponse[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe, DatePipe, JsonPipe, SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { IOrderResponse } from '@app/models';\nimport { customerActions, selectOrders } from '@app/store/customer';\nimport { Icons } from '@app/shared';\n\n@Component({\n  selector: 'app-orders',\n  standalone: true,\n  templateUrl: './orders.component.html',\n  styleUrl: './orders.component.scss',\n  imports: [\n    RouterLink,\n    JsonPipe,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    RouterLink,\n    DatePipe,\n    CurrencyPipe,\n  ],\n})\nexport class OrdersComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  // Mat table config\n  displayColumms: string[] = ['Id', 'UserId', 'Total Price', 'Updated At'];\n\n  dataSource: any;\n\n  // end mat table config\n\n  orders: IOrderResponse[] = [];\n\n  icons = Icons;\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  private getOrders() {\n    this.store.dispatch(customerActions.getOrders({}));\n    this.store\n      .select(selectOrders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.orders = d;\n          this.dataSource = new MatTableDataSource(this.orders);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  openEditDialog(order: IOrderResponse) {}\n\n  openDeleteDialog(order: IOrderResponse) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          ID\n          {{ el.id | slice : 0 : 6 }}\n        \n\n        \n          UserId\n          \n            {{ el.userId | slice : 0 : 15 }}\n          \n        \n\n        \n          Total Price\n          {{ el.totalPrice | currency }}\n        \n\n        \n          Updated At\n          {{ el.updatedAt | date }}\n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            ID          {{ el.id | slice : 0 : 6 }}                          UserId                      {{ el.userId | slice : 0 : 15 }}                                    Total Price          {{ el.totalPrice | currency }}                          Updated At          {{ el.updatedAt | date }}                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrdersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/controls/password/password.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ControlValueAccessorDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, useExisting: PasswordComponent, multi: true }\n                \n            \n\n\n            \n                selector\n                app-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                type\n                            \n                            \n                                control\n                            \n                            \n                                destroy$\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Private\n                                propagateTouched\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                togglePassword\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setFormControl\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/password/password.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/password/password.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/password/password.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/controls/password/password.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:84\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: T | null) => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:65\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:76\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:80\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFormControl\n                        \n                    \n                \n            \n            \n                \nsetFormControl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/password/password.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/password/password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/password/password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PasswordType\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/password/password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateTouched\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ReactiveFormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ControlValueAccessorDirective } from '../directives/control-value-accessor.directive';\n\ntype PasswordType = 'text' | 'password';\n\n@Component({\n  selector: 'app-password',\n  standalone: true,\n  templateUrl: './password.component.html',\n  styleUrl: './password.component.scss',\n  imports: [ReactiveFormsModule],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: PasswordComponent, multi: true },\n  ],\n})\nexport class PasswordComponent extends ControlValueAccessorDirective {\n  placeholder = input();\n\n  label = input.required();\n\n  id = input.required();\n\n  type: PasswordType = 'password';\n\n  togglePassword(): void {\n    this.type = this.type === 'password' ? 'text' : 'password';\n  }\n}\n\n    \n\n    \n        @if (control) {\n{{ label() }}\n\n  \n\n  {{\n    type === \"password\" ? \"Show\" : \"Hide\"\n  }}\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (control) {{{ label() }}    {{    type === \"password\" ? \"Show\" : \"Hide\"  }}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductComponent.html":{"url":"components/ProductComponent.html","title":"component - ProductComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/product/product.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatGridListModule\n                            MatDialogModule\n                            MatCardModule\n                                RatingComponent\n                            CurrencyPipe\n                                ColorComponent\n                                ProductFormsComponent\n                            MatButtonModule\n                            MatTabsModule\n                            TimesincePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                product\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProduct\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openUpdateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/product/product.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(product: IProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            IProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUpdateForm\n                        \n                    \n                \n            \n            \n                \nopenUpdateForm(product: IProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            IProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProduct\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { ActivatedRoute } from '@angular/router';\nimport { IProduct } from '@app/models';\nimport { ColorComponent, RatingComponent, TimesincePipe } from '@app/shared';\nimport { productActions, selectProduct } from '@app/store/products';\nimport { Store } from '@ngrx/store';\nimport { Subject, switchMap, takeUntil } from 'rxjs';\n\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ProductFormsComponent } from '../products/components/product-forms/product-forms.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-product',\n  standalone: true,\n  templateUrl: './product.component.html',\n  styleUrl: './product.component.scss',\n  imports: [\n    MatGridListModule,\n    MatDialogModule,\n    MatCardModule,\n    RatingComponent,\n    CurrencyPipe,\n    ColorComponent,\n    ProductFormsComponent,\n    MatButtonModule,\n    MatTabsModule,\n    TimesincePipe,\n  ],\n})\nexport class ProductComponent implements OnInit, OnDestroy {\n  constructor(\n    private dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private store: Store\n  ) {}\n\n  destroy$ = new Subject();\n\n  product!: IProduct;\n\n  ngOnInit() {\n    this.getProduct();\n  }\n\n  getProduct() {\n    this.activatedRoute.paramMap\n      .pipe(\n        takeUntil(this.destroy$),\n        switchMap((data) => {\n          this.store.dispatch(\n            productActions.getSingleProduct({\n              productId: String(data.get('id')),\n            })\n          );\n          return this.store.select(selectProduct);\n        })\n      )\n      .subscribe((data) => {\n        if (data) {\n          this.product = data;\n        }\n      });\n  }\n\n  openUpdateForm(product: IProduct) {\n    this.dialog.open(ProductFormsComponent, {\n      width: '60%',\n      height: '90%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Edit',\n        editProduct: product,\n      },\n    });\n  }\n\n  openDeleteDialog(product: IProduct) {\n    this.dialog.open(ProductFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteProduct: product,\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        @if (product) {\n\n\n  \n    \n      \n        \n          \n            @for (img of product.images; track $index) {\n            \n              \n            \n            }\n          \n          \n            \n          \n        \n        \n          {{ product.title }}\n\n          {{ product.price | currency }}\n\n          \n            @if (product.totalRating) {\n\n            \n              \n            \n            }\n            \n              ({{ product.Reviews?.length }}) reviews\n            \n          \n\n          \n            Brand\n            {{ product.Brand.name }}\n          \n\n          \n            Category\n            {{ product.Category.name }}\n          \n\n          \n            Tags\n            \n              @for (tag of product.Tags; track $index) {\n              {{ tag.name }}\n              }\n            \n          \n\n          \n            Available\n            \n              {{ product.quantity }}\n            \n          \n          \n            Sold\n            \n              {{ product.sold }}\n            \n          \n\n          \n            Colors\n            \n              \n            \n          \n\n          \n            \n              Delete\n            \n            \n              Update\n            \n          \n        \n      \n    \n  \n  \n    \n      \n        @for (rev of product.Reviews; track $index) {\n        \n          \n            \n            \n              {{ rev.User.firstname }} {{ rev.User.lastname }}\n              \n              {{\n                rev.updatedAt | timesince\n              }}\n            \n          \n          \n            \n            \n              {{ rev.comment }}\n            \n          \n        \n        } @empty {\n        \n          \n            No Reviews\n            \n              &LeftArrow;\n              Back \n            \n          \n        \n        }\n      \n    \n  \n\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (product) {                                          @for (img of product.images; track $index) {                                                  }                                                                    {{ product.title }}          {{ product.price | currency }}                      @if (product.totalRating) {                                                  }                          ({{ product.Reviews?.length }}) reviews                                            Brand            {{ product.Brand.name }}                                Category            {{ product.Category.name }}                                Tags                          @for (tag of product.Tags; track $index) {              {{ tag.name }}              }                                            Available                          {{ product.quantity }}                                            Sold                          {{ product.sold }}                                            Colors                                                                                    Delete                                      Update                                                              @for (rev of product.Reviews; track $index) {                                                        {{ rev.User.firstname }} {{ rev.User.lastname }}                            {{                rev.updatedAt | timesince              }}                                                                      {{ rev.comment }}                                      } @empty {                              No Reviews                          ←              Back                                       }            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProductComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductFormsComponent.html":{"url":"components/ProductFormsComponent.html","title":"component - ProductFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/products/components/product-forms/product-forms.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                InputComponent\n                                FormGroupComponent\n                                TextAreaComponent\n                                SelectComponent\n                            AsyncPipe\n                            JsonPipe\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                data$\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                editForm\n                            \n                            \n                                editProduct\n                            \n                            \n                                formType\n                            \n                            \n                                regexErrors\n                            \n                            \n                                selectedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewProduct\n                            \n                            \n                                    Private\n                                initializeEditProduct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteProduct\n                            \n                            \n                                onEditProduct\n                            \n                            \n                                onSelectFiles\n                            \n                            \n                                    Private\n                                transformFromControl\n                            \n                            \n                                    Private\n                                transFormToControl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewProduct\n                        \n                    \n                \n            \n            \n                \naddNewProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeEditProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeEditProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteProduct\n                        \n                    \n                \n            \n            \n                \nonDeleteProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditProduct\n                        \n                    \n                \n            \n            \n                \nonEditProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectFiles\n                        \n                    \n                \n            \n            \n                \nonSelectFiles(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transformFromControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformFromControl(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transFormToControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    transFormToControl(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IControlItem\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    title: ['', [Validators.required]],\n    desc: ['', [Validators.required]],\n    price: ['', [Validators.required, Validators.pattern(regex.numbers)]],\n    quantity: ['', [Validators.required, Validators.pattern(regex.numbers)]],\n    brandId: ['', [Validators.required]],\n    categoryId: ['', [Validators.required]],\n    colors: ['', [Validators.required]],\n    tags: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest({\n    tags: this.store\n      .select(selectTags)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n    categories: this.store\n      .select(selectProductCategory)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n    colors: this.store\n      .select(selectColors)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n    brands: this.store\n      .select(selectBrands)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProduct\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    title: '',\n    desc: '',\n    price: [0, [Validators.pattern(regex.numbers)]],\n    quantity: [0, [Validators.pattern(regex.numbers)]],\n    brandId: '',\n    categoryId: '',\n    colors: '',\n    tags: '',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProduct\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regexErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : regexErrors\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/components/product-forms/product-forms.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { AsyncPipe, JsonPipe } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { map, combineLatest } from 'rxjs';\n\nimport {\n  InputComponent,\n  FormGroupComponent,\n  regex,\n  regexErrors,\n  markFormGroupTouched,\n  TextAreaComponent,\n  SelectComponent,\n} from '@app/shared';\nimport { IControlItem, ICreateProduct, IProduct, IUser } from '@app/models';\nimport {\n  productActions,\n  selectBrands,\n  selectColors,\n  selectProductCategory,\n  selectTags,\n} from '@app/store/products';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n\n@Component({\n  selector: 'app-product-forms',\n  standalone: true,\n  templateUrl: './product-forms.component.html',\n  styleUrl: './product-forms.component.scss',\n  imports: [\n    ReactiveFormsModule,\n    InputComponent,\n    FormGroupComponent,\n    TextAreaComponent,\n    SelectComponent,\n    AsyncPipe,\n    JsonPipe,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n})\nexport class ProductFormsComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  selectedFiles!: FileList;\n\n  regexErrors = regexErrors;\n\n  formType: formType = 'Add';\n\n  editProduct!: IProduct;\n\n  deleteProduct!: IProduct;\n\n  data$ = combineLatest({\n    tags: this.store\n      .select(selectTags)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n    categories: this.store\n      .select(selectProductCategory)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n    colors: this.store\n      .select(selectColors)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n    brands: this.store\n      .select(selectBrands)\n      .pipe(map((data) => data?.map((x) => this.transFormToControl(x)))),\n  });\n\n  addForm = this.fb.group({\n    title: ['', [Validators.required]],\n    desc: ['', [Validators.required]],\n    price: ['', [Validators.required, Validators.pattern(regex.numbers)]],\n    quantity: ['', [Validators.required, Validators.pattern(regex.numbers)]],\n    brandId: ['', [Validators.required]],\n    categoryId: ['', [Validators.required]],\n    colors: ['', [Validators.required]],\n    tags: ['', [Validators.required]],\n  });\n\n  editForm = this.fb.group({\n    title: '',\n    desc: '',\n    price: [0, [Validators.pattern(regex.numbers)]],\n    quantity: [0, [Validators.pattern(regex.numbers)]],\n    brandId: '',\n    categoryId: '',\n    colors: '',\n    tags: '',\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n    if (this.dialogData.editProduct) {\n      this.editProduct = this.dialogData.editProduct;\n    }\n    if (this.dialogData.deleteProduct) {\n      this.deleteProduct = this.dialogData.deleteProduct;\n    }\n\n    this.initializeEditProduct();\n  }\n\n  onSelectFiles(e: Event) {\n    const input = e.target as HTMLInputElement;\n    if (input?.files && input.files.length > 0) {\n      this.selectedFiles = input.files;\n    }\n  }\n\n  addNewProduct() {\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    const data = this.addForm.getRawValue();\n    // backend requires tags and names in the following format.\n    const tags: { name: string }[] = [];\n\n    const colors: { name: string }[] = [];\n\n    if (data.colors?.length && data.tags?.length) {\n      for (let c of data.colors) {\n        const d = Object.assign({}, { name: c });\n        colors.push(d);\n      }\n      for (let c of data.tags) {\n        const d = Object.assign({}, { name: c });\n        tags.push(d);\n      }\n    }\n    const formData = new FormData();\n\n    for (let i = 0; i ) => {\n      return Object.assign({}, user);\n    };\n\n    this.dialogRef.close();\n  }\n\n  onDeleteProduct() {\n    this.store.dispatch(\n      productActions.deleteProduct({\n        request: { productId: this.deleteProduct.id },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  private initializeEditProduct() {\n    if (this.editProduct) {\n      const p = this.editProduct;\n\n      this.editForm.setValue({\n        brandId: p.Brand.id,\n        categoryId: p.Category.id,\n        desc: p.desc,\n        price: p.price,\n        quantity: p.quantity,\n        title: p.title,\n        colors: this.transformFromControl(p.Colors),\n        tags: this.transformFromControl(p.Tags),\n      });\n\n      this.transformFromControl(p.Colors);\n    }\n  }\n\n  private transFormToControl(data: any): IControlItem {\n    return Object.assign({}, { label: data.name, value: data.id });\n  }\n  private transformFromControl(data: any) {\n    return data.map((x: any) => x.name);\n  }\n}\n\n    \n\n    \n        @if (data$|async; as data) { @if (formType === 'Add') {\n\n  \n    \n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        Images\n        \n      \n      \n        \n      \n    \n\n    \n      Add\n    \n  \n\n}@else if( formType === \"Edit\") {\n\n  \n    \n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n\n    Update\n  \n\n} @else {\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteProduct.title }}\n    \n\n    \n      Yes\n      Cancel\n    \n  \n\n} }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (data$|async; as data) { @if (formType === \\'Add\\') {                                                                                                                                                                Images                                                Add      }@else if( formType === \"Edit\") {                                                                                                                                                                              Update  } @else {            Are you sure you want to delete?      {{ deleteProduct.title }}              Yes      Cancel      } }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProductFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brands_url\n                            \n                            \n                                cat_url\n                            \n                            \n                                color_url\n                            \n                            \n                                tags_url\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createColor\n                            \n                            \n                                createProduct\n                            \n                            \n                                createProductBrand\n                            \n                            \n                                createProductCategory\n                            \n                            \n                                createTag\n                            \n                            \n                                deleteColor\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                deleteProductBrand\n                            \n                            \n                                deleteProductCategory\n                            \n                            \n                                deleteTag\n                            \n                            \n                                getAllBrands\n                            \n                            \n                                getAllProductCategories\n                            \n                            \n                                getAllProducts\n                            \n                            \n                                getAllTags\n                            \n                            \n                                getColors\n                            \n                            \n                                getSingleProduct\n                            \n                            \n                                updateProduct\n                            \n                            \n                                uploadProductImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/product.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createColor\n                        \n                    \n                \n            \n            \n                \ncreateColor(dto: ICreateCommonProductSup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateCommonProductSup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(dto: ICreateProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProductBrand\n                        \n                    \n                \n            \n            \n                \ncreateProductBrand(dto: ICreateCommonProductSup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateCommonProductSup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProductCategory\n                        \n                    \n                \n            \n            \n                \ncreateProductCategory(dto: ICreateCommonProductSup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateCommonProductSup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTag\n                        \n                    \n                \n            \n            \n                \ncreateTag(dto: ICreateCommonProductSup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ICreateCommonProductSup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteColor\n                        \n                    \n                \n            \n            \n                \ndeleteColor(colorId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colorId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProductBrand\n                        \n                    \n                \n            \n            \n                \ndeleteProductBrand(catId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                catId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProductCategory\n                        \n                    \n                \n            \n            \n                \ndeleteProductCategory(catId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                catId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTag\n                        \n                    \n                \n            \n            \n                \ndeleteTag(tagId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tagId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBrands\n                        \n                    \n                \n            \n            \n                \ngetAllBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProductCategories\n                        \n                    \n                \n            \n            \n                \ngetAllProductCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts(query?: ProductQueryType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            ProductQueryType\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTags\n                        \n                    \n                \n            \n            \n                \ngetAllTags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColors\n                        \n                    \n                \n            \n            \n                \ngetColors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleProduct\n                        \n                    \n                \n            \n            \n                \ngetSingleProduct(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(dto: Partial, productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadProductImages\n                        \n                    \n                \n            \n            \n                \nuploadProductImages(productId: string, images: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/product.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                images\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brands_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/brands'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/product.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cat_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/product.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/colors'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/product.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/tags'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/product.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/products'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/product.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  IColor,\n  ICreateCommonProductSup,\n  ICreateProduct,\n  IProduct,\n  IProductBrand,\n  IProductCategory,\n  ITag,\n  ProductQueryType,\n} from '@app/models';\nimport { environment } from '@environments/environment.development';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  url = environment.server_url + '/products';\n\n  cat_url = environment.server_url + '/categories';\n\n  color_url = environment.server_url + '/colors';\n\n  tags_url = environment.server_url + '/tags';\n\n  brands_url = environment.server_url + '/brands';\n\n  constructor(private http: HttpClient) {}\n\n  getAllProducts(query?: ProductQueryType): Observable {\n    const obj = {\n      cat: '',\n      available: '',\n      color: '',\n      brand: '',\n      tag: '',\n      min: '',\n      max: '',\n    };\n\n    if (query) {\n      obj.cat = String(query.cat);\n      obj.available = String(query.available);\n      obj.color = String(query.color);\n      obj.brand = String(query.brand);\n      obj.tag = String(query.tag);\n      obj.max = String(query.max);\n      obj.min = String(query.min);\n    }\n\n    let params = new HttpParams({ fromObject: obj });\n    return this.http.get(this.url, { params });\n  }\n\n  getSingleProduct(productId: string): Observable {\n    return this.http.get(`${this.url}/${productId}`);\n  }\n\n  uploadProductImages(productId: string, images: any): Observable {\n    return this.http.post(`${this.url}/upload/${productId}`, images);\n  }\n\n  createProduct(dto: ICreateProduct): Observable {\n    return this.http.post(this.url, dto);\n  }\n\n  updateProduct(\n    dto: Partial,\n    productId: string\n  ): Observable {\n    return this.http.put(`${this.url}/${productId}`, dto);\n  }\n\n  deleteProduct(productId: string): Observable {\n    return this.http.delete(`${this.url}/${productId}`);\n  }\n\n  // TAGS\n  getAllTags(): Observable {\n    return this.http.get(this.tags_url);\n  }\n  createTag(dto: ICreateCommonProductSup): Observable {\n    return this.http.post(this.tags_url, dto);\n  }\n  deleteTag(tagId: string): Observable {\n    return this.http.delete(`${this.tags_url}/${tagId}`);\n  }\n\n  // COLORS\n\n  getColors(): Observable {\n    return this.http.get(this.color_url);\n  }\n  createColor(dto: ICreateCommonProductSup): Observable {\n    return this.http.post(this.color_url, dto);\n  }\n  deleteColor(colorId: string): Observable {\n    return this.http.delete(`${this.color_url}/${colorId}`);\n  }\n\n  // PRODUCT CATEGORIES\n  getAllProductCategories(): Observable {\n    return this.http.get(this.cat_url);\n  }\n  createProductCategory(\n    dto: ICreateCommonProductSup\n  ): Observable {\n    return this.http.post(this.cat_url, dto);\n  }\n  deleteProductCategory(catId: string): Observable {\n    return this.http.delete(`${this.cat_url}/${catId}`);\n  }\n\n  // BRANDS\n  getAllBrands(): Observable {\n    return this.http.get(this.brands_url);\n  }\n  createProductBrand(dto: ICreateCommonProductSup): Observable {\n    return this.http.post(this.brands_url, dto);\n  }\n  deleteProductBrand(catId: string): Observable {\n    return this.http.delete(`${this.brands_url}/${catId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductsComponent.html":{"url":"components/ProductsComponent.html","title":"component - ProductsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/products/products.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-products\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            RouterLink\n                            JsonPipe\n                            MatTableModule\n                                ColorComponent\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            RouterLink\n                            ClipboardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./products.component.html\n            \n\n\n\n            \n                styleUrl\n                ./products.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                products\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getProducts\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/products/products.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(product: IProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            IProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(product: IProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            IProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Id',\n    'Image',\n    'Title',\n    'Color',\n    'Brand',\n    'Available',\n    'Actions',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProduct[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { JsonPipe, SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nimport { IProduct } from '@app/models';\nimport { productActions, selectProducts } from '@app/store/products';\nimport { Icons, ColorComponent } from '@app/shared';\nimport { ProductFormsComponent } from './components/product-forms/product-forms.component';\n\n@Component({\n  selector: 'app-products',\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    RouterLink,\n    JsonPipe,\n    MatTableModule,\n    ColorComponent,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    RouterLink,\n    ClipboardModule,\n  ],\n  templateUrl: './products.component.html',\n  styleUrl: './products.component.scss',\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  // Mat table config\n  displayColumms: string[] = [\n    'Id',\n    'Image',\n    'Title',\n    'Color',\n    'Brand',\n    'Available',\n    'Actions',\n  ];\n\n  dataSource: any;\n\n  // end mat table config\n\n  products: IProduct[] = [];\n\n  icons = Icons;\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  private getProducts() {\n    this.store.dispatch(productActions.getAllProducts({}));\n    this.store\n      .select(selectProducts)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.products = d;\n          this.dataSource = new MatTableDataSource(this.products);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  openDialog() {\n    this.dialog.open(ProductFormsComponent, {\n      width: '60%',\n      height: '90%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openEditDialog(product: IProduct) {\n    this.dialog.open(ProductFormsComponent, {\n      width: '60%',\n      height: '90%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Edit',\n        editProduct: product,\n      },\n    });\n  }\n\n  openDeleteDialog(product: IProduct) {\n    this.dialog.open(ProductFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteProduct: product,\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Product (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 6 }}\n          \n        \n\n        \n          Image\n          \n            \n          \n        \n\n        \n          Title\n          {{ el.title | slice : 0 : 15 }}\n        \n\n        \n          Color\n          \n            \n          \n        \n\n        \n          Brand\n          {{ el.Brand.name }}\n        \n\n        \n          Available\n          \n            @if (el.available) {\n            in Stock\n            } @if (!el.available) {\n            Out of Stock\n            }\n          \n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Product (+)                                              ID                      {{ el.id | slice : 0 : 6 }}                                    Image                                                          Title          {{ el.title | slice : 0 : 15 }}                          Color                                                          Brand          {{ el.Brand.name }}                          Available                      @if (el.available) {            in Stock            } @if (!el.available) {            Out of Stock            }                                    Actions                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RatingComponent.html":{"url":"components/RatingComponent.html","title":"component - RatingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RatingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/ui/color/rating/rating.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rating\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FontAwesomeModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./rating.component.html\n            \n\n\n\n            \n                styleUrl\n                ./rating.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                size\n                            \n                            \n                                stars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showStarRate\n                            \n                            \n                                starArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                            \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/ui/color/rating/rating.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stars\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/ui/color/rating/rating.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showStarRate\n                        \n                    \n                \n            \n            \n                \nshowStarRate(num: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ui/color/rating/rating.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                num\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        starArray\n                        \n                    \n                \n            \n            \n                \nstarArray()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ui/color/rating/rating.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/ui/color/rating/rating.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/ui/color/rating/rating.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stars\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/ui/color/rating/rating.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { Icons } from '@app/shared/icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SizeProp } from '@fortawesome/fontawesome-svg-core';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-rating',\n  standalone: true,\n  imports: [FontAwesomeModule],\n  templateUrl: './rating.component.html',\n  styleUrl: './rating.component.scss',\n})\nexport class RatingComponent {\n  icons = Icons;\n\n  stars = input.required();\n\n  size = input();\n\n  starArray() {\n    return Array(this.stars()).fill(this.stars());\n  }\n\n  showStarRate(num: number) {\n    console.log(num);\n  }\n}\n\n    \n\n    \n        \n  @for (item of starArray(); track $index) {\n  \n    }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (item of starArray(); track $index) {      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'RatingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            MatCardModule\n                            MatButtonModule\n                            ReactiveFormsModule\n                            RouterLink\n                                FormGroupComponent\n                                PasswordComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data$\n                            \n                            \n                                destroy$\n                            \n                            \n                                form\n                            \n                            \n                                regexErrors\n                            \n                            \n                                resetToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/reset-password/reset-password.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/reset-password/reset-password.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/auth/reset-password/reset-password.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest({\n    isLoading: this.store.select(selectIsLoading),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/reset-password/reset-password.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/reset-password/reset-password.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group(\n    {\n      password: ['', [Validators.required, Validators.pattern(regex.password)]],\n      confirm_password: [\n        '',\n        [Validators.required, Validators.pattern(regex.password)],\n      ],\n    },\n    { validators: [passwordMatchValidator()] }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/reset-password/reset-password.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regexErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : regexErrors\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/reset-password/reset-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/reset-password/reset-password.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AsyncPipe } from '@angular/common';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { Subject, combineLatest, takeUntil } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { FormGroupComponent, PasswordComponent } from '@shared/index';\n\nimport { markFormGroupTouched, regex, regexErrors } from '@app/shared';\nimport { authActions, selectIsLoading } from '@app/store/auth';\nimport { passwordMatchValidator } from '../validations/passwords-match';\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n  imports: [\n    AsyncPipe,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    RouterLink,\n    FormGroupComponent,\n    PasswordComponent,\n  ],\n})\nexport class ResetPasswordComponent implements OnDestroy, OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  regexErrors = regexErrors;\n\n  destroy$ = new Subject();\n\n  // Get the token from the route\n  resetToken = '';\n\n  data$ = combineLatest({\n    isLoading: this.store.select(selectIsLoading),\n  });\n\n  form = this.fb.nonNullable.group(\n    {\n      password: ['', [Validators.required, Validators.pattern(regex.password)]],\n      confirm_password: [\n        '',\n        [Validators.required, Validators.pattern(regex.password)],\n      ],\n    },\n    { validators: [passwordMatchValidator()] }\n  );\n\n  ngOnInit() {\n    this.activatedRoute.paramMap\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        this.resetToken = String(d.get('token'));\n      });\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      markFormGroupTouched(this.form);\n      return;\n    }\n\n    this.store.dispatch(\n      authActions.resetPassword({\n        request: {\n          dto: { password: this.form.getRawValue().password },\n          token: this.resetToken,\n        },\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        @if (data$ | async; as data) {\n\n  \n    \n      Reset Password\n      \n        Please choose a mixture of alphanumeric and special characters\n      \n\n      \n        \n          \n            \n              \n            \n\n            \n              \n            \n\n            \n              \n                Reset\n              \n            \n          \n        \n      \n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (data$ | async; as data) {            Reset Password              Please choose a mixture of alphanumeric and special characters                                                                                                                                                    Reset                                                        }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/controls/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ControlValueAccessorDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, useExisting: SelectComponent, multi: true }\n                \n            \n\n\n            \n                selector\n                app-select\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatSelectModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n            \n                styleUrl\n                ./select.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                multiple\n                            \n                            \n                                placeholder\n                            \n                            \n                                control\n                            \n                            \n                                destroy$\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Private\n                                propagateTouched\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setFormControl\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                multiple\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/select/select.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/select/select.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        multiple\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/select/select.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/select/select.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:84\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: T | null) => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:65\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:76\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:80\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFormControl\n                        \n                    \n                \n            \n            \n                \nsetFormControl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/select/select.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/select/select.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/select/select.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/controls/select/select.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/select/select.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateTouched\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ReactiveFormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ControlValueAccessorDirective } from '../directives/control-value-accessor.directive';\nimport { IControlItem } from '@app/models';\nimport { MatSelectModule } from '@angular/material/select';\n\n@Component({\n  selector: 'app-select',\n  standalone: true,\n  templateUrl: './select.component.html',\n  styleUrl: './select.component.scss',\n  imports: [ReactiveFormsModule, MatSelectModule],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: SelectComponent, multi: true },\n  ],\n})\nexport class SelectComponent extends ControlValueAccessorDirective {\n  placeholder = input();\n\n  multiple = input(false);\n\n  label = input.required();\n\n  id = input.required();\n\n  items = input.required();\n}\n\n    \n\n    \n        @if (control) {\n\n  @if (items()) {\n  \n    @if (multiple()) {\n    \n      {{ label() }}\n      \n        @for (item of items(); track $index) {\n        {{ item.label }}\n        }\n      \n    \n    } @else {\n    {{ label() }}\n    \n      @for (item of items(); track $index) {\n      {{ item.label }}\n      }\n    \n    }\n  \n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (control) {  @if (items()) {      @if (multiple()) {          {{ label() }}              @for (item of items(); track $index) {        {{ item.label }}        }              } @else {    {{ label() }}          @for (item of items(); track $index) {      {{ item.label }}      }        }    }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/storage.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n  set(key: string, data: unknown): void {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(data));\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  get(key: string): unknown {\n    try {\n      const item = sessionStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  remove(key: string): unknown {\n    try {\n      return sessionStorage.removeItem(key);\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubnavComponent.html":{"url":"components/SubnavComponent.html","title":"component - SubnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SubnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/subnav/subnav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subnav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n            \n                styles\n                \n      a {\n        display: flex;\n        align-content: center;\n        justify-content: space-between;\n        padding: 0.8rem;\n        color: var(--white);\n        transition: var(--transition);\n\n        &:hover {\n          text-decoration: underline;\n          background-color: var(--gray);\n        }\n      }\n    \n            \n\n            \n                template\n                One\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/subnav/subnav.component.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layout/subnav/subnav.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        subData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/subnav/subnav.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-subnav',\n  standalone: true,\n  imports: [RouterLink],\n  template: ` One `,\n  styles: [\n    `\n      a {\n        display: flex;\n        align-content: center;\n        justify-content: space-between;\n        padding: 0.8rem;\n        color: var(--white);\n        transition: var(--transition);\n\n        &:hover {\n          text-decoration: underline;\n          background-color: var(--gray);\n        }\n      }\n    `,\n  ],\n})\nexport class SubnavComponent implements OnInit {\n  constructor() {}\n\n  subData = input.required();\n\n  ngOnInit(): void {}\n}\n\n    \n\n\n    \n            \n      a {\n        display: flex;\n        align-content: center;\n        justify-content: space-between;\n        padding: 0.8rem;\n        color: var(--white);\n        transition: var(--transition);\n\n        &:hover {\n          text-decoration: underline;\n          background-color: var(--gray);\n        }\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'One'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'SubnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagFormsComponent.html":{"url":"components/TagFormsComponent.html","title":"component - TagFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tags/components/tag-forms/tag-forms.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tag-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                InputComponent\n                                FormGroupComponent\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tag-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tag-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addForm\n                            \n                            \n                                deleteTag\n                            \n                            \n                                formType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTag\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tags/components/tag-forms/tag-forms.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewTag\n                        \n                    \n                \n            \n            \n                \naddNewTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/components/tag-forms/tag-forms.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/components/tag-forms/tag-forms.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTag\n                        \n                    \n                \n            \n            \n                \nonDeleteTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/components/tag-forms/tag-forms.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/components/tag-forms/tag-forms.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITag\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/components/tag-forms/tag-forms.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/components/tag-forms/tag-forms.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\n\nimport {\n  InputComponent,\n  FormGroupComponent,\n  markFormGroupTouched,\n} from '@app/shared';\nimport { productActions } from '@app/store/products';\nimport { ITag } from '@app/models';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Add' | 'Edit' | 'Delete';\n\n@Component({\n  selector: 'app-tag-forms',\n  standalone: true,\n  templateUrl: './tag-forms.component.html',\n  styleUrl: './tag-forms.component.scss',\n  imports: [\n    ReactiveFormsModule,\n    InputComponent,\n    FormGroupComponent,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n})\nexport class TagFormsComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  formType: formType = 'Add';\n\n  deleteTag!: ITag;\n\n  addForm = this.fb.group({\n    name: ['', [Validators.required]],\n  });\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n\n    if (this.dialogData.deleteTag) {\n      this.deleteTag = this.dialogData.deleteTag;\n    }\n  }\n\n  addNewTag() {\n    if (this.addForm.invalid) {\n      markFormGroupTouched(this.addForm);\n      return;\n    }\n\n    this.store.dispatch(\n      productActions.createTag({\n        request: {\n          name: String(this.addForm.getRawValue().name),\n        },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  onDeleteTag() {\n    this.store.dispatch(\n      productActions.deleteTag({\n        request: { tagId: this.deleteTag.id },\n      })\n    );\n\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        @if (formType === 'Add') {\n\n  \n    \n      \n        \n      \n    \n\n    Add\n  \n\n} @else {\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteTag.name }}\n    \n\n    \n      Yes\n      Cancel\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (formType === \\'Add\\') {                                  Add  } @else {            Are you sure you want to delete?      {{ deleteTag.name }}              Yes      Cancel      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsComponent.html":{"url":"components/TagsComponent.html","title":"component - TagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tags/tags.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tags\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            MatTableModule\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            RouterLink\n                            MatButtonModule\n                            ClipboardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tags.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tags.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getTags\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tags/tags.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/tags.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/tags.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/tags.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/tags.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(tag: ITag)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/tags.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            ITag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/tags/tags.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/tags.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/tags.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Id', 'Name', 'Actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/tags.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/tags.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/tags.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/tags.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITag[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tags/tags.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { ITag } from '@app/models';\nimport { productActions, selectTags } from '@app/store/products';\nimport { TagFormsComponent } from './components/tag-forms/tag-forms.component';\nimport { Icons } from '@app/shared';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-tags',\n  standalone: true,\n  templateUrl: './tags.component.html',\n  styleUrl: './tags.component.scss',\n  imports: [\n    RouterLink,\n    MatTableModule,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    RouterLink,\n    MatButtonModule,\n    ClipboardModule,\n  ],\n})\nexport class TagsComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  icons = Icons;\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  tags: ITag[] = [];\n\n  // Mat table config\n  displayColumms: string[] = ['Id', 'Name', 'Actions'];\n\n  dataSource: any;\n\n  ngOnInit(): void {\n    this.getTags();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  openDialog() {\n    this.dialog.open(TagFormsComponent, {\n      width: '50%',\n      height: '50%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Add',\n      },\n    });\n  }\n\n  openDeleteDialog(tag: ITag) {\n    this.dialog.open(TagFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteTag: tag,\n      },\n    });\n  }\n\n  private getTags() {\n    this.store.dispatch(productActions.getProductCategories());\n    this.store\n      .select(selectTags)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.tags = d;\n          this.dataSource = new MatTableDataSource(this.tags);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Add Tag (+)\n    \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 10 }}\n          \n        \n\n        \n          Name\n          {{ el.name }}\n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Tag (+)                                              ID                      {{ el.id | slice : 0 : 10 }}                                    Name          {{ el.name }}                          Actions                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaComponent.html":{"url":"components/TextAreaComponent.html","title":"component - TextAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/controls/textarea/textarea.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ControlValueAccessorDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, useExisting: TextAreaComponent, multi: true }\n                \n            \n\n\n            \n                selector\n                app-textarea\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgStyle\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n            \n                styleUrl\n                ./textarea.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                labelColor\n                            \n                            \n                                placeholder\n                            \n                            \n                                control\n                            \n                            \n                                destroy$\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Private\n                                propagateTouched\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setFormControl\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                labelColor\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/textarea/textarea.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/textarea/textarea.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelColor\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/textarea/textarea.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/controls/textarea/textarea.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:84\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:32\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: T | null) => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:65\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:76\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:80\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFormControl\n                        \n                    \n                \n            \n            \n                \nsetFormControl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ControlValueAccessorDirective\n\n                        \n                    \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/textarea/textarea.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/textarea/textarea.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelColor\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/textarea/textarea.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/shared/controls/textarea/textarea.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateTouched\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorDirective\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorDirective:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\n\nimport { ControlValueAccessorDirective } from '../directives/control-value-accessor.directive';\nimport { NgStyle } from '@angular/common';\n\n@Component({\n  selector: 'app-textarea',\n  standalone: true,\n  templateUrl: './textarea.component.html',\n  styleUrl: './textarea.component.scss',\n  imports: [ReactiveFormsModule, NgStyle],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: TextAreaComponent, multi: true },\n  ],\n})\nexport class TextAreaComponent extends ControlValueAccessorDirective {\n  placeholder = input();\n\n  label = input.required();\n\n  id = input.required();\n\n  labelColor = input();\n}\n\n    \n\n    \n        @if (control) {\n{{ label() }}\n\n\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (control) {{{ label() }}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimesincePipe.html":{"url":"pipes/TimesincePipe.html","title":"pipe - TimesincePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimesincePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/timesince.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timesince\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/timesince.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timesince',\n  standalone: true,\n})\nexport class TimesincePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value) {\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n      if (seconds  = {\n        year: 31536000,\n        month: 2592000,\n        week: 604800,\n        day: 86400,\n        hour: 3600,\n        minute: 60,\n        second: 1,\n      };\n      let counter;\n      for (const i in intervals) {\n        counter = Math.floor(seconds / intervals[i]);\n        if (counter > 0)\n          if (counter === 1) {\n            return counter + ' ' + i + ' ago'; // singular (1 day ago)\n          } else {\n            return counter + ' ' + i + 's ago'; // plural (2 days ago)\n          }\n      }\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/products/reviews/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface User {\n  id: string;\n  firstname: string;\n  lastname: string;\n  image: string;\n}\n\nexport interface IReview {\n  id: string;\n  comment: string;\n  productId: string;\n  star: number;\n  User: User;\n  updatedAt?: string;\n}\n\nexport interface ICreateReview {\n  star: number;\n  comment: string;\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user/user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogModule\n                            MatCardModule\n                                RatingComponent\n                            CurrencyPipe\n                                ColorComponent\n                                UserFormsComponent\n                            MatButtonModule\n                            MatTabsModule\n                            DatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user/user.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe, DatePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { userActions, selectDbUser } from '@app/store/user';\nimport { Store } from '@ngrx/store';\nimport { Subject, switchMap, takeUntil } from 'rxjs';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\n\nimport { UserFormsComponent } from '../users/components/user-forms/user-forms.component';\nimport { IUser } from '@app/models';\nimport { ColorComponent, RatingComponent } from '@app/shared';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-user',\n  standalone: true,\n  templateUrl: './user.component.html',\n  styleUrl: './user.component.scss',\n  imports: [\n    MatDialogModule,\n    MatCardModule,\n    RatingComponent,\n    CurrencyPipe,\n    ColorComponent,\n    UserFormsComponent,\n    MatButtonModule,\n    MatTabsModule,\n    DatePipe,\n  ],\n})\nexport class UserComponent implements OnInit, OnDestroy {\n  constructor(\n    private dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private store: Store\n  ) {}\n\n  destroy$ = new Subject();\n\n  user!: IUser;\n\n  ngOnInit() {\n    this.getUser();\n  }\n\n  getUser() {\n    this.activatedRoute.paramMap\n      .pipe(\n        takeUntil(this.destroy$),\n        switchMap((data) => {\n          this.store.dispatch(\n            userActions.getSingleUser({\n              userId: String(data.get('id')),\n            })\n          );\n          return this.store.select(selectDbUser);\n        })\n      )\n      .subscribe((data) => {\n        if (data) {\n          this.user = data;\n          console.log(data);\n        }\n      });\n  }\n\n  openEditDialog(user: IUser) {\n    this.dialog.open(UserFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Edit',\n        editUser: user,\n      },\n    });\n  }\n\n  openDeleteDialog(user: IUser) {\n    this.dialog.open(UserFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteUser: user,\n      },\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        @if (user) {\n\n\n  \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            {{ user.firstname }} {{ user.lastname }}\n          \n\n          \n            Email\n            {{ user.email }}\n          \n\n          \n            Created At\n            {{ user.createdAt | date }}\n          \n\n          \n            Role\n            {{ user.role }}\n          \n\n          \n            Blocked\n            {{ user.blocked }}\n          \n\n          \n            Mobile\n            {{ user.mobile }}\n          \n\n          \n            Updated At\n            {{ user.updatedAt | date }}\n          \n\n          @if (user.Address) {\n          \n            Address 1\n            {{ user.Address.address1 }}\n          \n\n          \n            Address 2\n            {{ user.Address.address2 }}\n          \n\n          \n            State\n            {{ user.Address.state }}\n          \n\n          \n            City\n            {{ user.Address.city }}\n          \n\n          \n            Zip Code\n            {{ user.Address.zipCode }}\n          \n\n          \n            Other\n            {{ user.Address.other }}\n          \n          }\n\n          \n            \n              Delete\n            \n            \n              {{ user.blocked ? \"UnBlock\" : \"Block\" }}\n            \n          \n        \n      \n    \n  \n\n  @if (user.Cart.length) {\n  \n    \n      \n        \n          \n            Product Id\n            Color\n            Quantity\n            Price\n          \n        \n\n        \n          @for (item of user.Cart; track $index) {\n          \n            {{ item.productId }}\n            {{ item.color }}\n            {{ item.quantity }}\n            \n              {{ item.price | currency }}\n            \n          \n          }\n        \n      \n    \n  \n  } @if (user.Orders.length) {\n  \n    \n      \n        \n          \n            Id\n            Total Price\n            Paid At\n          \n        \n\n        \n          @for (item of user.Orders; track $index) {\n          \n            {{ item.id }}\n            \n              {{ item.totalPrice | currency }}\n            \n            \n              {{ item.paidAt | date }}\n            \n          \n          }\n        \n      \n    \n  \n  } @if (user.Compare.length) {\n  \n    \n      \n        \n          \n            Id\n            Product Id\n            Title\n            Price\n          \n        \n\n        \n          @for (item of user.Compare; track $index) {\n          \n            {{ item.id }}\n            {{ item.productId }}\n            {{ item.Product.title }}\n            \n              {{ item.Product.price | currency }}\n            \n          \n          }\n        \n      \n    \n  \n  } @if (user.Wishlist.length) {\n  \n    \n      \n        \n          \n            Id\n            Product Id\n            Title\n            Price\n          \n        \n\n        \n          @for (item of user.Wishlist; track $index) {\n          \n            {{ item.id }}\n            {{ item.productId }}\n            {{ item.Product.title }}\n            \n              {{ item.Product.price | currency }}\n            \n          \n          }\n        \n      \n    \n  \n  }\n\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (user) {                                                                                          {{ user.firstname }} {{ user.lastname }}                                Email            {{ user.email }}                                Created At            {{ user.createdAt | date }}                                Role            {{ user.role }}                                Blocked            {{ user.blocked }}                                Mobile            {{ user.mobile }}                                Updated At            {{ user.updatedAt | date }}                    @if (user.Address) {                      Address 1            {{ user.Address.address1 }}                                Address 2            {{ user.Address.address2 }}                                State            {{ user.Address.state }}                                City            {{ user.Address.city }}                                Zip Code            {{ user.Address.zipCode }}                                Other            {{ user.Address.other }}                    }                                    Delete                                      {{ user.blocked ? \"UnBlock\" : \"Block\" }}                                            @if (user.Cart.length) {                                          Product Id            Color            Quantity            Price                                    @for (item of user.Cart; track $index) {                      {{ item.productId }}            {{ item.color }}            {{ item.quantity }}                          {{ item.price | currency }}                                }                      } @if (user.Orders.length) {                                          Id            Total Price            Paid At                                    @for (item of user.Orders; track $index) {                      {{ item.id }}                          {{ item.totalPrice | currency }}                                      {{ item.paidAt | date }}                                }                      } @if (user.Compare.length) {                                          Id            Product Id            Title            Price                                    @for (item of user.Compare; track $index) {                      {{ item.id }}            {{ item.productId }}            {{ item.Product.title }}                          {{ item.Product.price | currency }}                                }                      } @if (user.Wishlist.length) {                                          Id            Product Id            Title            Price                                    @for (item of user.Wishlist; track $index) {                      {{ item.id }}            {{ item.productId }}            {{ item.Product.title }}                          {{ item.Product.price | currency }}                                }                      }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFormsComponent.html":{"url":"components/UserFormsComponent.html","title":"component - UserFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users/components/user-forms/user-forms.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-forms\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            ReactiveFormsModule\n                                InputComponent\n                                FormGroupComponent\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-forms.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-forms.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                formType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteUser\n                            \n                            \n                                onEditUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialogData: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users/components/user-forms/user-forms.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/components/user-forms/user-forms.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteUser\n                        \n                    \n                \n            \n            \n                \nonDeleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/components/user-forms/user-forms.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditUser\n                        \n                    \n                \n            \n            \n                \nonEditUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/components/user-forms/user-forms.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/components/user-forms/user-forms.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/components/user-forms/user-forms.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         formType\n\n                    \n                \n                \n                    \n                        Default value : 'Edit'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/components/user-forms/user-forms.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { MatCardModule } from '@angular/material/card';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogModule,\n  MatDialogRef,\n} from '@angular/material/dialog';\n\nimport { InputComponent, FormGroupComponent } from '@app/shared';\nimport { userActions } from '@app/store/user';\nimport { IUser } from '@app/models';\nimport { MatButtonModule } from '@angular/material/button';\n\ntype formType = 'Edit' | 'Delete';\n\n@Component({\n  selector: 'app-user-forms',\n  standalone: true,\n  templateUrl: './user-forms.component.html',\n  styleUrl: './user-forms.component.scss',\n  imports: [\n    MatCardModule,\n    ReactiveFormsModule,\n    InputComponent,\n    FormGroupComponent,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n})\nexport class UserFormsComponent implements OnInit {\n  constructor(\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any,\n    private dialogRef: MatDialogRef\n  ) {}\n\n  formType: formType = 'Edit';\n\n  deleteUser!: IUser;\n\n  editUser!: IUser;\n\n  ngOnInit(): void {\n    this.formType = this.dialogData.formType;\n\n    if (this.dialogData.deleteUser) {\n      this.deleteUser = this.dialogData.deleteUser;\n    }\n    if (this.dialogData.editUser) {\n      this.editUser = this.dialogData.editUser;\n    }\n  }\n\n  onDeleteUser() {\n    this.store.dispatch(\n      userActions.deleteUser({\n        userId: this.deleteUser.id,\n      })\n    );\n\n    this.dialogRef.close();\n  }\n\n  onEditUser() {\n    if (this.editUser.blocked) {\n      this.store.dispatch(\n        userActions.unblockBlockUser({\n          userId: this.editUser.id,\n        })\n      );\n      this.dialogRef.close();\n      return;\n    } else if (!this.editUser.blocked) {\n      this.store.dispatch(\n        userActions.blockUser({\n          userId: this.editUser.id,\n        })\n      );\n      this.dialogRef.close();\n    }\n  }\n}\n\n    \n\n    \n        @if (formType === 'Edit') {\n\n  \n    \n      Are you sure you want to {{ editUser.blocked ? \"UnBlock\" : \"Block\" }}\n      {{ editUser.firstname }}\n    \n\n    \n      Yes\n      Cancel\n    \n  \n\n\n}@else if (formType === 'Delete') {\n\n\n  \n    \n      Are you sure you want to delete?\n      {{ deleteUser.firstname }}\n    \n\n    \n      Yes\n      Cancel\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (formType === \\'Edit\\') {            Are you sure you want to {{ editUser.blocked ? \"UnBlock\" : \"Block\" }}      {{ editUser.firstname }}              Yes      Cancel      }@else if (formType === \\'Delete\\') {            Are you sure you want to delete?      {{ deleteUser.firstname }}              Yes      Cancel      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                getSingleUser\n                            \n                            \n                                unblockUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockUser\n                        \n                    \n                \n            \n            \n                \nblockUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers(query?: UsersQueryType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            UsersQueryType\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleUser\n                        \n                    \n                \n            \n            \n                \ngetSingleUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockUser\n                        \n                    \n                \n            \n            \n                \nunblockUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.server_url + '/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { IUser, UsersQueryType } from '@app/models';\nimport { environment } from '@environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  url = environment.server_url + '/users';\n\n  constructor(private http: HttpClient) {}\n\n  getAllUsers(query?: UsersQueryType): Observable {\n    const obj = {\n      fname: '',\n      lname: '',\n      mobile: '',\n      email: '',\n      page: '',\n      limit: '',\n    };\n\n    if (query) {\n      obj.fname = String(query.fname);\n      obj.lname = String(query.lname);\n      obj.mobile = String(query.mobile);\n      obj.email = String(query.email);\n      obj.page = String(query.page);\n      obj.limit = String(query.limit);\n    }\n\n    let params = new HttpParams({ fromObject: obj });\n\n    return this.http.get(this.url, { params });\n  }\n\n  getSingleUser(userId: string): Observable {\n    return this.http.get(`${this.url}/admin/${userId}`);\n  }\n\n  deleteUser(userId: string): Observable {\n    return this.http.delete(`${this.url}/${userId}`);\n  }\n\n  blockUser(userId: string): Observable {\n    return this.http.post(`${this.url}/block/${userId}`, {});\n  }\n\n  unblockUser(userId: string): Observable {\n    return this.http.post(`${this.url}/unblock/${userId}`, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            JsonPipe\n                            MatTableModule\n                                ColorComponent\n                            FontAwesomeModule\n                            MatPaginatorModule\n                            MatSortModule\n                            SlicePipe\n                            MatCardModule\n                            RouterLink\n                            NgStyle\n                            MatButtonModule\n                            ClipboardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n            \n                styleUrl\n                ./users.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                destroy$\n                            \n                            \n                                displayColumms\n                            \n                            \n                                icons\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                            \n                                    Private\n                                getUsers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users/users.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterChange\n                        \n                    \n                \n            \n            \n                \nfilterChange(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayColumms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Id',\n    'Image',\n    'First Name',\n    'Last Name',\n    'Email',\n    'Mobile',\n    'Blocked',\n    'Actions',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Icons\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatPaginator)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild(MatSort)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { JsonPipe, NgStyle, SlicePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit, viewChild } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { IUser } from '@app/models';\nimport { Icons, ColorComponent } from '@app/shared';\nimport { UserFormsComponent } from './components/user-forms/user-forms.component';\nimport { selectDbUsers, userActions } from '@app/store/user';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  templateUrl: './users.component.html',\n  styleUrl: './users.component.scss',\n  imports: [\n    RouterLink,\n    JsonPipe,\n    MatTableModule,\n    ColorComponent,\n    FontAwesomeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SlicePipe,\n    MatCardModule,\n    RouterLink,\n    NgStyle,\n    MatButtonModule,\n    ClipboardModule,\n  ],\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n  constructor(private store: Store, private dialog: MatDialog) {}\n\n  destroy$ = new Subject();\n\n  paginator = viewChild(MatPaginator);\n\n  sort = viewChild(MatSort);\n\n  // Mat table config\n  displayColumms: string[] = [\n    'Id',\n    'Image',\n    'First Name',\n    'Last Name',\n    'Email',\n    'Mobile',\n    'Blocked',\n    'Actions',\n  ];\n\n  dataSource: any;\n\n  users: IUser[] = [];\n\n  icons = Icons;\n\n  ngOnInit(): void {\n    this.getUsers();\n  }\n\n  filterChange(e: any) {\n    this.dataSource.filter = e.target.value;\n  }\n\n  private getUsers() {\n    this.store.dispatch(userActions.getAllUsers({}));\n    this.store\n      .select(selectDbUsers)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((d) => {\n        if (d) {\n          this.users = d;\n          this.dataSource = new MatTableDataSource(this.users);\n          this.dataSource.paginator = this.paginator();\n          this.dataSource.sort = this.sort();\n        }\n      });\n  }\n\n  openEditDialog(user: IUser) {\n    this.dialog.open(UserFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Edit',\n        editUser: user,\n      },\n    });\n  }\n\n  openDeleteDialog(user: IUser) {\n    this.dialog.open(UserFormsComponent, {\n      width: '40%',\n      height: '40%',\n      enterAnimationDuration: 500,\n      data: {\n        formType: 'Delete',\n        deleteUser: user,\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next('');\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          ID\n          \n            {{ el.id | slice : 0 : 6 }}\n          \n        \n\n        \n          Image\n          \n            \n          \n        \n\n        \n          First Name\n          {{ el.firstname }}\n        \n\n        \n          Last Name\n          {{ el.lastname }}\n        \n\n        \n          Mobile\n          {{ el.mobile }}\n        \n\n        \n          Email\n          {{ el.email }}\n        \n\n        \n          Blocked\n          \n            \n              {{ el.blocked ? \"Unblock\" : \"Block\" }}\n            \n          \n        \n\n        \n          Actions\n          \n            \n              \n                \n              \n              \n                \n              \n            \n          \n        \n\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            ID                      {{ el.id | slice : 0 : 6 }}                                    Image                                                          First Name          {{ el.firstname }}                          Last Name          {{ el.lastname }}                          Mobile          {{ el.mobile }}                          Email          {{ el.email }}                          Blocked                                    {{ el.blocked ? \"Unblock\" : \"Block\" }}                                                Actions                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogCategoriesComponent', 'selector': 'app-blog-categories'},{'name': 'BlogCategoryFormsComponent', 'selector': 'app-blog-category-forms'},{'name': 'BlogsComponent', 'selector': 'app-blogs'},{'name': 'BlogsFormComponent', 'selector': 'app-blogs-form'},{'name': 'BrandFormsComponent', 'selector': 'app-brand-forms'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoriesFormsComponent', 'selector': 'app-categories-forms'},{'name': 'ColorComponent', 'selector': 'app-color'},{'name': 'ColorsComponent', 'selector': 'app-colors'},{'name': 'ColorsFormsComponent', 'selector': 'app-colors-forms'},{'name': 'CouponFormsComponent', 'selector': 'app-coupon-forms'},{'name': 'CouponsComponent', 'selector': 'app-coupons'},{'name': 'DateComponent', 'selector': 'app-date'},{'name': 'EnquiriesComponent', 'selector': 'app-enquiries'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'FormGroupComponent', 'selector': 'app-form-group'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PasswordComponent', 'selector': 'app-password'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'ProductFormsComponent', 'selector': 'app-product-forms'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RatingComponent', 'selector': 'app-rating'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SubnavComponent', 'selector': 'app-subnav'},{'name': 'TagFormsComponent', 'selector': 'app-tag-forms'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'TextAreaComponent', 'selector': 'app-textarea'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserFormsComponent', 'selector': 'app-user-forms'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ControlValueAccessorDirective', 'selector': '[appControlValueAccessor]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/logged.guard.ts\n            \n            variable\n            loggedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/role.guard.ts\n            \n            variable\n            roleGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            variable\n            errorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/jwt.interceptor.ts\n            \n            variable\n            jwtInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/blog.service.ts\n            \n            injectable\n            BlogService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/enquiry.service.ts\n            \n            injectable\n            EnquiryService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layout/layout/data.ts\n            \n            interface\n            IData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layout/layout/data.ts\n            \n            variable\n            NavData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/layout/subnav/subnav.component.ts\n            \n            component\n            SubnavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/api/index.ts\n            \n            interface\n            IBackendError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/api/index.ts\n            \n            interface\n            IBackendSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/api/index.ts\n            \n            interface\n            IBulkDeleteResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/auth/index.ts\n            \n            interface\n            IForgotPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/auth/index.ts\n            \n            interface\n            ILogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/auth/index.ts\n            \n            interface\n            IRegister\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/auth/index.ts\n            \n            interface\n            IResetPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/blogs/index.ts\n            \n            interface\n            IBlog\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/blogs/index.ts\n            \n            interface\n            IBlogCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/blogs/index.ts\n            \n            interface\n            ICreateBlog\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/blogs/index.ts\n            \n            interface\n            ICreateBlogCategory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/common/index.ts\n            \n            interface\n            ICoupon\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/common/index.ts\n            \n            interface\n            ICreateCoupon\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/common/index.ts\n            \n            interface\n            IEnquiry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/controls/index.ts\n            \n            interface\n            IControlItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/customer/cart/index.ts\n            \n            interface\n            ICart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/customer/cart/index.ts\n            \n            interface\n            ICartData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/customer/cart/index.ts\n            \n            interface\n            ICreateCart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/customer/cart/index.ts\n            \n            interface\n            IDeleteCatProductRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/customer/cart/index.ts\n            \n            interface\n            IUpdateCartRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/customer/order/index.ts\n            \n            interface\n            IOrderItemResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/customer/order/index.ts\n            \n            interface\n            IOrderResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/products/product-supp/index.ts\n            \n            interface\n            IColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/products/product-supp/index.ts\n            \n            interface\n            ICreateCommonProductSup\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/products/product-supp/index.ts\n            \n            interface\n            IProductBrand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/products/product-supp/index.ts\n            \n            interface\n            IProductCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/products/product-supp/index.ts\n            \n            interface\n            ITag\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/products/product/index.ts\n            \n            interface\n            ICreateProduct\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/products/product/index.ts\n            \n            interface\n            INamedProductAttr\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/products/product/index.ts\n            \n            interface\n            IProduct\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/products/reviews/index.ts\n            \n            interface\n            ICreateReview\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/products/reviews/index.ts\n            \n            interface\n            IReview\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/products/reviews/index.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/user/index.ts\n            \n            interface\n            IAddress\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/user/index.ts\n            \n            interface\n            ICreateAddress\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/user/index.ts\n            \n            interface\n            IUpdateUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/user/index.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/pages/auth/auth.routes.ts\n            \n            variable\n            auth_routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/auth/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/auth/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/auth/validations/passwords-match.ts\n            \n            function\n            passwordMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/blog-categories/blog-categories.component.ts\n            \n            component\n            BlogCategoriesComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts\n            \n            component\n            BlogCategoryFormsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/blogs/blogs.component.ts\n            \n            component\n            BlogsComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/pages/blogs/components/blogs-form/blogs-form.component.ts\n            \n            component\n            BlogsFormComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/brands/brands.component.ts\n            \n            component\n            BrandsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/brands/components/brand-forms/brand-forms.component.ts\n            \n            component\n            BrandFormsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/categories/components/categories-forms/categories-forms.component.ts\n            \n            component\n            CategoriesFormsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/colors/colors.component.ts\n            \n            component\n            ColorsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/colors/components/colors-forms/colors-forms.component.ts\n            \n            component\n            ColorsFormsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts\n            \n            component\n            CouponFormsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/common/coupons/coupons.component.ts\n            \n            component\n            CouponsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/common/enquiries/enquiries.component.ts\n            \n            component\n            EnquiriesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/orders/orders.component.ts\n            \n            component\n            OrdersComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.component.ts\n            \n            component\n            ProductComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/products/components/product-forms/product-forms.component.ts\n            \n            component\n            ProductFormsComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/pages/products/products.component.ts\n            \n            component\n            ProductsComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/pages/tags/components/tag-forms/tag-forms.component.ts\n            \n            component\n            TagFormsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/tags/tags.component.ts\n            \n            component\n            TagsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/users/components/user-forms/user-forms.component.ts\n            \n            component\n            UserFormsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/shared/controls/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/controls/directives/control-value-accessor.directive.ts\n            \n            directive\n            ControlValueAccessorDirective\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/controls/form-group/form-group.component.ts\n            \n            component\n            FormGroupComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/controls/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/controls/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/shared/controls/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/controls/textarea/textarea.component.ts\n            \n            component\n            TextAreaComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/shared/icons/index.ts\n            \n            variable\n            Icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/indicators/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/indicators/loader/loader.interceptor.ts\n            \n            variable\n            loaderInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/indicators/loader/loader.interceptor.ts\n            \n            variable\n            SkipLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/indicators/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/timesince.pipe.ts\n            \n            pipe\n            TimesincePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/ui/color/color.component.ts\n            \n            component\n            ColorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/ui/color/rating/rating.component.ts\n            \n            component\n            RatingComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/utils/form.ts\n            \n            variable\n            markFormGroupTouched\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/regex.ts\n            \n            variable\n            regex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/regex.ts\n            \n            variable\n            regexErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.actions.ts\n            \n            variable\n            authActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            forgotPasswordEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            loginEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            logoutEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            redirectAfterLoginSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            redirectAfterLogoutSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            redirectAfterRefreshSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            redirectAfterResetSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            refreshTokenEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.effects.ts\n            \n            variable\n            resetPasswordEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.models.ts\n            \n            interface\n            IAuthStoreState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.reducers.ts\n            \n            variable\n            authFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/auth/auth.reducers.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.actions.ts\n            \n            variable\n            blogActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.effects.ts\n            \n            variable\n            createBlogCategoryEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.effects.ts\n            \n            variable\n            createProductEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.effects.ts\n            \n            variable\n            deleteBlogCategoyEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.effects.ts\n            \n            variable\n            deleteBlogEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.effects.ts\n            \n            variable\n            getAllBlogCategoriesEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.effects.ts\n            \n            variable\n            getAllBlogsEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.effects.ts\n            \n            variable\n            getSingleBlogEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.models.ts\n            \n            interface\n            IBlogStoreState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.reducers.ts\n            \n            variable\n            blogFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/blogs/blogs.reducers.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.actions.ts\n            \n            variable\n            commonActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.effects.ts\n            \n            variable\n            createCouponEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.effects.ts\n            \n            variable\n            deleteCouponEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.effects.ts\n            \n            variable\n            deleteEnquiryEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.effects.ts\n            \n            variable\n            getAllCouponsEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.effects.ts\n            \n            variable\n            getEnquiriesEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.models.ts\n            \n            interface\n            ICommonStoreState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/store/common/common.reducers.ts\n            \n            variable\n            commonFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/common/common.reducers.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/customer/customer.actions.ts\n            \n            variable\n            customerActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/customer/customer.effects.ts\n            \n            variable\n            getOrdersEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/customer/customer.models.ts\n            \n            interface\n            ICustomerStoreState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/customer/customer.reducers.ts\n            \n            variable\n            customerFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/customer/customer.reducers.ts\n            \n            variable\n            initalState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/customer/customer.reducers.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.actions.ts\n            \n            variable\n            productActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            createBrandEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            createColorEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            createProductCategoriesEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            createProductEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            createTagEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            deleteColorEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            deleteProductBrandEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            deleteProductCategoyEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            deleteProductEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            deleteTagEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            getAllProductsEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            getBrandsEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            getColorsEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            getProductCategoriesEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            getSingleProductEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            getTagsEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.effects.ts\n            \n            variable\n            updateProductEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.model.ts\n            \n            interface\n            IProductStoreState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/store/products/products.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.reducers.ts\n            \n            variable\n            productFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/products/products.reducers.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.actions.ts\n            \n            variable\n            userActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.effects.ts\n            \n            variable\n            blockUserEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.effects.ts\n            \n            variable\n            deleteUserEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.effects.ts\n            \n            variable\n            getSingleUserEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.effects.ts\n            \n            variable\n            getUsersEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.effects.ts\n            \n            variable\n            unblockUserEffect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.model.ts\n            \n            interface\n            IUserStoreState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/store/user/user.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.reducers.ts\n            \n            variable\n            userFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/user/user.reducers.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/cdk : ^17.3.8\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/material : ^17.3.8\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @auth0/angular-jwt : ^5.2.0\n        \n            @fortawesome/angular-fontawesome : ^0.14.1\n        \n            @fortawesome/fontawesome-svg-core : ^6.4.2\n        \n            @fortawesome/free-brands-svg-icons : ^6.4.2\n        \n            @fortawesome/free-regular-svg-icons : ^6.4.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.4.2\n        \n            @ngrx/effects : ^17.2.0\n        \n            @ngrx/store : ^17.2.0\n        \n            @ngrx/store-devtools : ^17.2.0\n        \n            ngx-cookie-service : ^17.1.0\n        \n            ngx-toastr : ^18.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            passwordMatchValidator   (src/.../passwords-match.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/pages/auth/validations/passwords-match.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAdmin\nThis project was generated with Angular CLI version 17.3.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    44 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            availableType   (src/.../index.ts)\n                        \n                        \n                            BlogQueryType   (src/.../index.ts)\n                        \n                        \n                            ControlItemValueType   (src/.../index.ts)\n                        \n                        \n                            formType   (src/.../blog-category-forms.component.ts)\n                        \n                        \n                            formType   (src/.../blogs-form.component.ts)\n                        \n                        \n                            formType   (src/.../brand-forms.component.ts)\n                        \n                        \n                            formType   (src/.../categories-forms.component.ts)\n                        \n                        \n                            formType   (src/.../colors-forms.component.ts)\n                        \n                        \n                            formType   (src/.../product-forms.component.ts)\n                        \n                        \n                            formType   (src/.../tag-forms.component.ts)\n                        \n                        \n                            formType   (src/.../user-forms.component.ts)\n                        \n                        \n                            formType   (src/.../coupon-forms.component.ts)\n                        \n                        \n                            InputType   (src/.../controls.type.ts)\n                        \n                        \n                            OrderQueryType   (src/.../index.ts)\n                        \n                        \n                            PasswordType   (src/.../password.component.ts)\n                        \n                        \n                            ProductQueryType   (src/.../index.ts)\n                        \n                        \n                            UsersQueryType   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/products/product/index.ts\n    \n    \n        \n            \n                \n                    \n                    availableType\n                \n            \n            \n                \n                        \"true\" | \"false\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProductQueryType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/blogs/index.ts\n    \n    \n        \n            \n                \n                    \n                    BlogQueryType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/controls/index.ts\n    \n    \n        \n            \n                \n                    \n                    ControlItemValueType\n                \n            \n            \n                \n                        number | boolean | string\n\n                \n            \n        \n    \n    src/app/pages/blog-categories/components/blog-category-forms/blog-category-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/blogs/components/blogs-form/blogs-form.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/brands/components/brand-forms/brand-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/categories/components/categories-forms/categories-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/colors/components/colors-forms/colors-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/products/components/product-forms/product-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/tags/components/tag-forms/tag-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/users/components/user-forms/user-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/pages/common/coupons/components/coupon-forms/coupon-forms.component.ts\n    \n    \n        \n            \n                \n                    \n                    formType\n                \n            \n            \n                \n                        \"Add\" | \"Edit\" | \"Delete\"\n\n                \n            \n        \n    \n    src/app/shared/controls/types/controls.type.ts\n    \n    \n        \n            \n                \n                    \n                    InputType\n                \n            \n            \n                \n                        \"text\" | \"password\" | \"email\" | \"date\" | \"number\" | \"checkbox\" | \"radio\"\n\n                \n            \n        \n    \n    src/app/models/customer/order/index.ts\n    \n    \n        \n            \n                \n                    \n                    OrderQueryType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/shared/controls/password/password.component.ts\n    \n    \n        \n            \n                \n                    \n                    PasswordType\n                \n            \n            \n                \n                        \"text\" | \"password\"\n\n                \n            \n        \n    \n    src/app/models/user/index.ts\n    \n    \n        \n            \n                \n                    \n                    UsersQueryType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
